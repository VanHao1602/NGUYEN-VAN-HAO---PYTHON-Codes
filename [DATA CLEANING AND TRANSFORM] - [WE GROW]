{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "qbYzXGPX7ZVh"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# TABLE VẬN ĐƠN"
      ],
      "metadata": {
        "id": "fclw57gH7myY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Import dữ liệu\n",
        "VanDonRaw = pd.read_excel('/content/drive/MyDrive/Vận đơn.xlsx')\n",
        "VanDonRaw.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 505
        },
        "id": "jbdw4PAE8FyT",
        "outputId": "83d5894e-5fbe-4586-d6eb-4ab5f1563607"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   STT Mã đơn hàng                                   Ghi chú đơn hàng  \\\n",
              "0  1.0    SON25144                                                NaN   \n",
              "1  NaN         NaN                                                NaN   \n",
              "2  2.0    SON24883  TẶNG SÁCH LẺ PHẦN 2 CHO PHỤ HUỲNH\\ngiao trong ...   \n",
              "3  NaN         NaN                                                NaN   \n",
              "4  3.0    SON24943                          Giao trong giờ hành chính   \n",
              "\n",
              "  Tags đơn hàng Nhân viên tạo đơn           Chi nhánh Nguồn     Mã vận đơn  \\\n",
              "0           NaN  Nguyễn Thị Huyền  Chi nhánh mặc định   Web       G87L96F3   \n",
              "1           NaN               NaN                 NaN   NaN            NaN   \n",
              "2           NaN  Đỗ Thị Hồng Ngọc  Chi nhánh mặc định   Web       G87L9VTM   \n",
              "3           NaN               NaN                 NaN   NaN            NaN   \n",
              "4           NaN  Đỗ Thị Hồng Ngọc  Chi nhánh mặc định   Web  NSAPOAAAAZPQF   \n",
              "\n",
              "  Tình trạng gói hàng Trạng thái đối tác  ...  \\\n",
              "0        Đã giao hàng    Giao thành công  ...   \n",
              "1                 NaN                NaN  ...   \n",
              "2        Đã giao hàng    Giao thành công  ...   \n",
              "3                 NaN                NaN  ...   \n",
              "4        Đã giao hàng    Giao thành công  ...   \n",
              "\n",
              "                                        Tên sản phẩm Ghi chú sản phẩm  \\\n",
              "0                                   Sách TeenUp - PH              NaN   \n",
              "1                               BỘ SÁCH TEENUP - KID              NaN   \n",
              "2                               Sách TeenUp - Phần 2              NaN   \n",
              "3                              BỘ SÁCH TEENUP - TEEN              NaN   \n",
              "4  COMBO KID - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ T...              NaN   \n",
              "\n",
              "   Số lượng Serial Đơn vị tính Đơn giá CK sản phẩm  CK tổng đơn hàng  \\\n",
              "0         1    NaN         NaN       0           0                 0   \n",
              "1         1    NaN         NaN  499000           0                 0   \n",
              "2         1    NaN         NaN       0           0                 0   \n",
              "3         1    NaN          Bộ  639000      140000                 0   \n",
              "4         1    NaN         NaN  920000      140000                 0   \n",
              "\n",
              "  Thuế cho từng sản phẩm Tổng tiền hàng  \n",
              "0                      0              0  \n",
              "1                      0         499000  \n",
              "2                      0              0  \n",
              "3                      0         499000  \n",
              "4                      0         780000  \n",
              "\n",
              "[5 rows x 45 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9c01c69a-e4d3-4a01-98d5-4572a2330fa0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>STT</th>\n",
              "      <th>Mã đơn hàng</th>\n",
              "      <th>Ghi chú đơn hàng</th>\n",
              "      <th>Tags đơn hàng</th>\n",
              "      <th>Nhân viên tạo đơn</th>\n",
              "      <th>Chi nhánh</th>\n",
              "      <th>Nguồn</th>\n",
              "      <th>Mã vận đơn</th>\n",
              "      <th>Tình trạng gói hàng</th>\n",
              "      <th>Trạng thái đối tác</th>\n",
              "      <th>...</th>\n",
              "      <th>Tên sản phẩm</th>\n",
              "      <th>Ghi chú sản phẩm</th>\n",
              "      <th>Số lượng</th>\n",
              "      <th>Serial</th>\n",
              "      <th>Đơn vị tính</th>\n",
              "      <th>Đơn giá</th>\n",
              "      <th>CK sản phẩm</th>\n",
              "      <th>CK tổng đơn hàng</th>\n",
              "      <th>Thuế cho từng sản phẩm</th>\n",
              "      <th>Tổng tiền hàng</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>SON25144</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Nguyễn Thị Huyền</td>\n",
              "      <td>Chi nhánh mặc định</td>\n",
              "      <td>Web</td>\n",
              "      <td>G87L96F3</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>...</td>\n",
              "      <td>Sách TeenUp - PH</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>BỘ SÁCH TEENUP - KID</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>499000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>499000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2.0</td>\n",
              "      <td>SON24883</td>\n",
              "      <td>TẶNG SÁCH LẺ PHẦN 2 CHO PHỤ HUỲNH\\ngiao trong ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Chi nhánh mặc định</td>\n",
              "      <td>Web</td>\n",
              "      <td>G87L9VTM</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>...</td>\n",
              "      <td>Sách TeenUp - Phần 2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>BỘ SÁCH TEENUP - TEEN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Bộ</td>\n",
              "      <td>639000</td>\n",
              "      <td>140000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>499000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3.0</td>\n",
              "      <td>SON24943</td>\n",
              "      <td>Giao trong giờ hành chính</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Chi nhánh mặc định</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQF</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>...</td>\n",
              "      <td>COMBO KID - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ T...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>920000</td>\n",
              "      <td>140000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>780000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 45 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c01c69a-e4d3-4a01-98d5-4572a2330fa0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9c01c69a-e4d3-4a01-98d5-4572a2330fa0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9c01c69a-e4d3-4a01-98d5-4572a2330fa0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cb630b50-58e3-4f19-a246-28d376dba833\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb630b50-58e3-4f19-a246-28d376dba833')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cb630b50-58e3-4f19-a246-28d376dba833 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "VanDonRaw"
            }
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Get info data\n",
        "VanDonRaw.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8teCEyhF8fJ2",
        "outputId": "d1d7d7cc-81bc-4582-f3cf-d92e2d062db7"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 7944 entries, 0 to 7943\n",
            "Data columns (total 45 columns):\n",
            " #   Column                       Non-Null Count  Dtype         \n",
            "---  ------                       --------------  -----         \n",
            " 0   STT                          5820 non-null   float64       \n",
            " 1   Mã đơn hàng                  5820 non-null   object        \n",
            " 2   Ghi chú đơn hàng             566 non-null    object        \n",
            " 3   Tags đơn hàng                27 non-null     object        \n",
            " 4   Nhân viên tạo đơn            5820 non-null   object        \n",
            " 5   Chi nhánh                    5820 non-null   object        \n",
            " 6   Nguồn                        5820 non-null   object        \n",
            " 7   Mã vận đơn                   5820 non-null   object        \n",
            " 8   Tình trạng gói hàng          5820 non-null   object        \n",
            " 9   Trạng thái đối tác           5819 non-null   object        \n",
            " 10  Lý do hủy đơn                0 non-null      float64       \n",
            " 11  Ngày đóng gói                5820 non-null   datetime64[ns]\n",
            " 12  Ngày hẹn giao                0 non-null      float64       \n",
            " 13  Ngày xuất kho                5820 non-null   datetime64[ns]\n",
            " 14  Ngày giao hàng               5115 non-null   datetime64[ns]\n",
            " 15  Đối tác giao hàng            5820 non-null   object        \n",
            " 16  Dịch vụ giao hàng            5819 non-null   object        \n",
            " 17  Khối lượng(g)                5820 non-null   float64       \n",
            " 18  Kích thước(DxRxC)            5820 non-null   object        \n",
            " 19  Tên người nhận               5820 non-null   object        \n",
            " 20  SĐT người nhận               5820 non-null   object        \n",
            " 21  Địa chỉ giao hàng            5820 non-null   object        \n",
            " 22  Tỉnh/Thành                   5820 non-null   object        \n",
            " 23  Quận/Huyện                   5820 non-null   object        \n",
            " 24  Phường xã                    5820 non-null   object        \n",
            " 25  Trạng thái đối soát          5820 non-null   object        \n",
            " 26  Tiền khách phải trả cho đơn  5820 non-null   float64       \n",
            " 27  Khách hàng đã trả            5033 non-null   float64       \n",
            " 28  Hình thức thanh toán         5033 non-null   object        \n",
            " 29  Tổng tiền thu hộ             5820 non-null   float64       \n",
            " 30  Phí vận chuyển               5820 non-null   float64       \n",
            " 31  Người trả phí                5820 non-null   object        \n",
            " 32  Phí trả đối tác              5820 non-null   float64       \n",
            " 33  Ghi chú đơn giao             5820 non-null   object        \n",
            " 34  Mã sản phẩm                  7944 non-null   object        \n",
            " 35  Tên sản phẩm                 7944 non-null   object        \n",
            " 36  Ghi chú sản phẩm             0 non-null      float64       \n",
            " 37  Số lượng                     7944 non-null   int64         \n",
            " 38  Serial                       0 non-null      float64       \n",
            " 39  Đơn vị tính                  2298 non-null   object        \n",
            " 40  Đơn giá                      7944 non-null   int64         \n",
            " 41  CK sản phẩm                  7944 non-null   int64         \n",
            " 42  CK tổng đơn hàng             7944 non-null   int64         \n",
            " 43  Thuế cho từng sản phẩm       7944 non-null   int64         \n",
            " 44  Tổng tiền hàng               7944 non-null   int64         \n",
            "dtypes: datetime64[ns](3), float64(11), int64(6), object(25)\n",
            "memory usage: 2.7+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "** Note\n",
        "\n",
        "Tổng quan về dữ liệu bảng Vận Đơn\n",
        "\n",
        "* Bộ Data có tổng cộng 45 cột, 7943 dòng dữ liệu\n",
        "* Bộ dữ liệu có cột 'Lý do huỷ đơn', 'Ngày hẹn giao', 'Ghi chú sản phẩm', 'Serial' không chứa dữ liệu --> Cân nhắc Drop\n",
        "* Ngoài ra, cột 'STT', 'Tags đơn hàng', 'Ngày hẹn giao', 'Chi nhánh' chứa nhiều giá trị NULL/NAN hoặc không mang nhiều ý nghĩa phân tích --> Cân nhắc Drop\n",
        "* Cột Thuế và Phí vận chuyển không chứa giá trị/ thông tin hữu ích --> Drop\n",
        "* Mã đơn hàng có chứa giá trị NULL/NAN --> Drop\n",
        "* Cột 'Ngày hẹn giao' sai định dạng dữ liệu (datetime)\n",
        "* Cột kích thước đang bị sai định dạng"
      ],
      "metadata": {
        "id": "2dpujX8h9yvc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Check xem có giá trị infinite hay không\n",
        "VanDonRaw.isin([np.inf, -np.inf]).any()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iqweqIbuABE2",
        "outputId": "1b17f694-edc1-46c9-c0ad-a1862a6c13a9"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "STT                            False\n",
              "Mã đơn hàng                    False\n",
              "Ghi chú đơn hàng               False\n",
              "Tags đơn hàng                  False\n",
              "Nhân viên tạo đơn              False\n",
              "Chi nhánh                      False\n",
              "Nguồn                          False\n",
              "Mã vận đơn                     False\n",
              "Tình trạng gói hàng            False\n",
              "Trạng thái đối tác             False\n",
              "Lý do hủy đơn                  False\n",
              "Ngày đóng gói                  False\n",
              "Ngày hẹn giao                  False\n",
              "Ngày xuất kho                  False\n",
              "Ngày giao hàng                 False\n",
              "Đối tác giao hàng              False\n",
              "Dịch vụ giao hàng              False\n",
              "Khối lượng(g)                  False\n",
              "Kích thước(DxRxC)              False\n",
              "Tên người nhận                 False\n",
              "SĐT người nhận                 False\n",
              "Địa chỉ giao hàng              False\n",
              "Tỉnh/Thành                     False\n",
              "Quận/Huyện                     False\n",
              "Phường xã                      False\n",
              "Trạng thái đối soát            False\n",
              "Tiền khách phải trả cho đơn    False\n",
              "Khách hàng đã trả              False\n",
              "Hình thức thanh toán           False\n",
              "Tổng tiền thu hộ               False\n",
              "Phí vận chuyển                 False\n",
              "Người trả phí                  False\n",
              "Phí trả đối tác                False\n",
              "Ghi chú đơn giao               False\n",
              "Mã sản phẩm                    False\n",
              "Tên sản phẩm                   False\n",
              "Ghi chú sản phẩm               False\n",
              "Số lượng                       False\n",
              "Serial                         False\n",
              "Đơn vị tính                    False\n",
              "Đơn giá                        False\n",
              "CK sản phẩm                    False\n",
              "CK tổng đơn hàng               False\n",
              "Thuế cho từng sản phẩm         False\n",
              "Tổng tiền hàng                 False\n",
              "dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "** Note\n",
        "\n",
        "* Bộ dũ liệu không chứa giá trị infinite"
      ],
      "metadata": {
        "id": "9MKHx3gUAEjT"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## DROP CÁC CỘT/DÒNG DỮ LIỆU THỪA"
      ],
      "metadata": {
        "id": "SY87VEkH_rAO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop col thừa\n",
        "VanDonRaw.drop(['STT','Tags đơn hàng','Chi nhánh','Lý do hủy đơn','Ngày hẹn giao','Ghi chú sản phẩm','Serial'], axis=1, inplace=True)"
      ],
      "metadata": {
        "id": "PLpF7UXx_3zr"
      },
      "execution_count": 67,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw.drop(['Thuế cho từng sản phẩm'], axis=1, inplace=True)"
      ],
      "metadata": {
        "id": "v6lT1Ei1U_PE"
      },
      "execution_count": 112,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw.drop(['Phí vận chuyển'], axis=1, inplace=True)"
      ],
      "metadata": {
        "id": "A6LOmZnRYugE"
      },
      "execution_count": 128,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT MÃ ĐƠN HÀNG"
      ],
      "metadata": {
        "id": "mht6FD0OEG0I"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop các dòng dữ liệu NULL taị cột Mã vận đơn\n",
        "VanDonRaw.dropna(subset=['Mã đơn hàng'], inplace = True)\n",
        "VanDonRaw.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 692
        },
        "id": "z1rfwsjYB0Kk",
        "outputId": "81272d3a-1c8b-4877-cb44-605ae87948ba"
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Mã đơn hàng                                   Ghi chú đơn hàng  \\\n",
              "0    SON25144                                                NaN   \n",
              "2    SON24883  TẶNG SÁCH LẺ PHẦN 2 CHO PHỤ HUỲNH\\ngiao trong ...   \n",
              "4    SON24943                          Giao trong giờ hành chính   \n",
              "5    SON25048                                                NaN   \n",
              "6    SON25126                                                NaN   \n",
              "\n",
              "  Nhân viên tạo đơn Nguồn     Mã vận đơn Tình trạng gói hàng  \\\n",
              "0  Nguyễn Thị Huyền   Web       G87L96F3        Đã giao hàng   \n",
              "2  Đỗ Thị Hồng Ngọc   Web       G87L9VTM        Đã giao hàng   \n",
              "4  Đỗ Thị Hồng Ngọc   Web  NSAPOAAAAZPQF        Đã giao hàng   \n",
              "5  Đỗ Thị Hồng Ngọc   Web  NSAPOAAAAZPQE        Đã giao hàng   \n",
              "6  Kiều Phương Thảo   Web  NSAPOAAAAZPQD        Đã giao hàng   \n",
              "\n",
              "  Trạng thái đối tác       Ngày đóng gói       Ngày xuất kho  \\\n",
              "0    Giao thành công 2020-09-16 12:49:54 2020-09-17 11:05:38   \n",
              "2    Giao thành công 2020-09-16 12:49:13 2020-09-17 11:05:48   \n",
              "4    Giao thành công 2020-09-15 19:56:20 2020-09-15 19:58:37   \n",
              "5    Giao thành công 2020-09-15 19:55:54 2020-09-15 19:58:43   \n",
              "6    Giao thành công 2020-09-15 19:55:30 2020-09-15 19:58:49   \n",
              "\n",
              "       Ngày giao hàng  ...                          Ghi chú đơn giao  \\\n",
              "0 2020-09-19 10:20:38  ...                              Cho thử hàng   \n",
              "2 2020-09-21 12:18:59  ...                              Cho thử hàng   \n",
              "4 2020-09-19 12:54:17  ...  Cho thử hàng | Giao trong giờ hành chính   \n",
              "5 2020-09-18 14:46:31  ...                              Cho thử hàng   \n",
              "6 2020-09-18 11:03:22  ...                              Cho thử hàng   \n",
              "\n",
              "  Mã sản phẩm                                       Tên sản phẩm Số lượng  \\\n",
              "0          ph                                   Sách TeenUp - PH        1   \n",
              "2     p2chung                               Sách TeenUp - Phần 2        1   \n",
              "4   combokid2  COMBO KID - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ T...        1   \n",
              "5  comboteen2  COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...        1   \n",
              "6  comboteen2  COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...        1   \n",
              "\n",
              "  Đơn vị tính Đơn giá CK sản phẩm CK tổng đơn hàng Thuế cho từng sản phẩm  \\\n",
              "0         NaN       0           0                0                      0   \n",
              "2         NaN       0           0                0                      0   \n",
              "4         NaN  920000      140000                0                      0   \n",
              "5         NaN  920000      140000                0                      0   \n",
              "6         NaN  920000      141000                0                      0   \n",
              "\n",
              "  Tổng tiền hàng  \n",
              "0              0  \n",
              "2              0  \n",
              "4         780000  \n",
              "5         780000  \n",
              "6         779000  \n",
              "\n",
              "[5 rows x 38 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e01c770a-681a-48b5-9c50-720d3cbc4ad9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Mã đơn hàng</th>\n",
              "      <th>Ghi chú đơn hàng</th>\n",
              "      <th>Nhân viên tạo đơn</th>\n",
              "      <th>Nguồn</th>\n",
              "      <th>Mã vận đơn</th>\n",
              "      <th>Tình trạng gói hàng</th>\n",
              "      <th>Trạng thái đối tác</th>\n",
              "      <th>Ngày đóng gói</th>\n",
              "      <th>Ngày xuất kho</th>\n",
              "      <th>Ngày giao hàng</th>\n",
              "      <th>...</th>\n",
              "      <th>Ghi chú đơn giao</th>\n",
              "      <th>Mã sản phẩm</th>\n",
              "      <th>Tên sản phẩm</th>\n",
              "      <th>Số lượng</th>\n",
              "      <th>Đơn vị tính</th>\n",
              "      <th>Đơn giá</th>\n",
              "      <th>CK sản phẩm</th>\n",
              "      <th>CK tổng đơn hàng</th>\n",
              "      <th>Thuế cho từng sản phẩm</th>\n",
              "      <th>Tổng tiền hàng</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>SON25144</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Nguyễn Thị Huyền</td>\n",
              "      <td>Web</td>\n",
              "      <td>G87L96F3</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-16 12:49:54</td>\n",
              "      <td>2020-09-17 11:05:38</td>\n",
              "      <td>2020-09-19 10:20:38</td>\n",
              "      <td>...</td>\n",
              "      <td>Cho thử hàng</td>\n",
              "      <td>ph</td>\n",
              "      <td>Sách TeenUp - PH</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>SON24883</td>\n",
              "      <td>TẶNG SÁCH LẺ PHẦN 2 CHO PHỤ HUỲNH\\ngiao trong ...</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>G87L9VTM</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-16 12:49:13</td>\n",
              "      <td>2020-09-17 11:05:48</td>\n",
              "      <td>2020-09-21 12:18:59</td>\n",
              "      <td>...</td>\n",
              "      <td>Cho thử hàng</td>\n",
              "      <td>p2chung</td>\n",
              "      <td>Sách TeenUp - Phần 2</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>SON24943</td>\n",
              "      <td>Giao trong giờ hành chính</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQF</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:56:20</td>\n",
              "      <td>2020-09-15 19:58:37</td>\n",
              "      <td>2020-09-19 12:54:17</td>\n",
              "      <td>...</td>\n",
              "      <td>Cho thử hàng | Giao trong giờ hành chính</td>\n",
              "      <td>combokid2</td>\n",
              "      <td>COMBO KID - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ T...</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>920000</td>\n",
              "      <td>140000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>SON25048</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQE</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:55:54</td>\n",
              "      <td>2020-09-15 19:58:43</td>\n",
              "      <td>2020-09-18 14:46:31</td>\n",
              "      <td>...</td>\n",
              "      <td>Cho thử hàng</td>\n",
              "      <td>comboteen2</td>\n",
              "      <td>COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>920000</td>\n",
              "      <td>140000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>SON25126</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Kiều Phương Thảo</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQD</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:55:30</td>\n",
              "      <td>2020-09-15 19:58:49</td>\n",
              "      <td>2020-09-18 11:03:22</td>\n",
              "      <td>...</td>\n",
              "      <td>Cho thử hàng</td>\n",
              "      <td>comboteen2</td>\n",
              "      <td>COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>920000</td>\n",
              "      <td>141000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>779000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 38 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e01c770a-681a-48b5-9c50-720d3cbc4ad9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e01c770a-681a-48b5-9c50-720d3cbc4ad9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e01c770a-681a-48b5-9c50-720d3cbc4ad9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6b3dac1c-4d3f-40f1-93cd-9a3f340e0487\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b3dac1c-4d3f-40f1-93cd-9a3f340e0487')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6b3dac1c-4d3f-40f1-93cd-9a3f340e0487 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "VanDonRaw"
            }
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Check có giá trị Duplicated hay không?\n",
        "VanDonRaw.duplicated(subset=['Mã đơn hàng'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c7ezipHwEnBt",
        "outputId": "956edef7-db89-4c4b-ba65-25c6691864be"
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       False\n",
              "2       False\n",
              "4       False\n",
              "5       False\n",
              "6       False\n",
              "        ...  \n",
              "7934    False\n",
              "7936    False\n",
              "7938    False\n",
              "7940    False\n",
              "7942    False\n",
              "Length: 5820, dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ngjNWvgOEOmW",
        "outputId": "2e6ca892-8ee2-4be4-8195-773ecfea5508"
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 5820 entries, 0 to 7942\n",
            "Data columns (total 38 columns):\n",
            " #   Column                       Non-Null Count  Dtype         \n",
            "---  ------                       --------------  -----         \n",
            " 0   Mã đơn hàng                  5820 non-null   object        \n",
            " 1   Ghi chú đơn hàng             566 non-null    object        \n",
            " 2   Nhân viên tạo đơn            5820 non-null   object        \n",
            " 3   Nguồn                        5820 non-null   object        \n",
            " 4   Mã vận đơn                   5820 non-null   object        \n",
            " 5   Tình trạng gói hàng          5820 non-null   object        \n",
            " 6   Trạng thái đối tác           5819 non-null   object        \n",
            " 7   Ngày đóng gói                5820 non-null   datetime64[ns]\n",
            " 8   Ngày xuất kho                5820 non-null   datetime64[ns]\n",
            " 9   Ngày giao hàng               5115 non-null   datetime64[ns]\n",
            " 10  Đối tác giao hàng            5820 non-null   object        \n",
            " 11  Dịch vụ giao hàng            5819 non-null   object        \n",
            " 12  Khối lượng(g)                5820 non-null   float64       \n",
            " 13  Kích thước(DxRxC)            5820 non-null   object        \n",
            " 14  Tên người nhận               5820 non-null   object        \n",
            " 15  SĐT người nhận               5820 non-null   object        \n",
            " 16  Địa chỉ giao hàng            5820 non-null   object        \n",
            " 17  Tỉnh/Thành                   5820 non-null   object        \n",
            " 18  Quận/Huyện                   5820 non-null   object        \n",
            " 19  Phường xã                    5820 non-null   object        \n",
            " 20  Trạng thái đối soát          5820 non-null   object        \n",
            " 21  Tiền khách phải trả cho đơn  5820 non-null   float64       \n",
            " 22  Khách hàng đã trả            5033 non-null   float64       \n",
            " 23  Hình thức thanh toán         5033 non-null   object        \n",
            " 24  Tổng tiền thu hộ             5820 non-null   float64       \n",
            " 25  Phí vận chuyển               5820 non-null   float64       \n",
            " 26  Người trả phí                5820 non-null   object        \n",
            " 27  Phí trả đối tác              5820 non-null   float64       \n",
            " 28  Ghi chú đơn giao             5820 non-null   object        \n",
            " 29  Mã sản phẩm                  5820 non-null   object        \n",
            " 30  Tên sản phẩm                 5820 non-null   object        \n",
            " 31  Số lượng                     5820 non-null   int64         \n",
            " 32  Đơn vị tính                  2028 non-null   object        \n",
            " 33  Đơn giá                      5820 non-null   int64         \n",
            " 34  CK sản phẩm                  5820 non-null   int64         \n",
            " 35  CK tổng đơn hàng             5820 non-null   int64         \n",
            " 36  Thuế cho từng sản phẩm       5820 non-null   int64         \n",
            " 37  Tổng tiền hàng               5820 non-null   int64         \n",
            "dtypes: datetime64[ns](3), float64(6), int64(6), object(23)\n",
            "memory usage: 1.7+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT NGÀY GIAO HÀNG\n",
        "\n",
        "* Cột Ngày giao hàng đang chứa giá trị NULL/NAN\n",
        "\n",
        "Nguyên nhân là do đơn hàng chưa được giao thành công (tức là ở trạng thái: Chờ lấy hàng, Đang giao, Trả hàng, Thất lạc,...)"
      ],
      "metadata": {
        "id": "6O8q3XaNGHXz"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT HÌNH THỨC THANH TOÁN\n",
        "\n",
        "** NOTE\n",
        "\n",
        "** Logic để fill cột này như sau:\n",
        "\n",
        "* Nếu giá trị cột 'Tổng số tiền thu hộ' > 0 --> COD\n",
        "* Các dòng dữ liệu còn lại có 'Cột ghi chú' chứa các ký tự như: 'ck', 'chuyển khoản', 'thanh toán' --> Fill Chuyển khoản\n",
        "* Các giá trị còn lại fill Other (CTy cho tặng, gửi đơn bổ sung sách do giao thiếu, gửi KOL phục vụ chiến lược Marketing,...)\n"
      ],
      "metadata": {
        "id": "mYGzkNLQHLdQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw['Hình thức thanh toán'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r6vF09srNafD",
        "outputId": "101e9d78-6ea5-45eb-a778-352d2706b214"
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Hình thức thanh toán\n",
              "COD             5020\n",
              "Chuyển khoản      13\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Xây dựng hàm FILL NULL cột Hình thức thanh toán\n",
        "def Na_filler(x):\n",
        "    if x>0:\n",
        "        return 'COD'\n",
        "    else:\n",
        "        return 'Chuyển khoản'"
      ],
      "metadata": {
        "id": "ym2sz45KQLrY"
      },
      "execution_count": 72,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw['Payment_method'] = VanDonRaw['Tổng tiền thu hộ'].apply(Na_filler)\n",
        "VanDonRaw['Payment_method'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xiRzf2qgQkEB",
        "outputId": "0b49ee64-e0fe-4b01-8268-02c3a930ab9d"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Payment_method\n",
              "COD             5724\n",
              "Chuyển khoản      96\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw[\"Payment_method\"] = VanDonRaw[\"Payment_method\"].astype(str)\n",
        "VanDonRaw[\"Ghi chú đơn hàng\"] = VanDonRaw[\"Ghi chú đơn hàng\"].astype(str)\n",
        "VanDonRaw[\"Payment_method\"] = VanDonRaw[\"Payment_method\"].mask(VanDonRaw[\"Ghi chú đơn hàng\"].str.contains('ck|chuyển khoản|thanh toán'), VanDonRaw[\"Payment_method\"].str.replace(\"Chuyển khoản\", \"Other\"))"
      ],
      "metadata": {
        "id": "mEqjxM8SU1r2"
      },
      "execution_count": 74,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw['Payment_method'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9GsJVwOGV-Oy",
        "outputId": "9b9ed840-5c78-4374-e42d-96eea0e327c3"
      },
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Payment_method\n",
              "COD             5724\n",
              "Chuyển khoản      84\n",
              "Other             12\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 75
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop cột thừa sau khi đã xử lý xong\n",
        "VanDonRaw.drop(['Hình thức thanh toán'], axis=1, inplace=True)\n",
        "VanDonRaw.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 814
        },
        "id": "hJILQWtoZlfe",
        "outputId": "c6d7f0bd-fb79-4248-bb85-7d26b03fe50b"
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Mã đơn hàng                                   Ghi chú đơn hàng  \\\n",
              "0    SON25144                                                nan   \n",
              "2    SON24883  TẶNG SÁCH LẺ PHẦN 2 CHO PHỤ HUỲNH\\ngiao trong ...   \n",
              "4    SON24943                          Giao trong giờ hành chính   \n",
              "5    SON25048                                                nan   \n",
              "6    SON25126                                                nan   \n",
              "\n",
              "  Nhân viên tạo đơn Nguồn     Mã vận đơn Tình trạng gói hàng  \\\n",
              "0  Nguyễn Thị Huyền   Web       G87L96F3        Đã giao hàng   \n",
              "2  Đỗ Thị Hồng Ngọc   Web       G87L9VTM        Đã giao hàng   \n",
              "4  Đỗ Thị Hồng Ngọc   Web  NSAPOAAAAZPQF        Đã giao hàng   \n",
              "5  Đỗ Thị Hồng Ngọc   Web  NSAPOAAAAZPQE        Đã giao hàng   \n",
              "6  Kiều Phương Thảo   Web  NSAPOAAAAZPQD        Đã giao hàng   \n",
              "\n",
              "  Trạng thái đối tác       Ngày đóng gói       Ngày xuất kho  \\\n",
              "0    Giao thành công 2020-09-16 12:49:54 2020-09-17 11:05:38   \n",
              "2    Giao thành công 2020-09-16 12:49:13 2020-09-17 11:05:48   \n",
              "4    Giao thành công 2020-09-15 19:56:20 2020-09-15 19:58:37   \n",
              "5    Giao thành công 2020-09-15 19:55:54 2020-09-15 19:58:43   \n",
              "6    Giao thành công 2020-09-15 19:55:30 2020-09-15 19:58:49   \n",
              "\n",
              "       Ngày giao hàng  ... Mã sản phẩm  \\\n",
              "0 2020-09-19 10:20:38  ...          ph   \n",
              "2 2020-09-21 12:18:59  ...     p2chung   \n",
              "4 2020-09-19 12:54:17  ...   combokid2   \n",
              "5 2020-09-18 14:46:31  ...  comboteen2   \n",
              "6 2020-09-18 11:03:22  ...  comboteen2   \n",
              "\n",
              "                                        Tên sản phẩm  Số lượng Đơn vị tính  \\\n",
              "0                                   Sách TeenUp - PH         1         NaN   \n",
              "2                               Sách TeenUp - Phần 2         1         NaN   \n",
              "4  COMBO KID - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ T...         1         NaN   \n",
              "5  COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...         1         NaN   \n",
              "6  COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...         1         NaN   \n",
              "\n",
              "  Đơn giá CK sản phẩm CK tổng đơn hàng Thuế cho từng sản phẩm Tổng tiền hàng  \\\n",
              "0       0           0                0                      0              0   \n",
              "2       0           0                0                      0              0   \n",
              "4  920000      140000                0                      0         780000   \n",
              "5  920000      140000                0                      0         780000   \n",
              "6  920000      141000                0                      0         779000   \n",
              "\n",
              "  Payment_method  \n",
              "0            COD  \n",
              "2            COD  \n",
              "4            COD  \n",
              "5            COD  \n",
              "6            COD  \n",
              "\n",
              "[5 rows x 38 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f2c4c42c-0c39-4246-8861-5a1dfbcd5476\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Mã đơn hàng</th>\n",
              "      <th>Ghi chú đơn hàng</th>\n",
              "      <th>Nhân viên tạo đơn</th>\n",
              "      <th>Nguồn</th>\n",
              "      <th>Mã vận đơn</th>\n",
              "      <th>Tình trạng gói hàng</th>\n",
              "      <th>Trạng thái đối tác</th>\n",
              "      <th>Ngày đóng gói</th>\n",
              "      <th>Ngày xuất kho</th>\n",
              "      <th>Ngày giao hàng</th>\n",
              "      <th>...</th>\n",
              "      <th>Mã sản phẩm</th>\n",
              "      <th>Tên sản phẩm</th>\n",
              "      <th>Số lượng</th>\n",
              "      <th>Đơn vị tính</th>\n",
              "      <th>Đơn giá</th>\n",
              "      <th>CK sản phẩm</th>\n",
              "      <th>CK tổng đơn hàng</th>\n",
              "      <th>Thuế cho từng sản phẩm</th>\n",
              "      <th>Tổng tiền hàng</th>\n",
              "      <th>Payment_method</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>SON25144</td>\n",
              "      <td>nan</td>\n",
              "      <td>Nguyễn Thị Huyền</td>\n",
              "      <td>Web</td>\n",
              "      <td>G87L96F3</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-16 12:49:54</td>\n",
              "      <td>2020-09-17 11:05:38</td>\n",
              "      <td>2020-09-19 10:20:38</td>\n",
              "      <td>...</td>\n",
              "      <td>ph</td>\n",
              "      <td>Sách TeenUp - PH</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>COD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>SON24883</td>\n",
              "      <td>TẶNG SÁCH LẺ PHẦN 2 CHO PHỤ HUỲNH\\ngiao trong ...</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>G87L9VTM</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-16 12:49:13</td>\n",
              "      <td>2020-09-17 11:05:48</td>\n",
              "      <td>2020-09-21 12:18:59</td>\n",
              "      <td>...</td>\n",
              "      <td>p2chung</td>\n",
              "      <td>Sách TeenUp - Phần 2</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>COD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>SON24943</td>\n",
              "      <td>Giao trong giờ hành chính</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQF</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:56:20</td>\n",
              "      <td>2020-09-15 19:58:37</td>\n",
              "      <td>2020-09-19 12:54:17</td>\n",
              "      <td>...</td>\n",
              "      <td>combokid2</td>\n",
              "      <td>COMBO KID - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ T...</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>920000</td>\n",
              "      <td>140000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>780000</td>\n",
              "      <td>COD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>SON25048</td>\n",
              "      <td>nan</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQE</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:55:54</td>\n",
              "      <td>2020-09-15 19:58:43</td>\n",
              "      <td>2020-09-18 14:46:31</td>\n",
              "      <td>...</td>\n",
              "      <td>comboteen2</td>\n",
              "      <td>COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>920000</td>\n",
              "      <td>140000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>780000</td>\n",
              "      <td>COD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>SON25126</td>\n",
              "      <td>nan</td>\n",
              "      <td>Kiều Phương Thảo</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQD</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:55:30</td>\n",
              "      <td>2020-09-15 19:58:49</td>\n",
              "      <td>2020-09-18 11:03:22</td>\n",
              "      <td>...</td>\n",
              "      <td>comboteen2</td>\n",
              "      <td>COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>920000</td>\n",
              "      <td>141000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>779000</td>\n",
              "      <td>COD</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 38 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2c4c42c-0c39-4246-8861-5a1dfbcd5476')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f2c4c42c-0c39-4246-8861-5a1dfbcd5476 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f2c4c42c-0c39-4246-8861-5a1dfbcd5476');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-23e8897c-33a3-47b1-b26d-fdf60a82592c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-23e8897c-33a3-47b1-b26d-fdf60a82592c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-23e8897c-33a3-47b1-b26d-fdf60a82592c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "VanDonRaw"
            }
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT CHIẾT KHẤU TỔNG ĐƠN HÀNG\n",
        "\n",
        "** Note\n",
        "\n",
        "* Cột Chiết khấu tổng đơn hàng đang bị sai công thức ---> Công thức đúng phải là (Đơn giá - Chiết khấu sản phẩm) * Số lượng"
      ],
      "metadata": {
        "id": "Vh8StJjQNKqi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Define lại công thức\n",
        "VanDonRaw['CK tổng đơn hàng'] =(VanDonRaw['Đơn giá'] - VanDonRaw['CK sản phẩm']) * VanDonRaw['Số lượng']"
      ],
      "metadata": {
        "id": "paC85rFjZ5Ia"
      },
      "execution_count": 77,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 814
        },
        "id": "GTU6ajA2aRl0",
        "outputId": "0d497bbb-2214-4ebb-c296-5c704efce8aa"
      },
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Mã đơn hàng                                   Ghi chú đơn hàng  \\\n",
              "0    SON25144                                                nan   \n",
              "2    SON24883  TẶNG SÁCH LẺ PHẦN 2 CHO PHỤ HUỲNH\\ngiao trong ...   \n",
              "4    SON24943                          Giao trong giờ hành chính   \n",
              "5    SON25048                                                nan   \n",
              "6    SON25126                                                nan   \n",
              "\n",
              "  Nhân viên tạo đơn Nguồn     Mã vận đơn Tình trạng gói hàng  \\\n",
              "0  Nguyễn Thị Huyền   Web       G87L96F3        Đã giao hàng   \n",
              "2  Đỗ Thị Hồng Ngọc   Web       G87L9VTM        Đã giao hàng   \n",
              "4  Đỗ Thị Hồng Ngọc   Web  NSAPOAAAAZPQF        Đã giao hàng   \n",
              "5  Đỗ Thị Hồng Ngọc   Web  NSAPOAAAAZPQE        Đã giao hàng   \n",
              "6  Kiều Phương Thảo   Web  NSAPOAAAAZPQD        Đã giao hàng   \n",
              "\n",
              "  Trạng thái đối tác       Ngày đóng gói       Ngày xuất kho  \\\n",
              "0    Giao thành công 2020-09-16 12:49:54 2020-09-17 11:05:38   \n",
              "2    Giao thành công 2020-09-16 12:49:13 2020-09-17 11:05:48   \n",
              "4    Giao thành công 2020-09-15 19:56:20 2020-09-15 19:58:37   \n",
              "5    Giao thành công 2020-09-15 19:55:54 2020-09-15 19:58:43   \n",
              "6    Giao thành công 2020-09-15 19:55:30 2020-09-15 19:58:49   \n",
              "\n",
              "       Ngày giao hàng  ... Mã sản phẩm  \\\n",
              "0 2020-09-19 10:20:38  ...          ph   \n",
              "2 2020-09-21 12:18:59  ...     p2chung   \n",
              "4 2020-09-19 12:54:17  ...   combokid2   \n",
              "5 2020-09-18 14:46:31  ...  comboteen2   \n",
              "6 2020-09-18 11:03:22  ...  comboteen2   \n",
              "\n",
              "                                        Tên sản phẩm  Số lượng Đơn vị tính  \\\n",
              "0                                   Sách TeenUp - PH         1         NaN   \n",
              "2                               Sách TeenUp - Phần 2         1         NaN   \n",
              "4  COMBO KID - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ T...         1         NaN   \n",
              "5  COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...         1         NaN   \n",
              "6  COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...         1         NaN   \n",
              "\n",
              "  Đơn giá CK sản phẩm CK tổng đơn hàng Thuế cho từng sản phẩm Tổng tiền hàng  \\\n",
              "0       0           0                0                      0              0   \n",
              "2       0           0                0                      0              0   \n",
              "4  920000      140000           780000                      0         780000   \n",
              "5  920000      140000           780000                      0         780000   \n",
              "6  920000      141000           779000                      0         779000   \n",
              "\n",
              "  Payment_method  \n",
              "0            COD  \n",
              "2            COD  \n",
              "4            COD  \n",
              "5            COD  \n",
              "6            COD  \n",
              "\n",
              "[5 rows x 38 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-13da65b5-0bb1-49aa-85d3-729658e58bbe\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Mã đơn hàng</th>\n",
              "      <th>Ghi chú đơn hàng</th>\n",
              "      <th>Nhân viên tạo đơn</th>\n",
              "      <th>Nguồn</th>\n",
              "      <th>Mã vận đơn</th>\n",
              "      <th>Tình trạng gói hàng</th>\n",
              "      <th>Trạng thái đối tác</th>\n",
              "      <th>Ngày đóng gói</th>\n",
              "      <th>Ngày xuất kho</th>\n",
              "      <th>Ngày giao hàng</th>\n",
              "      <th>...</th>\n",
              "      <th>Mã sản phẩm</th>\n",
              "      <th>Tên sản phẩm</th>\n",
              "      <th>Số lượng</th>\n",
              "      <th>Đơn vị tính</th>\n",
              "      <th>Đơn giá</th>\n",
              "      <th>CK sản phẩm</th>\n",
              "      <th>CK tổng đơn hàng</th>\n",
              "      <th>Thuế cho từng sản phẩm</th>\n",
              "      <th>Tổng tiền hàng</th>\n",
              "      <th>Payment_method</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>SON25144</td>\n",
              "      <td>nan</td>\n",
              "      <td>Nguyễn Thị Huyền</td>\n",
              "      <td>Web</td>\n",
              "      <td>G87L96F3</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-16 12:49:54</td>\n",
              "      <td>2020-09-17 11:05:38</td>\n",
              "      <td>2020-09-19 10:20:38</td>\n",
              "      <td>...</td>\n",
              "      <td>ph</td>\n",
              "      <td>Sách TeenUp - PH</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>COD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>SON24883</td>\n",
              "      <td>TẶNG SÁCH LẺ PHẦN 2 CHO PHỤ HUỲNH\\ngiao trong ...</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>G87L9VTM</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-16 12:49:13</td>\n",
              "      <td>2020-09-17 11:05:48</td>\n",
              "      <td>2020-09-21 12:18:59</td>\n",
              "      <td>...</td>\n",
              "      <td>p2chung</td>\n",
              "      <td>Sách TeenUp - Phần 2</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>COD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>SON24943</td>\n",
              "      <td>Giao trong giờ hành chính</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQF</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:56:20</td>\n",
              "      <td>2020-09-15 19:58:37</td>\n",
              "      <td>2020-09-19 12:54:17</td>\n",
              "      <td>...</td>\n",
              "      <td>combokid2</td>\n",
              "      <td>COMBO KID - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ T...</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>920000</td>\n",
              "      <td>140000</td>\n",
              "      <td>780000</td>\n",
              "      <td>0</td>\n",
              "      <td>780000</td>\n",
              "      <td>COD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>SON25048</td>\n",
              "      <td>nan</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQE</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:55:54</td>\n",
              "      <td>2020-09-15 19:58:43</td>\n",
              "      <td>2020-09-18 14:46:31</td>\n",
              "      <td>...</td>\n",
              "      <td>comboteen2</td>\n",
              "      <td>COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>920000</td>\n",
              "      <td>140000</td>\n",
              "      <td>780000</td>\n",
              "      <td>0</td>\n",
              "      <td>780000</td>\n",
              "      <td>COD</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>SON25126</td>\n",
              "      <td>nan</td>\n",
              "      <td>Kiều Phương Thảo</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQD</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:55:30</td>\n",
              "      <td>2020-09-15 19:58:49</td>\n",
              "      <td>2020-09-18 11:03:22</td>\n",
              "      <td>...</td>\n",
              "      <td>comboteen2</td>\n",
              "      <td>COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>920000</td>\n",
              "      <td>141000</td>\n",
              "      <td>779000</td>\n",
              "      <td>0</td>\n",
              "      <td>779000</td>\n",
              "      <td>COD</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 38 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-13da65b5-0bb1-49aa-85d3-729658e58bbe')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-13da65b5-0bb1-49aa-85d3-729658e58bbe button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-13da65b5-0bb1-49aa-85d3-729658e58bbe');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d2ebcaca-8642-4eff-8077-bcc0f87e1d7c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d2ebcaca-8642-4eff-8077-bcc0f87e1d7c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d2ebcaca-8642-4eff-8077-bcc0f87e1d7c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "VanDonRaw"
            }
          },
          "metadata": {},
          "execution_count": 78
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT SỐ NGÀY GIAO HÀNG TRUNG BÌNH - AVG_SHIPPING_DAYS\n",
        "\n",
        "** NOTE\n",
        "\n",
        "* Tạo thêm Feature có ý nghĩa phân tích hơn bằng cách tạo thêm cột Avg_Shipping_Days: Ngày xuất kho - Ngày giao hàng"
      ],
      "metadata": {
        "id": "ioCZL-e0bXXc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Define lại công thức\n",
        "VanDonRaw['Shipping_Days'] = (VanDonRaw['Ngày giao hàng'] - VanDonRaw['Ngày xuất kho'])"
      ],
      "metadata": {
        "id": "Rq6NWK_T70Ew"
      },
      "execution_count": 79,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 814
        },
        "id": "MiIJUKQF8QYD",
        "outputId": "4b37fa62-b920-4da7-b65f-56d6ba69d682"
      },
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Mã đơn hàng                                   Ghi chú đơn hàng  \\\n",
              "0    SON25144                                                nan   \n",
              "2    SON24883  TẶNG SÁCH LẺ PHẦN 2 CHO PHỤ HUỲNH\\ngiao trong ...   \n",
              "4    SON24943                          Giao trong giờ hành chính   \n",
              "5    SON25048                                                nan   \n",
              "6    SON25126                                                nan   \n",
              "\n",
              "  Nhân viên tạo đơn Nguồn     Mã vận đơn Tình trạng gói hàng  \\\n",
              "0  Nguyễn Thị Huyền   Web       G87L96F3        Đã giao hàng   \n",
              "2  Đỗ Thị Hồng Ngọc   Web       G87L9VTM        Đã giao hàng   \n",
              "4  Đỗ Thị Hồng Ngọc   Web  NSAPOAAAAZPQF        Đã giao hàng   \n",
              "5  Đỗ Thị Hồng Ngọc   Web  NSAPOAAAAZPQE        Đã giao hàng   \n",
              "6  Kiều Phương Thảo   Web  NSAPOAAAAZPQD        Đã giao hàng   \n",
              "\n",
              "  Trạng thái đối tác       Ngày đóng gói       Ngày xuất kho  \\\n",
              "0    Giao thành công 2020-09-16 12:49:54 2020-09-17 11:05:38   \n",
              "2    Giao thành công 2020-09-16 12:49:13 2020-09-17 11:05:48   \n",
              "4    Giao thành công 2020-09-15 19:56:20 2020-09-15 19:58:37   \n",
              "5    Giao thành công 2020-09-15 19:55:54 2020-09-15 19:58:43   \n",
              "6    Giao thành công 2020-09-15 19:55:30 2020-09-15 19:58:49   \n",
              "\n",
              "       Ngày giao hàng  ...                                       Tên sản phẩm  \\\n",
              "0 2020-09-19 10:20:38  ...                                   Sách TeenUp - PH   \n",
              "2 2020-09-21 12:18:59  ...                               Sách TeenUp - Phần 2   \n",
              "4 2020-09-19 12:54:17  ...  COMBO KID - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ T...   \n",
              "5 2020-09-18 14:46:31  ...  COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...   \n",
              "6 2020-09-18 11:03:22  ...  COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...   \n",
              "\n",
              "  Số lượng  Đơn vị tính Đơn giá CK sản phẩm CK tổng đơn hàng  \\\n",
              "0        1          NaN       0           0                0   \n",
              "2        1          NaN       0           0                0   \n",
              "4        1          NaN  920000      140000           780000   \n",
              "5        1          NaN  920000      140000           780000   \n",
              "6        1          NaN  920000      141000           779000   \n",
              "\n",
              "  Thuế cho từng sản phẩm Tổng tiền hàng Payment_method   Shipping_Days  \n",
              "0                      0              0            COD 1 days 23:15:00  \n",
              "2                      0              0            COD 4 days 01:13:11  \n",
              "4                      0         780000            COD 3 days 16:55:40  \n",
              "5                      0         780000            COD 2 days 18:47:48  \n",
              "6                      0         779000            COD 2 days 15:04:33  \n",
              "\n",
              "[5 rows x 39 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0ed083a0-4e8e-437b-b889-0dc1e185df3e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Mã đơn hàng</th>\n",
              "      <th>Ghi chú đơn hàng</th>\n",
              "      <th>Nhân viên tạo đơn</th>\n",
              "      <th>Nguồn</th>\n",
              "      <th>Mã vận đơn</th>\n",
              "      <th>Tình trạng gói hàng</th>\n",
              "      <th>Trạng thái đối tác</th>\n",
              "      <th>Ngày đóng gói</th>\n",
              "      <th>Ngày xuất kho</th>\n",
              "      <th>Ngày giao hàng</th>\n",
              "      <th>...</th>\n",
              "      <th>Tên sản phẩm</th>\n",
              "      <th>Số lượng</th>\n",
              "      <th>Đơn vị tính</th>\n",
              "      <th>Đơn giá</th>\n",
              "      <th>CK sản phẩm</th>\n",
              "      <th>CK tổng đơn hàng</th>\n",
              "      <th>Thuế cho từng sản phẩm</th>\n",
              "      <th>Tổng tiền hàng</th>\n",
              "      <th>Payment_method</th>\n",
              "      <th>Shipping_Days</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>SON25144</td>\n",
              "      <td>nan</td>\n",
              "      <td>Nguyễn Thị Huyền</td>\n",
              "      <td>Web</td>\n",
              "      <td>G87L96F3</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-16 12:49:54</td>\n",
              "      <td>2020-09-17 11:05:38</td>\n",
              "      <td>2020-09-19 10:20:38</td>\n",
              "      <td>...</td>\n",
              "      <td>Sách TeenUp - PH</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>COD</td>\n",
              "      <td>1 days 23:15:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>SON24883</td>\n",
              "      <td>TẶNG SÁCH LẺ PHẦN 2 CHO PHỤ HUỲNH\\ngiao trong ...</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>G87L9VTM</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-16 12:49:13</td>\n",
              "      <td>2020-09-17 11:05:48</td>\n",
              "      <td>2020-09-21 12:18:59</td>\n",
              "      <td>...</td>\n",
              "      <td>Sách TeenUp - Phần 2</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>COD</td>\n",
              "      <td>4 days 01:13:11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>SON24943</td>\n",
              "      <td>Giao trong giờ hành chính</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQF</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:56:20</td>\n",
              "      <td>2020-09-15 19:58:37</td>\n",
              "      <td>2020-09-19 12:54:17</td>\n",
              "      <td>...</td>\n",
              "      <td>COMBO KID - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ T...</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>920000</td>\n",
              "      <td>140000</td>\n",
              "      <td>780000</td>\n",
              "      <td>0</td>\n",
              "      <td>780000</td>\n",
              "      <td>COD</td>\n",
              "      <td>3 days 16:55:40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>SON25048</td>\n",
              "      <td>nan</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQE</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:55:54</td>\n",
              "      <td>2020-09-15 19:58:43</td>\n",
              "      <td>2020-09-18 14:46:31</td>\n",
              "      <td>...</td>\n",
              "      <td>COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>920000</td>\n",
              "      <td>140000</td>\n",
              "      <td>780000</td>\n",
              "      <td>0</td>\n",
              "      <td>780000</td>\n",
              "      <td>COD</td>\n",
              "      <td>2 days 18:47:48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>SON25126</td>\n",
              "      <td>nan</td>\n",
              "      <td>Kiều Phương Thảo</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQD</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:55:30</td>\n",
              "      <td>2020-09-15 19:58:49</td>\n",
              "      <td>2020-09-18 11:03:22</td>\n",
              "      <td>...</td>\n",
              "      <td>COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ ...</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>920000</td>\n",
              "      <td>141000</td>\n",
              "      <td>779000</td>\n",
              "      <td>0</td>\n",
              "      <td>779000</td>\n",
              "      <td>COD</td>\n",
              "      <td>2 days 15:04:33</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 39 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ed083a0-4e8e-437b-b889-0dc1e185df3e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0ed083a0-4e8e-437b-b889-0dc1e185df3e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0ed083a0-4e8e-437b-b889-0dc1e185df3e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-89bad884-e19b-412e-a3aa-b7d2bab2e58f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-89bad884-e19b-412e-a3aa-b7d2bab2e58f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-89bad884-e19b-412e-a3aa-b7d2bab2e58f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "VanDonRaw"
            }
          },
          "metadata": {},
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT KÍCH THƯỚC\n",
        "\n",
        "** Note\n",
        "\n",
        "* Sai định dạng dữ liệu\n",
        "* Chứa giá trị bất hợp lý, số lượng nhỏ --> Fill with Mode hoặc Drop"
      ],
      "metadata": {
        "id": "BkKAhbJi_9tm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw['Kích thước(DxRxC)'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YPW4pzXwAbV1",
        "outputId": "1d13a336-5d60-4abc-a787-195985820b27"
      },
      "execution_count": 81,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Kích thước(DxRxC)\n",
              "10.000x10.000x10.000    5811\n",
              "0.000x0.000x0.000          9\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Thay thế các ký tự '0.000x0.000x0.000' bằng '10.000x10.000x10.000'\n",
        "VanDonRaw['Kích thước(DxRxC)'] = VanDonRaw['Kích thước(DxRxC)'].replace({'0.000x0.000x0.000':'10.000x10.000x10.000'})\n",
        "VanDonRaw['Kích thước(DxRxC)'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kTRkWpbIBuZO",
        "outputId": "d22ac54b-811f-4061-f276-6ffc68f9ae40"
      },
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Kích thước(DxRxC)\n",
              "10.000x10.000x10.000    5820\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Tách cột kích thước thành 3 cột Dài, Rộng, Cao và chuyển về đúng định dạng dữ liệu float\n",
        "# Split bằng ký tự 'x'\n",
        "VanDonRaw['Dài'] = VanDonRaw['Kích thước(DxRxC)'].apply(lambda x: float(x.split('x')[0]))\n",
        "# Lấy ký tự đầu tiên (index 0) của List sau khi tách là giá trị Chiều Dài đồng thời chuyển về dữ liệu dạng int\n",
        "VanDonRaw['Rộng'] = VanDonRaw['Kích thước(DxRxC)'].apply(lambda x: float(x.split('x')[1]))\n",
        "# Lấy ký tự đầu tiên (index 1) của List sau khi tách là giá trị Chiều Rộng đồng thời chuyển về dữ liệu dạng int\n",
        "VanDonRaw['Cao'] = VanDonRaw['Kích thước(DxRxC)'].apply(lambda x: float(x.split('x')[2]))\n",
        "# Lấy ký tự đầu tiên (index 2) của List sau khi tách là giá trị Chiều Rộng đồng thời chuyển về dữ liệu dạng int\n",
        "VanDonRaw.head()"
      ],
      "metadata": {
        "id": "yAiiAhWVCoK4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop cột thừa sau khi đã xử lý xong\n",
        "VanDonRaw.drop(['Kích thước(DxRxC)'], axis=1, inplace=True)\n",
        "VanDonRaw.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 525
        },
        "id": "MIdGnDHOD_72",
        "outputId": "24c094aa-5670-4bbf-f299-afc6e451f373"
      },
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Mã đơn hàng                                   Ghi chú đơn hàng  \\\n",
              "0    SON25144                                                nan   \n",
              "2    SON24883  TẶNG SÁCH LẺ PHẦN 2 CHO PHỤ HUỲNH\\ngiao trong ...   \n",
              "4    SON24943                          Giao trong giờ hành chính   \n",
              "5    SON25048                                                nan   \n",
              "6    SON25126                                                nan   \n",
              "\n",
              "  Nhân viên tạo đơn Nguồn     Mã vận đơn Tình trạng gói hàng  \\\n",
              "0  Nguyễn Thị Huyền   Web       G87L96F3        Đã giao hàng   \n",
              "2  Đỗ Thị Hồng Ngọc   Web       G87L9VTM        Đã giao hàng   \n",
              "4  Đỗ Thị Hồng Ngọc   Web  NSAPOAAAAZPQF        Đã giao hàng   \n",
              "5  Đỗ Thị Hồng Ngọc   Web  NSAPOAAAAZPQE        Đã giao hàng   \n",
              "6  Kiều Phương Thảo   Web  NSAPOAAAAZPQD        Đã giao hàng   \n",
              "\n",
              "  Trạng thái đối tác       Ngày đóng gói       Ngày xuất kho  \\\n",
              "0    Giao thành công 2020-09-16 12:49:54 2020-09-17 11:05:38   \n",
              "2    Giao thành công 2020-09-16 12:49:13 2020-09-17 11:05:48   \n",
              "4    Giao thành công 2020-09-15 19:56:20 2020-09-15 19:58:37   \n",
              "5    Giao thành công 2020-09-15 19:55:54 2020-09-15 19:58:43   \n",
              "6    Giao thành công 2020-09-15 19:55:30 2020-09-15 19:58:49   \n",
              "\n",
              "       Ngày giao hàng  ... Đơn giá CK sản phẩm  CK tổng đơn hàng  \\\n",
              "0 2020-09-19 10:20:38  ...       0           0                 0   \n",
              "2 2020-09-21 12:18:59  ...       0           0                 0   \n",
              "4 2020-09-19 12:54:17  ...  920000      140000            780000   \n",
              "5 2020-09-18 14:46:31  ...  920000      140000            780000   \n",
              "6 2020-09-18 11:03:22  ...  920000      141000            779000   \n",
              "\n",
              "  Thuế cho từng sản phẩm Tổng tiền hàng Payment_method   Shipping_Days   Dài  \\\n",
              "0                      0              0            COD 1 days 23:15:00  10.0   \n",
              "2                      0              0            COD 4 days 01:13:11  10.0   \n",
              "4                      0         780000            COD 3 days 16:55:40  10.0   \n",
              "5                      0         780000            COD 2 days 18:47:48  10.0   \n",
              "6                      0         779000            COD 2 days 15:04:33  10.0   \n",
              "\n",
              "   Rộng   Cao  \n",
              "0  10.0  10.0  \n",
              "2  10.0  10.0  \n",
              "4  10.0  10.0  \n",
              "5  10.0  10.0  \n",
              "6  10.0  10.0  \n",
              "\n",
              "[5 rows x 41 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0401ba4f-4557-4083-b1f0-eb1ca2b6c8fc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Mã đơn hàng</th>\n",
              "      <th>Ghi chú đơn hàng</th>\n",
              "      <th>Nhân viên tạo đơn</th>\n",
              "      <th>Nguồn</th>\n",
              "      <th>Mã vận đơn</th>\n",
              "      <th>Tình trạng gói hàng</th>\n",
              "      <th>Trạng thái đối tác</th>\n",
              "      <th>Ngày đóng gói</th>\n",
              "      <th>Ngày xuất kho</th>\n",
              "      <th>Ngày giao hàng</th>\n",
              "      <th>...</th>\n",
              "      <th>Đơn giá</th>\n",
              "      <th>CK sản phẩm</th>\n",
              "      <th>CK tổng đơn hàng</th>\n",
              "      <th>Thuế cho từng sản phẩm</th>\n",
              "      <th>Tổng tiền hàng</th>\n",
              "      <th>Payment_method</th>\n",
              "      <th>Shipping_Days</th>\n",
              "      <th>Dài</th>\n",
              "      <th>Rộng</th>\n",
              "      <th>Cao</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>SON25144</td>\n",
              "      <td>nan</td>\n",
              "      <td>Nguyễn Thị Huyền</td>\n",
              "      <td>Web</td>\n",
              "      <td>G87L96F3</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-16 12:49:54</td>\n",
              "      <td>2020-09-17 11:05:38</td>\n",
              "      <td>2020-09-19 10:20:38</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>COD</td>\n",
              "      <td>1 days 23:15:00</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>SON24883</td>\n",
              "      <td>TẶNG SÁCH LẺ PHẦN 2 CHO PHỤ HUỲNH\\ngiao trong ...</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>G87L9VTM</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-16 12:49:13</td>\n",
              "      <td>2020-09-17 11:05:48</td>\n",
              "      <td>2020-09-21 12:18:59</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>COD</td>\n",
              "      <td>4 days 01:13:11</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>SON24943</td>\n",
              "      <td>Giao trong giờ hành chính</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQF</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:56:20</td>\n",
              "      <td>2020-09-15 19:58:37</td>\n",
              "      <td>2020-09-19 12:54:17</td>\n",
              "      <td>...</td>\n",
              "      <td>920000</td>\n",
              "      <td>140000</td>\n",
              "      <td>780000</td>\n",
              "      <td>0</td>\n",
              "      <td>780000</td>\n",
              "      <td>COD</td>\n",
              "      <td>3 days 16:55:40</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>SON25048</td>\n",
              "      <td>nan</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQE</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:55:54</td>\n",
              "      <td>2020-09-15 19:58:43</td>\n",
              "      <td>2020-09-18 14:46:31</td>\n",
              "      <td>...</td>\n",
              "      <td>920000</td>\n",
              "      <td>140000</td>\n",
              "      <td>780000</td>\n",
              "      <td>0</td>\n",
              "      <td>780000</td>\n",
              "      <td>COD</td>\n",
              "      <td>2 days 18:47:48</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>SON25126</td>\n",
              "      <td>nan</td>\n",
              "      <td>Kiều Phương Thảo</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQD</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:55:30</td>\n",
              "      <td>2020-09-15 19:58:49</td>\n",
              "      <td>2020-09-18 11:03:22</td>\n",
              "      <td>...</td>\n",
              "      <td>920000</td>\n",
              "      <td>141000</td>\n",
              "      <td>779000</td>\n",
              "      <td>0</td>\n",
              "      <td>779000</td>\n",
              "      <td>COD</td>\n",
              "      <td>2 days 15:04:33</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 41 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0401ba4f-4557-4083-b1f0-eb1ca2b6c8fc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0401ba4f-4557-4083-b1f0-eb1ca2b6c8fc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0401ba4f-4557-4083-b1f0-eb1ca2b6c8fc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-33009846-4dac-43c8-9191-dd53cf2511f5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33009846-4dac-43c8-9191-dd53cf2511f5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-33009846-4dac-43c8-9191-dd53cf2511f5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "VanDonRaw"
            }
          },
          "metadata": {},
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT TRẠNG THÁI ĐỐI TÁC/ DỊCH VỤ GIAO HÀNG"
      ],
      "metadata": {
        "id": "v-raCOUkKset"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sQ7J5x_BFI8C",
        "outputId": "aca03864-9a35-4a6d-daa8-d809962ecd58"
      },
      "execution_count": 85,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 5820 entries, 0 to 7942\n",
            "Data columns (total 41 columns):\n",
            " #   Column                       Non-Null Count  Dtype          \n",
            "---  ------                       --------------  -----          \n",
            " 0   Mã đơn hàng                  5820 non-null   object         \n",
            " 1   Ghi chú đơn hàng             5820 non-null   object         \n",
            " 2   Nhân viên tạo đơn            5820 non-null   object         \n",
            " 3   Nguồn                        5820 non-null   object         \n",
            " 4   Mã vận đơn                   5820 non-null   object         \n",
            " 5   Tình trạng gói hàng          5820 non-null   object         \n",
            " 6   Trạng thái đối tác           5819 non-null   object         \n",
            " 7   Ngày đóng gói                5820 non-null   datetime64[ns] \n",
            " 8   Ngày xuất kho                5820 non-null   datetime64[ns] \n",
            " 9   Ngày giao hàng               5115 non-null   datetime64[ns] \n",
            " 10  Đối tác giao hàng            5820 non-null   object         \n",
            " 11  Dịch vụ giao hàng            5819 non-null   object         \n",
            " 12  Khối lượng(g)                5820 non-null   float64        \n",
            " 13  Tên người nhận               5820 non-null   object         \n",
            " 14  SĐT người nhận               5820 non-null   object         \n",
            " 15  Địa chỉ giao hàng            5820 non-null   object         \n",
            " 16  Tỉnh/Thành                   5820 non-null   object         \n",
            " 17  Quận/Huyện                   5820 non-null   object         \n",
            " 18  Phường xã                    5820 non-null   object         \n",
            " 19  Trạng thái đối soát          5820 non-null   object         \n",
            " 20  Tiền khách phải trả cho đơn  5820 non-null   float64        \n",
            " 21  Khách hàng đã trả            5033 non-null   float64        \n",
            " 22  Tổng tiền thu hộ             5820 non-null   float64        \n",
            " 23  Phí vận chuyển               5820 non-null   float64        \n",
            " 24  Người trả phí                5820 non-null   object         \n",
            " 25  Phí trả đối tác              5820 non-null   float64        \n",
            " 26  Ghi chú đơn giao             5820 non-null   object         \n",
            " 27  Mã sản phẩm                  5820 non-null   object         \n",
            " 28  Tên sản phẩm                 5820 non-null   object         \n",
            " 29  Số lượng                     5820 non-null   int64          \n",
            " 30  Đơn vị tính                  2028 non-null   object         \n",
            " 31  Đơn giá                      5820 non-null   int64          \n",
            " 32  CK sản phẩm                  5820 non-null   int64          \n",
            " 33  CK tổng đơn hàng             5820 non-null   int64          \n",
            " 34  Thuế cho từng sản phẩm       5820 non-null   int64          \n",
            " 35  Tổng tiền hàng               5820 non-null   int64          \n",
            " 36  Payment_method               5820 non-null   object         \n",
            " 37  Shipping_Days                5115 non-null   timedelta64[ns]\n",
            " 38  Dài                          5820 non-null   float64        \n",
            " 39  Rộng                         5820 non-null   float64        \n",
            " 40  Cao                          5820 non-null   float64        \n",
            "dtypes: datetime64[ns](3), float64(9), int64(6), object(22), timedelta64[ns](1)\n",
            "memory usage: 1.9+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Cột Trạng thái đối tác và Dịch vụ giao hàng có chứa 1 giá trị NULL/NA\n",
        "null_rows = VanDonRaw.loc[VanDonRaw['Trạng thái đối tác'].isnull()]\n",
        "print(null_rows)\n",
        "# Đã có thông tin ngày giao hàng --> Đã giao hàng thành công --> Fill Mode"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Pndydt9_F42m",
        "outputId": "447744ff-99a2-45f2-9a10-0706dfd681fc"
      },
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Mã đơn hàng                  Ghi chú đơn hàng Nhân viên tạo đơn Nguồn  \\\n",
            "3036    SON23116  gọi điện hẹn trước khi giao hàng    Đinh Thu Hường   Web   \n",
            "\n",
            "     Mã vận đơn Tình trạng gói hàng Trạng thái đối tác       Ngày đóng gói  \\\n",
            "3036   FUN25838        Đã giao hàng                NaN 2020-08-25 15:24:21   \n",
            "\n",
            "           Ngày xuất kho      Ngày giao hàng  ... Đơn giá CK sản phẩm  \\\n",
            "3036 2020-08-25 15:24:24 2020-09-20 18:48:55  ...       0           0   \n",
            "\n",
            "      CK tổng đơn hàng Thuế cho từng sản phẩm Tổng tiền hàng Payment_method  \\\n",
            "3036                 0                      0              0            COD   \n",
            "\n",
            "        Shipping_Days   Dài  Rộng   Cao  \n",
            "3036 26 days 03:24:31  10.0  10.0  10.0  \n",
            "\n",
            "[1 rows x 41 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw['Trạng thái đối tác'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1rgPy6QHJuZF",
        "outputId": "661de416-31f7-498a-fcb3-eb09744e669b"
      },
      "execution_count": 90,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Trạng thái đối tác\n",
              "Giao thành công         5107\n",
              "Trả thành công           685\n",
              "Chờ lấy hàng               9\n",
              "Đang lấy hàng              5\n",
              "Đang giao hàng             5\n",
              "Chờ trả hàng               2\n",
              "Giao hàng thành công       2\n",
              "Thất lạc                   2\n",
              "Chờ lấy lại                1\n",
              "Đã giao hàng               1\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Fill NA với 'Giao hàng thành công'\n",
        "VanDonRaw['Trạng thái đối tác'].fillna('Giao thành công', inplace = True)"
      ],
      "metadata": {
        "id": "dVTifDfLKcCF"
      },
      "execution_count": 94,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "null_rows = VanDonRaw.loc[VanDonRaw['Dịch vụ giao hàng'].isnull()]\n",
        "print(null_rows)\n",
        "# Đối với thông tin cột dịch vụ giao hàng, dựa vào thông tin Đối tác giao hàng để Fill --> Fill ship Ngoài"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tYzrBCzBHOvX",
        "outputId": "ba9fc73b-e9d8-47e7-ff26-ad60920cf1b4"
      },
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Mã đơn hàng                  Ghi chú đơn hàng Nhân viên tạo đơn Nguồn  \\\n",
            "3036    SON23116  gọi điện hẹn trước khi giao hàng    Đinh Thu Hường   Web   \n",
            "\n",
            "     Mã vận đơn Tình trạng gói hàng Trạng thái đối tác       Ngày đóng gói  \\\n",
            "3036   FUN25838        Đã giao hàng                NaN 2020-08-25 15:24:21   \n",
            "\n",
            "           Ngày xuất kho      Ngày giao hàng  ... Đơn giá CK sản phẩm  \\\n",
            "3036 2020-08-25 15:24:24 2020-09-20 18:48:55  ...       0           0   \n",
            "\n",
            "      CK tổng đơn hàng Thuế cho từng sản phẩm Tổng tiền hàng Payment_method  \\\n",
            "3036                 0                      0              0            COD   \n",
            "\n",
            "        Shipping_Days   Dài  Rộng   Cao  \n",
            "3036 26 days 03:24:31  10.0  10.0  10.0  \n",
            "\n",
            "[1 rows x 41 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Locate để tìm ra đối tác giao hàng hàng 3036, cột Đối tác giao hàng\n",
        "VanDonRaw.at[3036, 'Đối tác giao hàng']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "HUrh86aeIWyN",
        "outputId": "890f0ad6-0d54-4c8d-c000-dfb461f47ce3"
      },
      "execution_count": 89,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'SHIP NGOÀI'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Fill NaN bằng Ship Ngoài\n",
        "VanDonRaw['Dịch vụ giao hàng'].fillna('Ship Ngoài', inplace = True)"
      ],
      "metadata": {
        "id": "1JRrRNgSKDdq"
      },
      "execution_count": 95,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT ĐƠN VỊ TÍNH\n",
        "\n",
        "** Note\n",
        "* Dữ liệu bị NULL nhiều, cần dựa vào Cột Tên sản phẩm để Fill\n"
      ],
      "metadata": {
        "id": "mznvnmQqMAxP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw['Đơn vị tính'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KlnFhqwOMDwT",
        "outputId": "0e7f7266-47e8-4b83-bbaf-6e02248a59bc"
      },
      "execution_count": 97,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Đơn vị tính\n",
              "Bộ    2028\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 97
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw['Tên sản phẩm'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "t1rFE-ADOEdk",
        "outputId": "27165fe5-2a8c-4412-b257-dfdc759d1683"
      },
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Tên sản phẩm\n",
              "BỘ SÁCH TEENUP - KID                                                       3310\n",
              "BỘ SÁCH TEENUP - TEEN                                                      2028\n",
              "Sách TeenUp - PH - Phần 1                                                   263\n",
              "Sách TeenUp - PH                                                            117\n",
              "COMBO TEEN - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ TỎA SÁNG (KÈM BỘ SÁCH PH)      37\n",
              "Sách TeenUp - PH - Phần 3                                                    25\n",
              "COMBO KID - BỘ SÁCH TEENUP - 90 NGÀY DẬY THÌ TỎA SÁNG (KÈM BỘ SÁCH PH)       15\n",
              "Sách TeenUp - Phần 4                                                          7\n",
              "Quà tặng lớp lộ trình                                                         5\n",
              "Sách TeenUp - PH - Phần 2                                                     2\n",
              "Quà tặng chào mừng                                                            2\n",
              "Cốc nguyệt san                                                                2\n",
              "Kid499-Hộp trưởng thành phiên bản tiết kiệm x Mã Amaze                        1\n",
              "Teen499-Hộp trưởng thành phiên bản tiết kiệm x Mã Amaze                       1\n",
              "Thu hồi                                                                       1\n",
              "Hợp đồng dịch vụ                                                              1\n",
              "Sách TeenUp - Phần 2                                                          1\n",
              "Sách TeenUp - Phần 1                                                          1\n",
              "Sách TeenUp - Phần 6T                                                         1\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "row = VanDonRaw[VanDonRaw[\"Tên sản phẩm\"] == 'Thu hồi']\n",
        "print(row)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GJbI5aOwP98a",
        "outputId": "b30ecee8-f0c1-4d0a-8293-685792de58a7"
      },
      "execution_count": 102,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    Mã đơn hàng Ghi chú đơn hàng Nhân viên tạo đơn Nguồn Mã vận đơn  \\\n",
            "260    SON25853              nan         Phi Dương   Web   G8FENMRT   \n",
            "\n",
            "    Tình trạng gói hàng Trạng thái đối tác       Ngày đóng gói  \\\n",
            "260        Đã giao hàng    Giao thành công 2020-09-14 18:14:20   \n",
            "\n",
            "          Ngày xuất kho      Ngày giao hàng  ... Đơn giá CK sản phẩm  \\\n",
            "260 2020-09-14 18:44:34 2020-09-16 09:04:14  ...       0           0   \n",
            "\n",
            "     CK tổng đơn hàng Thuế cho từng sản phẩm Tổng tiền hàng Payment_method  \\\n",
            "260                 0                      0              0   Chuyển khoản   \n",
            "\n",
            "      Shipping_Days   Dài  Rộng   Cao  \n",
            "260 1 days 14:19:40  10.0  10.0  10.0  \n",
            "\n",
            "[1 rows x 41 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw.at[260, 'Mã sản phẩm']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "FLC7QNvvRK6D",
        "outputId": "ca0faaa4-19f8-4b51-82d7-b175ab42d9d9"
      },
      "execution_count": 103,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'PVN480'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 103
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "row = VanDonRaw[VanDonRaw[\"Tên sản phẩm\"] == 'Hợp đồng dịch vụ']\n",
        "print(row)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r8SeXFs1RsPl",
        "outputId": "43b1c579-ea5c-42c3-8f0d-342f17fe1ab2"
      },
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Mã đơn hàng Ghi chú đơn hàng Nhân viên tạo đơn Nguồn Mã vận đơn  \\\n",
            "1850    SON24842              nan         Phi Dương   Web   G8F4HHX3   \n",
            "\n",
            "     Tình trạng gói hàng Trạng thái đối tác       Ngày đóng gói  \\\n",
            "1850        Đã giao hàng    Giao thành công 2020-09-05 16:47:46   \n",
            "\n",
            "           Ngày xuất kho      Ngày giao hàng  ... Đơn giá CK sản phẩm  \\\n",
            "1850 2020-09-05 18:23:24 2020-09-07 14:54:40  ...       0           0   \n",
            "\n",
            "      CK tổng đơn hàng Thuế cho từng sản phẩm Tổng tiền hàng Payment_method  \\\n",
            "1850                 0                      0              0   Chuyển khoản   \n",
            "\n",
            "       Shipping_Days   Dài  Rộng   Cao  \n",
            "1850 1 days 20:31:16  10.0  10.0  10.0  \n",
            "\n",
            "[1 rows x 41 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw.at[1850, 'Mã sản phẩm']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "7smWtViBSETz",
        "outputId": "047bf13d-b1ca-4335-c5f5-5b39da244472"
      },
      "execution_count": 105,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'PVN479'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "* Logic để Fill là các Tên sản phẩm có chứa từ khoá như Bộ, Combo,... --> Đơn vị tính là Bộ, còn lại là Cuốn"
      ],
      "metadata": {
        "id": "ZjzInjaX_EG9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Xây dựng Hàm để fill ĐVT theo logic trên\n",
        "def dvt_filler(x):\n",
        "\n",
        "    if 'Bộ' in x.lower() or 'combo' in x.lower() or 'quà tặng' in x.lower() or 'amaze' in x.lower() or 'cốc' in x.lower() or 'thu hồi' in x.lower() or 'hợp đồng dịch vụ' in x.lower():\n",
        "        return 'Bộ'\n",
        "    else:\n",
        "        return 'Cuốn'"
      ],
      "metadata": {
        "id": "LKeqELpKSMv0"
      },
      "execution_count": 106,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Apply function\n",
        "VanDonRaw['Đơn_vị_tính'] = VanDonRaw['Tên sản phẩm'].apply(dvt_filler)\n",
        "VanDonRaw['Đơn_vị_tính'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gO6l6C8eTgAq",
        "outputId": "3e655ea3-28d5-448d-b355-2d7cb206c207"
      },
      "execution_count": 107,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Đơn_vị_tính\n",
              "Cuốn    5755\n",
              "Bộ        65\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 107
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop col thừa sau khi đã xử lý xong\n",
        "VanDonRaw.drop(['Đơn vị tính'], axis=1, inplace=True)\n",
        "VanDonRaw.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 525
        },
        "id": "UUM58BWHT3nO",
        "outputId": "7387bbef-a68c-4af5-d9f5-db458a1cad6f"
      },
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Mã đơn hàng                                   Ghi chú đơn hàng  \\\n",
              "0    SON25144                                                nan   \n",
              "2    SON24883  TẶNG SÁCH LẺ PHẦN 2 CHO PHỤ HUỲNH\\ngiao trong ...   \n",
              "4    SON24943                          Giao trong giờ hành chính   \n",
              "5    SON25048                                                nan   \n",
              "6    SON25126                                                nan   \n",
              "\n",
              "  Nhân viên tạo đơn Nguồn     Mã vận đơn Tình trạng gói hàng  \\\n",
              "0  Nguyễn Thị Huyền   Web       G87L96F3        Đã giao hàng   \n",
              "2  Đỗ Thị Hồng Ngọc   Web       G87L9VTM        Đã giao hàng   \n",
              "4  Đỗ Thị Hồng Ngọc   Web  NSAPOAAAAZPQF        Đã giao hàng   \n",
              "5  Đỗ Thị Hồng Ngọc   Web  NSAPOAAAAZPQE        Đã giao hàng   \n",
              "6  Kiều Phương Thảo   Web  NSAPOAAAAZPQD        Đã giao hàng   \n",
              "\n",
              "  Trạng thái đối tác       Ngày đóng gói       Ngày xuất kho  \\\n",
              "0    Giao thành công 2020-09-16 12:49:54 2020-09-17 11:05:38   \n",
              "2    Giao thành công 2020-09-16 12:49:13 2020-09-17 11:05:48   \n",
              "4    Giao thành công 2020-09-15 19:56:20 2020-09-15 19:58:37   \n",
              "5    Giao thành công 2020-09-15 19:55:54 2020-09-15 19:58:43   \n",
              "6    Giao thành công 2020-09-15 19:55:30 2020-09-15 19:58:49   \n",
              "\n",
              "       Ngày giao hàng  ... CK sản phẩm CK tổng đơn hàng  \\\n",
              "0 2020-09-19 10:20:38  ...           0                0   \n",
              "2 2020-09-21 12:18:59  ...           0                0   \n",
              "4 2020-09-19 12:54:17  ...      140000           780000   \n",
              "5 2020-09-18 14:46:31  ...      140000           780000   \n",
              "6 2020-09-18 11:03:22  ...      141000           779000   \n",
              "\n",
              "   Thuế cho từng sản phẩm Tổng tiền hàng Payment_method   Shipping_Days   Dài  \\\n",
              "0                       0              0            COD 1 days 23:15:00  10.0   \n",
              "2                       0              0            COD 4 days 01:13:11  10.0   \n",
              "4                       0         780000            COD 3 days 16:55:40  10.0   \n",
              "5                       0         780000            COD 2 days 18:47:48  10.0   \n",
              "6                       0         779000            COD 2 days 15:04:33  10.0   \n",
              "\n",
              "   Rộng   Cao Đơn_vị_tính  \n",
              "0  10.0  10.0        Cuốn  \n",
              "2  10.0  10.0        Cuốn  \n",
              "4  10.0  10.0          Bộ  \n",
              "5  10.0  10.0          Bộ  \n",
              "6  10.0  10.0          Bộ  \n",
              "\n",
              "[5 rows x 41 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3e3bb13a-60ab-4542-aaa5-1598e685cc0b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Mã đơn hàng</th>\n",
              "      <th>Ghi chú đơn hàng</th>\n",
              "      <th>Nhân viên tạo đơn</th>\n",
              "      <th>Nguồn</th>\n",
              "      <th>Mã vận đơn</th>\n",
              "      <th>Tình trạng gói hàng</th>\n",
              "      <th>Trạng thái đối tác</th>\n",
              "      <th>Ngày đóng gói</th>\n",
              "      <th>Ngày xuất kho</th>\n",
              "      <th>Ngày giao hàng</th>\n",
              "      <th>...</th>\n",
              "      <th>CK sản phẩm</th>\n",
              "      <th>CK tổng đơn hàng</th>\n",
              "      <th>Thuế cho từng sản phẩm</th>\n",
              "      <th>Tổng tiền hàng</th>\n",
              "      <th>Payment_method</th>\n",
              "      <th>Shipping_Days</th>\n",
              "      <th>Dài</th>\n",
              "      <th>Rộng</th>\n",
              "      <th>Cao</th>\n",
              "      <th>Đơn_vị_tính</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>SON25144</td>\n",
              "      <td>nan</td>\n",
              "      <td>Nguyễn Thị Huyền</td>\n",
              "      <td>Web</td>\n",
              "      <td>G87L96F3</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-16 12:49:54</td>\n",
              "      <td>2020-09-17 11:05:38</td>\n",
              "      <td>2020-09-19 10:20:38</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>COD</td>\n",
              "      <td>1 days 23:15:00</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>Cuốn</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>SON24883</td>\n",
              "      <td>TẶNG SÁCH LẺ PHẦN 2 CHO PHỤ HUỲNH\\ngiao trong ...</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>G87L9VTM</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-16 12:49:13</td>\n",
              "      <td>2020-09-17 11:05:48</td>\n",
              "      <td>2020-09-21 12:18:59</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>COD</td>\n",
              "      <td>4 days 01:13:11</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>Cuốn</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>SON24943</td>\n",
              "      <td>Giao trong giờ hành chính</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQF</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:56:20</td>\n",
              "      <td>2020-09-15 19:58:37</td>\n",
              "      <td>2020-09-19 12:54:17</td>\n",
              "      <td>...</td>\n",
              "      <td>140000</td>\n",
              "      <td>780000</td>\n",
              "      <td>0</td>\n",
              "      <td>780000</td>\n",
              "      <td>COD</td>\n",
              "      <td>3 days 16:55:40</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>Bộ</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>SON25048</td>\n",
              "      <td>nan</td>\n",
              "      <td>Đỗ Thị Hồng Ngọc</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQE</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:55:54</td>\n",
              "      <td>2020-09-15 19:58:43</td>\n",
              "      <td>2020-09-18 14:46:31</td>\n",
              "      <td>...</td>\n",
              "      <td>140000</td>\n",
              "      <td>780000</td>\n",
              "      <td>0</td>\n",
              "      <td>780000</td>\n",
              "      <td>COD</td>\n",
              "      <td>2 days 18:47:48</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>Bộ</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>SON25126</td>\n",
              "      <td>nan</td>\n",
              "      <td>Kiều Phương Thảo</td>\n",
              "      <td>Web</td>\n",
              "      <td>NSAPOAAAAZPQD</td>\n",
              "      <td>Đã giao hàng</td>\n",
              "      <td>Giao thành công</td>\n",
              "      <td>2020-09-15 19:55:30</td>\n",
              "      <td>2020-09-15 19:58:49</td>\n",
              "      <td>2020-09-18 11:03:22</td>\n",
              "      <td>...</td>\n",
              "      <td>141000</td>\n",
              "      <td>779000</td>\n",
              "      <td>0</td>\n",
              "      <td>779000</td>\n",
              "      <td>COD</td>\n",
              "      <td>2 days 15:04:33</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>Bộ</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 41 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e3bb13a-60ab-4542-aaa5-1598e685cc0b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3e3bb13a-60ab-4542-aaa5-1598e685cc0b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3e3bb13a-60ab-4542-aaa5-1598e685cc0b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d42151fb-4576-48a3-a267-e605511de1d4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d42151fb-4576-48a3-a267-e605511de1d4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d42151fb-4576-48a3-a267-e605511de1d4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "VanDonRaw"
            }
          },
          "metadata": {},
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT KHỐI LƯỢNG\n",
        "\n"
      ],
      "metadata": {
        "id": "LRuoMtReVdEF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw['Khối lượng(g)'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qfqOBmDZVi5E",
        "outputId": "5e835119-7e49-4972-e57c-754b627dce82"
      },
      "execution_count": 115,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Khối lượng(g)\n",
              "500.0     5630\n",
              "1000.0     106\n",
              "100.0       72\n",
              "0.0          9\n",
              "1500.0       2\n",
              "3500.0       1\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 115
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "row = VanDonRaw[VanDonRaw[\"Khối lượng(g)\"] == 0.0]\n",
        "row['Tên sản phẩm']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2UJYAVy7XQMB",
        "outputId": "d0defd8e-8390-4e70-f598-515d24a7b5f4"
      },
      "execution_count": 122,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4815     BỘ SÁCH TEENUP - KID\n",
              "4817    BỘ SÁCH TEENUP - TEEN\n",
              "4819     BỘ SÁCH TEENUP - KID\n",
              "4821     BỘ SÁCH TEENUP - KID\n",
              "4823    BỘ SÁCH TEENUP - TEEN\n",
              "4825    BỘ SÁCH TEENUP - TEEN\n",
              "4827     BỘ SÁCH TEENUP - KID\n",
              "4829     BỘ SÁCH TEENUP - KID\n",
              "4831     BỘ SÁCH TEENUP - KID\n",
              "Name: Tên sản phẩm, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 122
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "row = VanDonRaw[VanDonRaw[\"Khối lượng(g)\"] == 0.0]\n",
        "row['Số lượng']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DoZPFMbxVuLW",
        "outputId": "fd26df5a-caad-4cfe-8ee3-a0bdf8269e9f"
      },
      "execution_count": 121,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4815    1\n",
              "4817    1\n",
              "4819    1\n",
              "4821    1\n",
              "4823    1\n",
              "4825    1\n",
              "4827    1\n",
              "4829    1\n",
              "4831    1\n",
              "Name: Số lượng, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 121
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 9 dòng có giá trị khối lượng = 0 là bất hợp lý, dựa vào thông tin sản phẩm và số lượng để FILL --> 500g\n",
        "VanDonRaw['Khối lượng(g)'] = VanDonRaw['Khối lượng(g)'].replace({0.0:500})\n",
        "VanDonRaw['Khối lượng(g)'].value_counts()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qSmAK5jLX7yG",
        "outputId": "e7fa29d7-43f9-4e15-ab0c-cc2e9942d61b"
      },
      "execution_count": 123,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Khối lượng(g)\n",
              "500.0     5639\n",
              "1000.0     106\n",
              "100.0       72\n",
              "1500.0       2\n",
              "3500.0       1\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 123
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonRaw.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-gLxkFuRUDTQ",
        "outputId": "c9ab2df7-dd64-4552-ffed-f1a4a096e951"
      },
      "execution_count": 124,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 5820 entries, 0 to 7942\n",
            "Data columns (total 40 columns):\n",
            " #   Column                       Non-Null Count  Dtype          \n",
            "---  ------                       --------------  -----          \n",
            " 0   Mã đơn hàng                  5820 non-null   object         \n",
            " 1   Ghi chú đơn hàng             5820 non-null   object         \n",
            " 2   Nhân viên tạo đơn            5820 non-null   object         \n",
            " 3   Nguồn                        5820 non-null   object         \n",
            " 4   Mã vận đơn                   5820 non-null   object         \n",
            " 5   Tình trạng gói hàng          5820 non-null   object         \n",
            " 6   Trạng thái đối tác           5820 non-null   object         \n",
            " 7   Ngày đóng gói                5820 non-null   datetime64[ns] \n",
            " 8   Ngày xuất kho                5820 non-null   datetime64[ns] \n",
            " 9   Ngày giao hàng               5115 non-null   datetime64[ns] \n",
            " 10  Đối tác giao hàng            5820 non-null   object         \n",
            " 11  Dịch vụ giao hàng            5820 non-null   object         \n",
            " 12  Khối lượng(g)                5820 non-null   float64        \n",
            " 13  Tên người nhận               5820 non-null   object         \n",
            " 14  SĐT người nhận               5820 non-null   object         \n",
            " 15  Địa chỉ giao hàng            5820 non-null   object         \n",
            " 16  Tỉnh/Thành                   5820 non-null   object         \n",
            " 17  Quận/Huyện                   5820 non-null   object         \n",
            " 18  Phường xã                    5820 non-null   object         \n",
            " 19  Trạng thái đối soát          5820 non-null   object         \n",
            " 20  Tiền khách phải trả cho đơn  5820 non-null   float64        \n",
            " 21  Khách hàng đã trả            5033 non-null   float64        \n",
            " 22  Tổng tiền thu hộ             5820 non-null   float64        \n",
            " 23  Phí vận chuyển               5820 non-null   float64        \n",
            " 24  Người trả phí                5820 non-null   object         \n",
            " 25  Phí trả đối tác              5820 non-null   float64        \n",
            " 26  Ghi chú đơn giao             5820 non-null   object         \n",
            " 27  Mã sản phẩm                  5820 non-null   object         \n",
            " 28  Tên sản phẩm                 5820 non-null   object         \n",
            " 29  Số lượng                     5820 non-null   int64          \n",
            " 30  Đơn giá                      5820 non-null   int64          \n",
            " 31  CK sản phẩm                  5820 non-null   int64          \n",
            " 32  CK tổng đơn hàng             5820 non-null   int64          \n",
            " 33  Tổng tiền hàng               5820 non-null   int64          \n",
            " 34  Payment_method               5820 non-null   object         \n",
            " 35  Shipping_Days                5115 non-null   timedelta64[ns]\n",
            " 36  Dài                          5820 non-null   float64        \n",
            " 37  Rộng                         5820 non-null   float64        \n",
            " 38  Cao                          5820 non-null   float64        \n",
            " 39  Đơn_vị_tính                  5820 non-null   object         \n",
            "dtypes: datetime64[ns](3), float64(9), int64(5), object(22), timedelta64[ns](1)\n",
            "memory usage: 1.9+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonClean = VanDonRaw.copy()"
      ],
      "metadata": {
        "id": "RTqnkuhiUG6j"
      },
      "execution_count": 129,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "VanDonClean.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 470
        },
        "id": "ksOTjnjdUgGR",
        "outputId": "21f8e00d-9ce9-4490-d377-75a969ea92a5"
      },
      "execution_count": 130,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       Ngày đóng gói                  Ngày xuất kho  \\\n",
              "count                           5820                           5820   \n",
              "mean   2020-08-16 14:05:42.043814400  2020-08-16 16:40:30.753264640   \n",
              "min              2020-07-03 12:12:12            2020-07-03 14:46:30   \n",
              "25%              2020-07-21 17:24:08     2020-07-21 17:30:52.500000   \n",
              "50%              2020-08-23 14:02:01            2020-08-23 14:28:25   \n",
              "75%              2020-09-06 18:41:28     2020-09-06 21:06:18.500000   \n",
              "max              2020-09-16 12:49:54            2020-09-17 11:05:48   \n",
              "std                              NaN                            NaN   \n",
              "\n",
              "                      Ngày giao hàng  Khối lượng(g)  \\\n",
              "count                           5115    5820.000000   \n",
              "mean   2020-08-18 23:10:28.106158336     505.017182   \n",
              "min              2020-07-03 15:01:42     100.000000   \n",
              "25%              2020-07-24 17:39:28     500.000000   \n",
              "50%              2020-08-25 15:09:15     500.000000   \n",
              "75%       2020-09-09 12:05:09.500000     500.000000   \n",
              "max              2020-09-27 08:46:53    3500.000000   \n",
              "std                              NaN      91.645793   \n",
              "\n",
              "       Tiền khách phải trả cho đơn  Khách hàng đã trả  Tổng tiền thu hộ  \\\n",
              "count                 5.820000e+03       5.033000e+03      5.820000e+03   \n",
              "mean                  5.015255e+05       5.074003e+05      5.003326e+05   \n",
              "min                   0.000000e+00       2.800000e+05      0.000000e+00   \n",
              "25%                   4.990000e+05       4.990000e+05      4.990000e+05   \n",
              "50%                   4.990000e+05       4.990000e+05      4.990000e+05   \n",
              "75%                   4.990000e+05       4.990000e+05      4.990000e+05   \n",
              "max                   3.003000e+06       3.003000e+06      3.003000e+06   \n",
              "std                   9.296331e+04       6.480790e+04      9.554541e+04   \n",
              "\n",
              "       Phí trả đối tác     Số lượng       Đơn giá    CK sản phẩm  \\\n",
              "count      5820.000000  5820.000000  5.820000e+03    5820.000000   \n",
              "mean      25491.115808     1.001546  5.554367e+05   89489.690722   \n",
              "min           0.000000     1.000000  0.000000e+00       0.000000   \n",
              "25%       25940.000000     1.000000  4.990000e+05       0.000000   \n",
              "50%       26600.000000     1.000000  6.390000e+05  140000.000000   \n",
              "75%       26600.000000     1.000000  6.390000e+05  140000.000000   \n",
              "max      126704.000000     5.000000  1.390000e+06  141000.000000   \n",
              "std        3255.162344     0.062850  1.723976e+05   67243.257480   \n",
              "\n",
              "       CK tổng đơn hàng  Tổng tiền hàng              Shipping_Days     Dài  \\\n",
              "count      5.820000e+03    5.820000e+03                       5115  5820.0   \n",
              "mean       4.664133e+05    4.664133e+05  2 days 02:12:19.969501466    10.0   \n",
              "min        0.000000e+00    0.000000e+00            0 days 00:13:37    10.0   \n",
              "25%        4.990000e+05    4.990000e+05            1 days 00:11:24    10.0   \n",
              "50%        4.990000e+05    4.990000e+05            1 days 23:29:10    10.0   \n",
              "75%        4.990000e+05    4.990000e+05     2 days 20:39:09.500000    10.0   \n",
              "max        2.145000e+06    2.145000e+06           26 days 03:24:31    10.0   \n",
              "std        1.390004e+05    1.390004e+05  1 days 08:48:42.968150060     0.0   \n",
              "\n",
              "         Rộng     Cao  \n",
              "count  5820.0  5820.0  \n",
              "mean     10.0    10.0  \n",
              "min      10.0    10.0  \n",
              "25%      10.0    10.0  \n",
              "50%      10.0    10.0  \n",
              "75%      10.0    10.0  \n",
              "max      10.0    10.0  \n",
              "std       0.0     0.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bb83bdcc-9838-4f84-bf3a-48048fbb5bae\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ngày đóng gói</th>\n",
              "      <th>Ngày xuất kho</th>\n",
              "      <th>Ngày giao hàng</th>\n",
              "      <th>Khối lượng(g)</th>\n",
              "      <th>Tiền khách phải trả cho đơn</th>\n",
              "      <th>Khách hàng đã trả</th>\n",
              "      <th>Tổng tiền thu hộ</th>\n",
              "      <th>Phí trả đối tác</th>\n",
              "      <th>Số lượng</th>\n",
              "      <th>Đơn giá</th>\n",
              "      <th>CK sản phẩm</th>\n",
              "      <th>CK tổng đơn hàng</th>\n",
              "      <th>Tổng tiền hàng</th>\n",
              "      <th>Shipping_Days</th>\n",
              "      <th>Dài</th>\n",
              "      <th>Rộng</th>\n",
              "      <th>Cao</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>5820</td>\n",
              "      <td>5820</td>\n",
              "      <td>5115</td>\n",
              "      <td>5820.000000</td>\n",
              "      <td>5.820000e+03</td>\n",
              "      <td>5.033000e+03</td>\n",
              "      <td>5.820000e+03</td>\n",
              "      <td>5820.000000</td>\n",
              "      <td>5820.000000</td>\n",
              "      <td>5.820000e+03</td>\n",
              "      <td>5820.000000</td>\n",
              "      <td>5.820000e+03</td>\n",
              "      <td>5.820000e+03</td>\n",
              "      <td>5115</td>\n",
              "      <td>5820.0</td>\n",
              "      <td>5820.0</td>\n",
              "      <td>5820.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>2020-08-16 14:05:42.043814400</td>\n",
              "      <td>2020-08-16 16:40:30.753264640</td>\n",
              "      <td>2020-08-18 23:10:28.106158336</td>\n",
              "      <td>505.017182</td>\n",
              "      <td>5.015255e+05</td>\n",
              "      <td>5.074003e+05</td>\n",
              "      <td>5.003326e+05</td>\n",
              "      <td>25491.115808</td>\n",
              "      <td>1.001546</td>\n",
              "      <td>5.554367e+05</td>\n",
              "      <td>89489.690722</td>\n",
              "      <td>4.664133e+05</td>\n",
              "      <td>4.664133e+05</td>\n",
              "      <td>2 days 02:12:19.969501466</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>2020-07-03 12:12:12</td>\n",
              "      <td>2020-07-03 14:46:30</td>\n",
              "      <td>2020-07-03 15:01:42</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>2.800000e+05</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0 days 00:13:37</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2020-07-21 17:24:08</td>\n",
              "      <td>2020-07-21 17:30:52.500000</td>\n",
              "      <td>2020-07-24 17:39:28</td>\n",
              "      <td>500.000000</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>25940.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>1 days 00:11:24</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>2020-08-23 14:02:01</td>\n",
              "      <td>2020-08-23 14:28:25</td>\n",
              "      <td>2020-08-25 15:09:15</td>\n",
              "      <td>500.000000</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>26600.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>6.390000e+05</td>\n",
              "      <td>140000.000000</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>1 days 23:29:10</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2020-09-06 18:41:28</td>\n",
              "      <td>2020-09-06 21:06:18.500000</td>\n",
              "      <td>2020-09-09 12:05:09.500000</td>\n",
              "      <td>500.000000</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>26600.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>6.390000e+05</td>\n",
              "      <td>140000.000000</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>2 days 20:39:09.500000</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2020-09-16 12:49:54</td>\n",
              "      <td>2020-09-17 11:05:48</td>\n",
              "      <td>2020-09-27 08:46:53</td>\n",
              "      <td>3500.000000</td>\n",
              "      <td>3.003000e+06</td>\n",
              "      <td>3.003000e+06</td>\n",
              "      <td>3.003000e+06</td>\n",
              "      <td>126704.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>1.390000e+06</td>\n",
              "      <td>141000.000000</td>\n",
              "      <td>2.145000e+06</td>\n",
              "      <td>2.145000e+06</td>\n",
              "      <td>26 days 03:24:31</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>91.645793</td>\n",
              "      <td>9.296331e+04</td>\n",
              "      <td>6.480790e+04</td>\n",
              "      <td>9.554541e+04</td>\n",
              "      <td>3255.162344</td>\n",
              "      <td>0.062850</td>\n",
              "      <td>1.723976e+05</td>\n",
              "      <td>67243.257480</td>\n",
              "      <td>1.390004e+05</td>\n",
              "      <td>1.390004e+05</td>\n",
              "      <td>1 days 08:48:42.968150060</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb83bdcc-9838-4f84-bf3a-48048fbb5bae')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bb83bdcc-9838-4f84-bf3a-48048fbb5bae button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bb83bdcc-9838-4f84-bf3a-48048fbb5bae');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-195263a5-feb1-472e-96e6-cf8e3ce34f89\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-195263a5-feb1-472e-96e6-cf8e3ce34f89')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-195263a5-feb1-472e-96e6-cf8e3ce34f89 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"VanDonClean\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Ng\\u00e0y \\u0111\\u00f3ng g\\u00f3i\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000005820\",\n        \"max\": \"2020-09-16 12:49:54\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"5820\",\n          \"2020-08-16 14:05:42.043814400\",\n          \"2020-09-06 18:41:28\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ng\\u00e0y xu\\u1ea5t kho\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000005820\",\n        \"max\": \"2020-09-17 11:05:48\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"5820\",\n          \"2020-08-16 16:40:30.753264640\",\n          \"2020-09-06 21:06:18.500000\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ng\\u00e0y giao h\\u00e0ng\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000005115\",\n        \"max\": \"2020-09-27 08:46:53\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"5115\",\n          \"2020-08-18 23:10:28.106158336\",\n          \"2020-09-09 12:05:09.500000\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Kh\\u1ed1i l\\u01b0\\u1ee3ng(g)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2089.6565180735133,\n        \"min\": 91.64579321845301,\n        \"max\": 5820.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5820.0,\n          505.0171821305842,\n          91.64579321845301\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ti\\u1ec1n kh\\u00e1ch ph\\u1ea3i tr\\u1ea3 cho \\u0111\\u01a1n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 983693.6313562284,\n        \"min\": 0.0,\n        \"max\": 3003000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5820.0,\n          501525.5326460481,\n          92963.31037621203\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Kh\\u00e1ch h\\u00e0ng \\u0111\\u00e3 tr\\u1ea3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 964926.9626130742,\n        \"min\": 5033.0,\n        \"max\": 3003000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5033.0,\n          507400.27816411684,\n          64807.904051786514\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ed5ng ti\\u1ec1n thu h\\u1ed9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 983513.5401846407,\n        \"min\": 0.0,\n        \"max\": 3003000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5820.0,\n          500332.57731958764,\n          95545.41496716457\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ph\\u00ed tr\\u1ea3 \\u0111\\u1ed1i t\\u00e1c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40728.25441329262,\n        \"min\": 0.0,\n        \"max\": 126704.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          5820.0,\n          25491.115807560138,\n          126704.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u01b0\\u1ee3ng\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2057.172943912143,\n        \"min\": 0.06285043700370284,\n        \"max\": 5820.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.0015463917525773,\n          0.06285043700370284,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0110\\u01a1n gi\\u00e1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 452630.3638840375,\n        \"min\": 0.0,\n        \"max\": 1390000.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          5820.0,\n          555436.7010309278,\n          1390000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CK s\\u1ea3n ph\\u1ea9m\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 64451.728783892286,\n        \"min\": 0.0,\n        \"max\": 141000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5820.0,\n          89489.69072164949,\n          67243.25747969876\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CK t\\u1ed5ng \\u0111\\u01a1n h\\u00e0ng\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 689065.0702389036,\n        \"min\": 0.0,\n        \"max\": 2145000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5820.0,\n          466413.3333333333,\n          139000.44476243306\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ed5ng ti\\u1ec1n h\\u00e0ng\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 689065.0702389036,\n        \"min\": 0.0,\n        \"max\": 2145000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5820.0,\n          466413.3333333333,\n          139000.44476243306\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Shipping_Days\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"2 days 02:12:19.969501466\",\n          \"2 days 20:39:09.500000\",\n          \"5115\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"D\\u00e0i\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2054.653255418052,\n        \"min\": 0.0,\n        \"max\": 5820.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          5820.0,\n          10.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R\\u1ed9ng\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2054.653255418052,\n        \"min\": 0.0,\n        \"max\": 5820.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          5820.0,\n          10.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2054.653255418052,\n        \"min\": 0.0,\n        \"max\": 5820.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          5820.0,\n          10.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 130
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Export File CSV\n",
        "VanDonClean.to_csv('/content/drive/My Drive/VanDonClean.csv', index=False)"
      ],
      "metadata": {
        "id": "oweQhEy-UebF"
      },
      "execution_count": 131,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# TABLE SALES"
      ],
      "metadata": {
        "id": "i03T6k0UaA9x"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Import Data\n",
        "SaleRaw = pd.read_excel('/content/drive/MyDrive/Sales.xlsx')\n",
        "SaleRaw.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 624
        },
        "id": "qo25y0MWaEVq",
        "outputId": "d9af5665-44bd-47b9-e2cb-ea3d93a77a9e"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Unnamed: 0                 Giờ        Khách hàng          SĐT Channel  \\\n",
              "0   1-7-2020 2023-07-01 00:13:42     Pham thu thuy  123400000.0      FB   \n",
              "1   1-7-2020 2023-07-01 00:17:53  Hoàng Thị Lương   123400001.0      FB   \n",
              "2   1-7-2020 2023-07-01 02:16:56    Phạm Thị huong  123400002.0      FB   \n",
              "3   1-7-2020 2023-07-01 05:21:32               Lan  123400003.0      FB   \n",
              "4   1-7-2020 2023-07-01 05:21:31       Lại Thị Đua  123400004.0      FB   \n",
              "\n",
              "  Chiến dịch     Content   Marketer 2 Type of Lead  \\\n",
              "0        CVS  B1-1812-P1  AnhNguyen08      Dathang   \n",
              "1        CVS         cay      NgocNgo      Dathang   \n",
              "2        CVS      matcon      NgocNgo      Dathang   \n",
              "3        CVS         cay      NgocNgo      Dathang   \n",
              "4        CVS  condau_sto  YenNguyen02      Dathang   \n",
              "\n",
              "  Sales Admin xác nhận Type of Lead  ... Số lần tương tác   Ngày gọi  \\\n",
              "0                          DATTHANG  ...              1.0 2020-07-01   \n",
              "1                          DATTHANG  ...              1.0 2020-07-01   \n",
              "2                          DATTHANG  ...              1.0 2020-07-03   \n",
              "3                          DATTHANG  ...              1.0 2020-07-03   \n",
              "4                          DATTHANG  ...              1.0 2020-07-03   \n",
              "\n",
              "             Trạng thái                               Level Ngày hẹn gọi lại  \\\n",
              "0  Hủy đơn sau khi chốt         L7.2 - Hủy đơn sau khi chốt              NaT   \n",
              "1              Đặt hàng  L8.2 - Khách đã thanh toán toàn bộ              NaT   \n",
              "2  Hủy đơn sau khi chốt         L7.2 - Hủy đơn sau khi chốt              NaT   \n",
              "3  Hủy đơn sau khi chốt         L7.2 - Hủy đơn sau khi chốt              NaT   \n",
              "4              Đặt hàng  L8.2 - Khách đã thanh toán toàn bộ              NaT   \n",
              "\n",
              "  Close Date     Tỉnh/TP Số lượng bộ sách  Số tiền giảm giá  Tổng tiền  \n",
              "0        NaT         NaN              1.0          140000.0     499000  \n",
              "1 2023-07-04  Quảng Ninh              1.0          140000.0     499000  \n",
              "2        NaT         NaN              1.0          140000.0     499000  \n",
              "3        NaT         NaN              1.0          140000.0     499000  \n",
              "4 2023-07-05      Hà Nội              1.0          140000.0     499000  \n",
              "\n",
              "[5 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ee05a970-99e4-413c-ab0c-eedb7f88e257\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Giờ</th>\n",
              "      <th>Khách hàng</th>\n",
              "      <th>SĐT</th>\n",
              "      <th>Channel</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Content</th>\n",
              "      <th>Marketer 2</th>\n",
              "      <th>Type of Lead</th>\n",
              "      <th>Sales Admin xác nhận Type of Lead</th>\n",
              "      <th>...</th>\n",
              "      <th>Số lần tương tác</th>\n",
              "      <th>Ngày gọi</th>\n",
              "      <th>Trạng thái</th>\n",
              "      <th>Level</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Tỉnh/TP</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Số tiền giảm giá</th>\n",
              "      <th>Tổng tiền</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1-7-2020</td>\n",
              "      <td>2023-07-01 00:13:42</td>\n",
              "      <td>Pham thu thuy</td>\n",
              "      <td>123400000.0</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>B1-1812-P1</td>\n",
              "      <td>AnhNguyen08</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1-7-2020</td>\n",
              "      <td>2023-07-01 00:17:53</td>\n",
              "      <td>Hoàng Thị Lương</td>\n",
              "      <td>123400001.0</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>cay</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-04</td>\n",
              "      <td>Quảng Ninh</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1-7-2020</td>\n",
              "      <td>2023-07-01 02:16:56</td>\n",
              "      <td>Phạm Thị huong</td>\n",
              "      <td>123400002.0</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>matcon</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2020-07-03</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1-7-2020</td>\n",
              "      <td>2023-07-01 05:21:32</td>\n",
              "      <td>Lan</td>\n",
              "      <td>123400003.0</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>cay</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2020-07-03</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1-7-2020</td>\n",
              "      <td>2023-07-01 05:21:31</td>\n",
              "      <td>Lại Thị Đua</td>\n",
              "      <td>123400004.0</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>condau_sto</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2020-07-03</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-05</td>\n",
              "      <td>Hà Nội</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee05a970-99e4-413c-ab0c-eedb7f88e257')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ee05a970-99e4-413c-ab0c-eedb7f88e257 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ee05a970-99e4-413c-ab0c-eedb7f88e257');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-81f5a7f3-f998-4af1-8c76-cc25b30beb92\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-81f5a7f3-f998-4af1-8c76-cc25b30beb92')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-81f5a7f3-f998-4af1-8c76-cc25b30beb92 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "SaleRaw"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jTD4RUaHcLFg",
        "outputId": "fbfd8c29-9289-4d25-d536-479624de5aec"
      },
      "execution_count": 133,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 9675 entries, 0 to 9674\n",
            "Data columns (total 21 columns):\n",
            " #   Column                             Non-Null Count  Dtype         \n",
            "---  ------                             --------------  -----         \n",
            " 0   Unnamed: 0                         9504 non-null   object        \n",
            " 1   Giờ                                9504 non-null   datetime64[ns]\n",
            " 2   Khách hàng                         9504 non-null   object        \n",
            " 3   SĐT                                9504 non-null   float64       \n",
            " 4   Channel                            9504 non-null   object        \n",
            " 5   Chiến dịch                         9504 non-null   object        \n",
            " 6   Content                            9500 non-null   object        \n",
            " 7   Marketer 2                         6781 non-null   object        \n",
            " 8   Type of Lead                       9498 non-null   object        \n",
            " 9   Sales Admin xác nhận Type of Lead  5448 non-null   object        \n",
            " 10  Sales                              9504 non-null   object        \n",
            " 11  Số lần tương tác                   9496 non-null   float64       \n",
            " 12  Ngày gọi                           204 non-null    datetime64[ns]\n",
            " 13  Trạng thái                         9318 non-null   object        \n",
            " 14  Level                              7984 non-null   object        \n",
            " 15  Ngày hẹn gọi lại                   48 non-null     datetime64[ns]\n",
            " 16  Close Date                         6161 non-null   datetime64[ns]\n",
            " 17  Tỉnh/TP                            3394 non-null   object        \n",
            " 18  Số lượng bộ sách                   7051 non-null   float64       \n",
            " 19  Số tiền giảm giá                   7042 non-null   float64       \n",
            " 20  Tổng tiền                          9675 non-null   int64         \n",
            "dtypes: datetime64[ns](4), float64(4), int64(1), object(12)\n",
            "memory usage: 1.6+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 416
        },
        "id": "a72NmZaPcwzi",
        "outputId": "cd746200-68d6-40fa-f2e0-3b149ceceb42"
      },
      "execution_count": 134,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                 Giờ           SĐT  Số lần tương tác  \\\n",
              "count                           9504  9.504000e+03       9496.000000   \n",
              "mean   2023-08-21 00:04:27.216014080  5.122936e+08          1.701243   \n",
              "min              2023-07-01 00:13:42  1.234000e+08          1.000000   \n",
              "25%    2023-08-03 19:10:29.249999872  1.234024e+08          1.000000   \n",
              "50%              2023-08-27 07:17:49  1.234048e+08          1.000000   \n",
              "75%    2023-09-08 21:21:01.750000128  1.234072e+08          2.000000   \n",
              "max              2023-09-30 23:59:51  8.412341e+10         11.000000   \n",
              "std                              NaN  5.702531e+09          1.519313   \n",
              "\n",
              "                            Ngày gọi     Ngày hẹn gọi lại  \\\n",
              "count                            204                   48   \n",
              "mean   2020-08-05 05:17:38.823529472  2023-08-31 20:00:00   \n",
              "min              2020-07-01 00:00:00  2023-07-05 00:00:00   \n",
              "25%              2020-07-03 00:00:00  2023-08-28 18:00:00   \n",
              "50%              2020-08-02 00:00:00  2023-09-09 00:00:00   \n",
              "75%              2020-09-01 00:00:00  2023-09-16 00:00:00   \n",
              "max              2020-10-02 00:00:00  2023-10-14 00:00:00   \n",
              "std                              NaN                  NaN   \n",
              "\n",
              "                          Close Date  Số lượng bộ sách  Số tiền giảm giá  \\\n",
              "count                           6161       7051.000000      7.042000e+03   \n",
              "mean   2023-08-26 12:50:36.130498304          1.011771      1.373868e+05   \n",
              "min              2023-07-04 00:00:00          1.000000     -7.510000e+05   \n",
              "25%              2023-08-05 00:00:00          1.000000      1.400000e+05   \n",
              "50%              2023-09-05 00:00:00          1.000000      1.400000e+05   \n",
              "75%              2023-09-16 00:00:00          1.000000      1.400000e+05   \n",
              "max              2023-10-04 00:00:00          7.000000      1.470000e+06   \n",
              "std                              NaN          0.128285      4.475734e+04   \n",
              "\n",
              "          Tổng tiền  \n",
              "count  9.675000e+03  \n",
              "mean   3.711636e+05  \n",
              "min    0.000000e+00  \n",
              "25%    0.000000e+00  \n",
              "50%    4.990000e+05  \n",
              "75%    4.990000e+05  \n",
              "max    3.003000e+06  \n",
              "std    2.349435e+05  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d013457d-7a83-4496-b774-42ee991fa525\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Giờ</th>\n",
              "      <th>SĐT</th>\n",
              "      <th>Số lần tương tác</th>\n",
              "      <th>Ngày gọi</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Số tiền giảm giá</th>\n",
              "      <th>Tổng tiền</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>9504</td>\n",
              "      <td>9.504000e+03</td>\n",
              "      <td>9496.000000</td>\n",
              "      <td>204</td>\n",
              "      <td>48</td>\n",
              "      <td>6161</td>\n",
              "      <td>7051.000000</td>\n",
              "      <td>7.042000e+03</td>\n",
              "      <td>9.675000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>2023-08-21 00:04:27.216014080</td>\n",
              "      <td>5.122936e+08</td>\n",
              "      <td>1.701243</td>\n",
              "      <td>2020-08-05 05:17:38.823529472</td>\n",
              "      <td>2023-08-31 20:00:00</td>\n",
              "      <td>2023-08-26 12:50:36.130498304</td>\n",
              "      <td>1.011771</td>\n",
              "      <td>1.373868e+05</td>\n",
              "      <td>3.711636e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>2023-07-01 00:13:42</td>\n",
              "      <td>1.234000e+08</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2020-07-01 00:00:00</td>\n",
              "      <td>2023-07-05 00:00:00</td>\n",
              "      <td>2023-07-04 00:00:00</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-7.510000e+05</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2023-08-03 19:10:29.249999872</td>\n",
              "      <td>1.234024e+08</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2020-07-03 00:00:00</td>\n",
              "      <td>2023-08-28 18:00:00</td>\n",
              "      <td>2023-08-05 00:00:00</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.400000e+05</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>2023-08-27 07:17:49</td>\n",
              "      <td>1.234048e+08</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2020-08-02 00:00:00</td>\n",
              "      <td>2023-09-09 00:00:00</td>\n",
              "      <td>2023-09-05 00:00:00</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.400000e+05</td>\n",
              "      <td>4.990000e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2023-09-08 21:21:01.750000128</td>\n",
              "      <td>1.234072e+08</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2020-09-01 00:00:00</td>\n",
              "      <td>2023-09-16 00:00:00</td>\n",
              "      <td>2023-09-16 00:00:00</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.400000e+05</td>\n",
              "      <td>4.990000e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2023-09-30 23:59:51</td>\n",
              "      <td>8.412341e+10</td>\n",
              "      <td>11.000000</td>\n",
              "      <td>2020-10-02 00:00:00</td>\n",
              "      <td>2023-10-14 00:00:00</td>\n",
              "      <td>2023-10-04 00:00:00</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>1.470000e+06</td>\n",
              "      <td>3.003000e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>NaN</td>\n",
              "      <td>5.702531e+09</td>\n",
              "      <td>1.519313</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.128285</td>\n",
              "      <td>4.475734e+04</td>\n",
              "      <td>2.349435e+05</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d013457d-7a83-4496-b774-42ee991fa525')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d013457d-7a83-4496-b774-42ee991fa525 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d013457d-7a83-4496-b774-42ee991fa525');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-baea8463-b4d5-428b-9be2-141fab2dbc05\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-baea8463-b4d5-428b-9be2-141fab2dbc05')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-baea8463-b4d5-428b-9be2-141fab2dbc05 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"SaleRaw\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Gi\\u1edd\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000009504\",\n        \"max\": \"2023-09-30 23:59:51\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"9504\",\n          \"2023-08-21 00:04:27.216014080\",\n          \"2023-09-08 21:21:01.750000128\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u0110T\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29467382527.283092,\n        \"min\": 9504.0,\n        \"max\": 84123405953.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          512293639.6374158,\n          123407169.25,\n          9504.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u1ea7n t\\u01b0\\u01a1ng t\\u00e1c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3356.3739240119535,\n        \"min\": 1.0,\n        \"max\": 9496.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9496.0,\n          1.7012426284751474,\n          1.519313103052253\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ng\\u00e0y g\\u1ecdi\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000000204\",\n        \"max\": \"2020-10-02 00:00:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"204\",\n          \"2020-08-05 05:17:38.823529472\",\n          \"2020-09-01 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ng\\u00e0y h\\u1eb9n g\\u1ecdi l\\u1ea1i\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000000048\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"48\",\n          \"2023-08-31 20:00:00\",\n          \"2023-09-16 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000006161\",\n        \"max\": \"2023-10-04 00:00:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"6161\",\n          \"2023-08-26 12:50:36.130498304\",\n          \"2023-09-16 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u01b0\\u1ee3ng b\\u1ed9 s\\u00e1ch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2492.292736971283,\n        \"min\": 0.12828546153150322,\n        \"max\": 7051.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.011771379946107,\n          0.12828546153150322,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 ti\\u1ec1n gi\\u1ea3m gi\\u00e1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 607585.2838806544,\n        \"min\": -751000.0,\n        \"max\": 1470000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          7042.0,\n          137386.79537063334,\n          44757.33669277836\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ed5ng ti\\u1ec1n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1003189.9719848274,\n        \"min\": 0.0,\n        \"max\": 3003000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          9675.0,\n          371163.63689922483,\n          234943.4963292977\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 134
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "** Note\n",
        "\n",
        "Nhận xét tổng quan về bộ data như sau:\n",
        "\n",
        "Data có 9674 dòng dữ liệu nhưng số các cột chứa dữ liệu đa số là 9504 --> Reseach\n",
        "\n",
        "* Cột Unamed chứa gía trị Ngày và đang để sai định dạng dữ liệu\n",
        "* Cần research Type of Lead, Channel, Chiến dịch để fill giá trị NULL\n",
        "* Cột số điện thoại của KH đang để sai định dạng dữ liệu (object)\n",
        "* Cân nhắc Drop cột Content chứa dữ liệu không mang nhiều ý nghĩa phân tích --> Drop\n",
        "* Cột số tiền giảm đang chứa giá trị âm\n",
        "* Số lần tương tác, số lượng bộ sách đang sai định dạng dữ liệu (int)\n",
        "* Trạng Thái và Level chứa nhiều giá trị NULL"
      ],
      "metadata": {
        "id": "CW0kBKs-c2Wo"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT NGÀY THÁNG"
      ],
      "metadata": {
        "id": "qgIgjZnahdi2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Locate và show các giá trị NULL/NaN\n",
        "row = SaleRaw[SaleRaw[\"Unnamed: 0\"].isnull()]\n",
        "row"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 470
        },
        "id": "q-34B6b6hglB",
        "outputId": "28c541fd-f1b0-44fe-8eb2-3eb25ec60884"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Unnamed: 0 Giờ Khách hàng  SĐT Channel Chiến dịch Content Marketer 2  \\\n",
              "9504        NaN NaT        NaN  NaN     NaN        NaN     NaN        NaN   \n",
              "9505        NaN NaT        NaN  NaN     NaN        NaN     NaN        NaN   \n",
              "9506        NaN NaT        NaN  NaN     NaN        NaN     NaN        NaN   \n",
              "9507        NaN NaT        NaN  NaN     NaN        NaN     NaN        NaN   \n",
              "9508        NaN NaT        NaN  NaN     NaN        NaN     NaN        NaN   \n",
              "...         ...  ..        ...  ...     ...        ...     ...        ...   \n",
              "9670        NaN NaT        NaN  NaN     NaN        NaN     NaN        NaN   \n",
              "9671        NaN NaT        NaN  NaN     NaN        NaN     NaN        NaN   \n",
              "9672        NaN NaT        NaN  NaN     NaN        NaN     NaN        NaN   \n",
              "9673        NaN NaT        NaN  NaN     NaN        NaN     NaN        NaN   \n",
              "9674        NaN NaT        NaN  NaN     NaN        NaN     NaN        NaN   \n",
              "\n",
              "     Type of Lead Sales Admin xác nhận Type of Lead  ... Số lần tương tác  \\\n",
              "9504          NaN                               NaN  ...              NaN   \n",
              "9505          NaN                               NaN  ...              NaN   \n",
              "9506          NaN                               NaN  ...              NaN   \n",
              "9507          NaN                               NaN  ...              NaN   \n",
              "9508          NaN                               NaN  ...              NaN   \n",
              "...           ...                               ...  ...              ...   \n",
              "9670          NaN                               NaN  ...              NaN   \n",
              "9671          NaN                               NaN  ...              NaN   \n",
              "9672          NaN                               NaN  ...              NaN   \n",
              "9673          NaN                               NaN  ...              NaN   \n",
              "9674          NaN                               NaN  ...              NaN   \n",
              "\n",
              "      Ngày gọi Trạng thái Level Ngày hẹn gọi lại Close Date Tỉnh/TP  \\\n",
              "9504       NaT        NaN   NaN              NaT        NaT     NaN   \n",
              "9505       NaT        NaN   NaN              NaT        NaT     NaN   \n",
              "9506       NaT        NaN   NaN              NaT        NaT     NaN   \n",
              "9507       NaT        NaN   NaN              NaT        NaT     NaN   \n",
              "9508       NaT        NaN   NaN              NaT        NaT     NaN   \n",
              "...        ...        ...   ...              ...        ...     ...   \n",
              "9670       NaT        NaN   NaN              NaT        NaT     NaN   \n",
              "9671       NaT        NaN   NaN              NaT        NaT     NaN   \n",
              "9672       NaT        NaN   NaN              NaT        NaT     NaN   \n",
              "9673       NaT        NaN   NaN              NaT        NaT     NaN   \n",
              "9674       NaT        NaN   NaN              NaT        NaT     NaN   \n",
              "\n",
              "     Số lượng bộ sách  Số tiền giảm giá  Tổng tiền  \n",
              "9504              NaN               NaN          0  \n",
              "9505              NaN               NaN          0  \n",
              "9506              NaN               NaN          0  \n",
              "9507              NaN               NaN          0  \n",
              "9508              NaN               NaN          0  \n",
              "...               ...               ...        ...  \n",
              "9670              NaN               NaN          0  \n",
              "9671              NaN               NaN          0  \n",
              "9672              NaN               NaN          0  \n",
              "9673              NaN               NaN          0  \n",
              "9674              NaN               NaN          0  \n",
              "\n",
              "[171 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-79fc8a31-54f5-482c-a21e-576ef2f280e2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Giờ</th>\n",
              "      <th>Khách hàng</th>\n",
              "      <th>SĐT</th>\n",
              "      <th>Channel</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Content</th>\n",
              "      <th>Marketer 2</th>\n",
              "      <th>Type of Lead</th>\n",
              "      <th>Sales Admin xác nhận Type of Lead</th>\n",
              "      <th>...</th>\n",
              "      <th>Số lần tương tác</th>\n",
              "      <th>Ngày gọi</th>\n",
              "      <th>Trạng thái</th>\n",
              "      <th>Level</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Tỉnh/TP</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Số tiền giảm giá</th>\n",
              "      <th>Tổng tiền</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>9504</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9505</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9506</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9507</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9508</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9670</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9671</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9672</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9673</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9674</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>171 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-79fc8a31-54f5-482c-a21e-576ef2f280e2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-79fc8a31-54f5-482c-a21e-576ef2f280e2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-79fc8a31-54f5-482c-a21e-576ef2f280e2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bf9c6e0d-0ea4-45a9-bf0e-58233f3ba5d0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bf9c6e0d-0ea4-45a9-bf0e-58233f3ba5d0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bf9c6e0d-0ea4-45a9-bf0e-58233f3ba5d0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_658aba63-b152-416a-97e8-bd8e155637a8\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('row')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_658aba63-b152-416a-97e8-bd8e155637a8 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('row');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "row"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "row.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wqAkItpvh_Ft",
        "outputId": "5eac6501-029f-4461-f970-c5aaa006193d"
      },
      "execution_count": 417,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 171 entries, 9504 to 9674\n",
            "Data columns (total 21 columns):\n",
            " #   Column                             Non-Null Count  Dtype         \n",
            "---  ------                             --------------  -----         \n",
            " 0   Unnamed: 0                         0 non-null      object        \n",
            " 1   Giờ                                0 non-null      datetime64[ns]\n",
            " 2   Khách hàng                         0 non-null      object        \n",
            " 3   SĐT                                0 non-null      float64       \n",
            " 4   Channel                            0 non-null      object        \n",
            " 5   Chiến dịch                         0 non-null      object        \n",
            " 6   Content                            0 non-null      object        \n",
            " 7   Marketer 2                         0 non-null      object        \n",
            " 8   Type of Lead                       0 non-null      object        \n",
            " 9   Sales Admin xác nhận Type of Lead  0 non-null      object        \n",
            " 10  Sales                              0 non-null      object        \n",
            " 11  Số lần tương tác                   0 non-null      float64       \n",
            " 12  Ngày gọi                           0 non-null      datetime64[ns]\n",
            " 13  Trạng thái                         0 non-null      object        \n",
            " 14  Level                              0 non-null      object        \n",
            " 15  Ngày hẹn gọi lại                   0 non-null      datetime64[ns]\n",
            " 16  Close Date                         0 non-null      datetime64[ns]\n",
            " 17  Tỉnh/TP                            0 non-null      object        \n",
            " 18  Số lượng bộ sách                   0 non-null      float64       \n",
            " 19  Số tiền giảm giá                   0 non-null      float64       \n",
            " 20  Tổng tiền                          171 non-null    int64         \n",
            "dtypes: datetime64[ns](4), float64(4), int64(1), object(12)\n",
            "memory usage: 29.4+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "** Note\n",
        "\n",
        "* 171 dòng không chứa dữ liệu --> Drop"
      ],
      "metadata": {
        "id": "uxp8ul1SjHDi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop NA values\n",
        "SaleRaw.dropna(subset=['Unnamed: 0'], inplace = True)"
      ],
      "metadata": {
        "id": "Cky7szSKjM52"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Rename cột Unamed\n",
        "SaleRaw.rename(columns = {'Unnamed: 0': 'Ngày_tháng'}, inplace = True)"
      ],
      "metadata": {
        "id": "MAPMmdx7jfNk"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Chuyển sang định dạng Datetime\n",
        "SaleRaw['Ngày_tháng'] = pd.to_datetime(SaleRaw['Ngày_tháng'], format=\"%d-%m-%Y\")"
      ],
      "metadata": {
        "id": "gO_8qEjKkDAG"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mD6bViiwjwHb",
        "outputId": "1f45080a-3241-4e85-f1d0-ab3cfb46d475"
      },
      "execution_count": 457,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 9504 entries, 0 to 9503\n",
            "Data columns (total 21 columns):\n",
            " #   Column                             Non-Null Count  Dtype         \n",
            "---  ------                             --------------  -----         \n",
            " 0   Ngày_tháng                         9504 non-null   datetime64[ns]\n",
            " 1   Giờ                                9504 non-null   datetime64[ns]\n",
            " 2   Khách hàng                         9504 non-null   object        \n",
            " 3   SĐT                                9504 non-null   float64       \n",
            " 4   Channel                            9504 non-null   object        \n",
            " 5   Chiến dịch                         9504 non-null   object        \n",
            " 6   Content                            9500 non-null   object        \n",
            " 7   Marketer 2                         6781 non-null   object        \n",
            " 8   Type of Lead                       9498 non-null   object        \n",
            " 9   Sales Admin xác nhận Type of Lead  5448 non-null   object        \n",
            " 10  Sales                              9504 non-null   object        \n",
            " 11  Số lần tương tác                   9496 non-null   float64       \n",
            " 12  Ngày gọi                           204 non-null    datetime64[ns]\n",
            " 13  Trạng thái                         9318 non-null   object        \n",
            " 14  Level                              7984 non-null   object        \n",
            " 15  Ngày hẹn gọi lại                   48 non-null     datetime64[ns]\n",
            " 16  Close Date                         6161 non-null   datetime64[ns]\n",
            " 17  Tỉnh/TP                            3394 non-null   object        \n",
            " 18  Số lượng bộ sách                   7051 non-null   float64       \n",
            " 19  Số tiền giảm giá                   7042 non-null   float64       \n",
            " 20  Tổng tiền                          9504 non-null   int64         \n",
            "dtypes: datetime64[ns](5), float64(4), int64(1), object(11)\n",
            "memory usage: 1.6+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT SĐT\n",
        "\n",
        "** Note\n",
        "* Sai định dạng dữ liệu, thiếu mất số 0 ở đầu"
      ],
      "metadata": {
        "id": "cnXT1bvrl9QC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Converse DataType\n",
        "SaleRaw['SĐT'] = SaleRaw['SĐT'].astype(str)"
      ],
      "metadata": {
        "id": "dYq4oVpGmnT_"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Chuyển lại định dạng dữ liệu về object\n",
        "SaleRaw['SĐT'] = '0' + SaleRaw['SĐT']"
      ],
      "metadata": {
        "id": "9iiUB7C5l_JP"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Số_điện_thoại'] = SaleRaw['SĐT'].apply(lambda x: str(x.split('.')[0]))"
      ],
      "metadata": {
        "id": "QnMRW3sEmLfv"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw.drop(['SĐT'], axis=1, inplace=True)"
      ],
      "metadata": {
        "id": "Ll71SZwHnRrs"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 763
        },
        "id": "pPpBXt66nLMN",
        "outputId": "733555e6-8fa2-4b0b-af18-4214e1ee3c55"
      },
      "execution_count": 523,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Ngày_tháng                 Giờ        Khách hàng Channel Chiến dịch  \\\n",
              "0 2020-07-01 2023-07-01 00:13:42     Pham thu thuy      FB        CVS   \n",
              "1 2020-07-01 2023-07-01 00:17:53  Hoàng Thị Lương       FB        CVS   \n",
              "2 2020-07-01 2023-07-01 02:16:56    Phạm Thị huong      FB        CVS   \n",
              "3 2020-07-01 2023-07-01 05:21:32               Lan      FB        CVS   \n",
              "4 2020-07-01 2023-07-01 05:21:31       Lại Thị Đua      FB        CVS   \n",
              "\n",
              "      Content   Marketer 2 Type of Lead Sales Admin xác nhận Type of Lead  \\\n",
              "0  B1-1812-P1  AnhNguyen08      Dathang                          DATTHANG   \n",
              "1         cay      NgocNgo      Dathang                          DATTHANG   \n",
              "2      matcon      NgocNgo      Dathang                          DATTHANG   \n",
              "3         cay      NgocNgo      Dathang                          DATTHANG   \n",
              "4  condau_sto  YenNguyen02      Dathang                          DATTHANG   \n",
              "\n",
              "      Sales  ...   Ngày gọi            Trạng thái  \\\n",
              "0  ThuyTran  ... 2020-07-01  Hủy đơn sau khi chốt   \n",
              "1  ThuyTran  ... 2020-07-01              Đặt hàng   \n",
              "2  ThuyTran  ... 2020-07-03  Hủy đơn sau khi chốt   \n",
              "3  ThuyTran  ... 2020-07-03  Hủy đơn sau khi chốt   \n",
              "4  ThuyTran  ... 2020-07-03              Đặt hàng   \n",
              "\n",
              "                                Level Ngày hẹn gọi lại Close Date     Tỉnh/TP  \\\n",
              "0         L7.2 - Hủy đơn sau khi chốt              NaT        NaT         NaN   \n",
              "1  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-04  Quảng Ninh   \n",
              "2         L7.2 - Hủy đơn sau khi chốt              NaT        NaT         NaN   \n",
              "3         L7.2 - Hủy đơn sau khi chốt              NaT        NaT         NaN   \n",
              "4  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-05      Hà Nội   \n",
              "\n",
              "  Số lượng bộ sách  Số tiền giảm giá  Tổng tiền  Số_điện_thoại  \n",
              "0              1.0          140000.0     499000     0123400000  \n",
              "1              1.0          140000.0     499000     0123400001  \n",
              "2              1.0          140000.0     499000     0123400002  \n",
              "3              1.0          140000.0     499000     0123400003  \n",
              "4              1.0          140000.0     499000     0123400004  \n",
              "\n",
              "[5 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-559fd417-0938-4bba-8beb-275d258b55ae\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ngày_tháng</th>\n",
              "      <th>Giờ</th>\n",
              "      <th>Khách hàng</th>\n",
              "      <th>Channel</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Content</th>\n",
              "      <th>Marketer 2</th>\n",
              "      <th>Type of Lead</th>\n",
              "      <th>Sales Admin xác nhận Type of Lead</th>\n",
              "      <th>Sales</th>\n",
              "      <th>...</th>\n",
              "      <th>Ngày gọi</th>\n",
              "      <th>Trạng thái</th>\n",
              "      <th>Level</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Tỉnh/TP</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Số tiền giảm giá</th>\n",
              "      <th>Tổng tiền</th>\n",
              "      <th>Số_điện_thoại</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 00:13:42</td>\n",
              "      <td>Pham thu thuy</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>B1-1812-P1</td>\n",
              "      <td>AnhNguyen08</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>...</td>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 00:17:53</td>\n",
              "      <td>Hoàng Thị Lương</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>cay</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>...</td>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-04</td>\n",
              "      <td>Quảng Ninh</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 02:16:56</td>\n",
              "      <td>Phạm Thị huong</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>matcon</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>...</td>\n",
              "      <td>2020-07-03</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400002</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 05:21:32</td>\n",
              "      <td>Lan</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>cay</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>...</td>\n",
              "      <td>2020-07-03</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400003</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 05:21:31</td>\n",
              "      <td>Lại Thị Đua</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>condau_sto</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>...</td>\n",
              "      <td>2020-07-03</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-05</td>\n",
              "      <td>Hà Nội</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400004</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-559fd417-0938-4bba-8beb-275d258b55ae')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-559fd417-0938-4bba-8beb-275d258b55ae button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-559fd417-0938-4bba-8beb-275d258b55ae');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4663fa71-21c9-47cb-b8e9-50e69c831615\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4663fa71-21c9-47cb-b8e9-50e69c831615')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4663fa71-21c9-47cb-b8e9-50e69c831615 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "SaleRaw"
            }
          },
          "metadata": {},
          "execution_count": 523
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT KHÁCH HÀNG"
      ],
      "metadata": {
        "id": "BpgZ9mo3pIS8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Khách hàng'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DxrNKs00pKdD",
        "outputId": "deeab912-9956-4b5e-9687-cec45eaa366b"
      },
      "execution_count": 524,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Khách hàng\n",
              "Hương                    17\n",
              "Trang                    16\n",
              "Lan                      14\n",
              "Thu                      12\n",
              "Linh                     12\n",
              "                         ..\n",
              "Nguyễn thị Hồng thoa      1\n",
              "Trần thị hảo              1\n",
              "Nguyễn thị hồng nhung     1\n",
              "Huỳnh Ngô Hạnh Ly         1\n",
              "Lô Thị Nhung              1\n",
              "Name: count, Length: 8133, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 524
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Remove special characters from column\n",
        "SaleRaw['Khách hàng'] = SaleRaw['Khách hàng'].str.replace('\\W','', regex=True)"
      ],
      "metadata": {
        "id": "CXUKAfqEqUph"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Locate và show giá trị NULL\n",
        "KH_null_row = SaleRaw[SaleRaw[\"Khách hàng\"].isnull()]\n",
        "KH_null_row"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 415
        },
        "id": "L5pQR-lBlRDV",
        "outputId": "0f37bce4-03e3-4c3b-a385-6d5024ef0e98"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Ngày_tháng                 Giờ Khách hàng Channel Chiến dịch   Content  \\\n",
              "2079 2020-07-16 2023-07-16 08:03:29        NaN      FB        CVS      haoi   \n",
              "8414 2020-07-07 2023-07-07 15:47:48        NaN      FB        CVS  pthai-hd   \n",
              "\n",
              "     Marketer 2 Type of Lead Sales Admin xác nhận Type of Lead     Sales  ...  \\\n",
              "2079  GiangPhan      Dathang                          DATTHANG  ThuyTran  ...   \n",
              "8414  GiangPhan        Tuvan                          DATTHANG  ThuyTran  ...   \n",
              "\n",
              "      Ngày gọi Trạng thái                               Level  \\\n",
              "2079       NaT   Đặt hàng  L8.2 - Khách đã thanh toán toàn bộ   \n",
              "8414       NaT        NaN  L8.2 - Khách đã thanh toán toàn bộ   \n",
              "\n",
              "     Ngày hẹn gọi lại Close Date Tỉnh/TP Số lượng bộ sách  Số tiền giảm giá  \\\n",
              "2079              NaT 2023-07-19  Hà Nội              1.0          140000.0   \n",
              "8414              NaT 2023-07-11  Hà Nội              1.0          140000.0   \n",
              "\n",
              "      Tổng tiền  Số_điện_thoại  \n",
              "2079     499000     0123402079  \n",
              "8414     499000     0123408412  \n",
              "\n",
              "[2 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e01f956b-8438-43d2-9c9b-3634ce1390c2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ngày_tháng</th>\n",
              "      <th>Giờ</th>\n",
              "      <th>Khách hàng</th>\n",
              "      <th>Channel</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Content</th>\n",
              "      <th>Marketer 2</th>\n",
              "      <th>Type of Lead</th>\n",
              "      <th>Sales Admin xác nhận Type of Lead</th>\n",
              "      <th>Sales</th>\n",
              "      <th>...</th>\n",
              "      <th>Ngày gọi</th>\n",
              "      <th>Trạng thái</th>\n",
              "      <th>Level</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Tỉnh/TP</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Số tiền giảm giá</th>\n",
              "      <th>Tổng tiền</th>\n",
              "      <th>Số_điện_thoại</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2079</th>\n",
              "      <td>2020-07-16</td>\n",
              "      <td>2023-07-16 08:03:29</td>\n",
              "      <td>NaN</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>haoi</td>\n",
              "      <td>GiangPhan</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>...</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-19</td>\n",
              "      <td>Hà Nội</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123402079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8414</th>\n",
              "      <td>2020-07-07</td>\n",
              "      <td>2023-07-07 15:47:48</td>\n",
              "      <td>NaN</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>pthai-hd</td>\n",
              "      <td>GiangPhan</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>...</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-11</td>\n",
              "      <td>Hà Nội</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123408412</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e01f956b-8438-43d2-9c9b-3634ce1390c2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e01f956b-8438-43d2-9c9b-3634ce1390c2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e01f956b-8438-43d2-9c9b-3634ce1390c2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-add667fb-882d-4190-8b12-2ff1124bc1d2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-add667fb-882d-4190-8b12-2ff1124bc1d2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-add667fb-882d-4190-8b12-2ff1124bc1d2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_0f919d7c-816d-4fa3-83c4-97241a04158e\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('KH_null_row')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_0f919d7c-816d-4fa3-83c4-97241a04158e button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('KH_null_row');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "KH_null_row"
            }
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Fill NaN with Unnamed\n",
        "SaleRaw['Khách hàng'].fillna('Unnamed', inplace = True)"
      ],
      "metadata": {
        "id": "IiMY_nJRmS7J"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT CHIẾN DỊCH"
      ],
      "metadata": {
        "id": "GL1q8pE5uxjg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Chiến dịch'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Dl5JkcVhrr6n",
        "outputId": "af3ef630-acac-4dd7-b577-f379306b783b"
      },
      "execution_count": 528,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Chiến dịch\n",
              "CVS              8609\n",
              "Search            235\n",
              "Discovery         202\n",
              "PerMax            110\n",
              "Guu-PerMax        102\n",
              "Guu-Discovery      85\n",
              "Mess               60\n",
              "Brand              38\n",
              "Saleshunt          21\n",
              "Lazada             19\n",
              "Tiki               11\n",
              "Guu-Search          9\n",
              "Upsell              3\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 528
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Gộp các giá trị có ý nghĩa tương đương nhau\n",
        "SaleRaw['Chiến dịch'] = SaleRaw['Chiến dịch'].replace({'Guu-PerMax':'PerMax', 'Guu-Discovery':'Discovery', 'Guu-Search':'Search'})\n",
        "SaleRaw['Chiến dịch'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aJLfvU9Gu0md",
        "outputId": "c228de18-817a-4917-ea47-880eabc150b6"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Chiến dịch\n",
              "CVS          8609\n",
              "Discovery     287\n",
              "Search        244\n",
              "PerMax        212\n",
              "Mess           60\n",
              "Brand          38\n",
              "Saleshunt      21\n",
              "Lazada         19\n",
              "Tiki           11\n",
              "Upsell          3\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop cột Content\n",
        "SaleRaw.drop(['Content'], axis=1, inplace=True)"
      ],
      "metadata": {
        "id": "3LI-xjJGrd6b"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT TYPE OF LEAD\n",
        "\n",
        "** Note\n",
        "\n",
        "* Chứa giá trị NULL --> Cần dựa vào thông tin cột Trạng thái, Level, Số tiền để fill\n",
        "* Chứa giá trị bất hợp lý \"Con đang học lớp 7\""
      ],
      "metadata": {
        "id": "gXTca5lzujCN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Type of Lead'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rbRBaMaHuhaS",
        "outputId": "cdba24e1-7d29-4186-82e4-aa6c02a2fb58"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Type of Lead\n",
              "Dathang               6233\n",
              "Tuvan                 3264\n",
              "Con đang học lớp 7       1\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Locate và show giá trị NULL\n",
        "null_row = SaleRaw[SaleRaw[\"Type of Lead\"].isnull()]\n",
        "null_row"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 969
        },
        "id": "sswcYnEywLSh",
        "outputId": "f1e72c13-0dd6-4bad-8d68-f6bccbc5c35e"
      },
      "execution_count": 531,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Ngày_tháng                 Giờ      Khách hàng    Channel Chiến dịch  \\\n",
              "124  2020-08-01 2023-08-01 15:55:45       MinhTrang         FB       Mess   \n",
              "695  2020-07-11 2023-07-11 15:23:21        ChịTuyến         FB        CVS   \n",
              "1393 2020-08-13 2023-08-13 09:12:36  NguyễnThuGiang  Saleshunt  Saleshunt   \n",
              "3171 2020-09-19 2023-09-19 15:44:19         chịHiền  Saleshunt  Saleshunt   \n",
              "5437 2020-07-27 2023-07-27 09:33:42        ThanhTâm         FB       Mess   \n",
              "7140 2020-07-31 2023-07-31 15:26:54      PhanMỹLinh     Upsell     Upsell   \n",
              "\n",
              "     Marketer 2 Type of Lead Sales Admin xác nhận Type of Lead          Sales  \\\n",
              "124       DucVu          NaN                               NaN          AnhHa   \n",
              "695       DucVu          NaN                               NaN         DatLam   \n",
              "1393  LinhHoang          NaN                               NaN  HuyenNguyen04   \n",
              "3171        NaN          NaN                               NaN  HuyenNguyen04   \n",
              "5437      DucVu          NaN                               NaN  HuyenNguyen04   \n",
              "7140  LinhHoang          NaN                               NaN        HoaTran   \n",
              "\n",
              "      Số lần tương tác   Ngày gọi Trạng thái  \\\n",
              "124                1.0 2020-08-03   Đặt hàng   \n",
              "695                1.0        NaT   Đặt hàng   \n",
              "1393               1.0        NaT   Đặt hàng   \n",
              "3171               1.0        NaT   Đặt hàng   \n",
              "5437               1.0        NaT   Đặt hàng   \n",
              "7140               1.0        NaT   Đặt hàng   \n",
              "\n",
              "                                   Level Ngày hẹn gọi lại Close Date  \\\n",
              "124   L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-08-04   \n",
              "695   L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-17   \n",
              "1393  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-08-13   \n",
              "3171  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-09-21   \n",
              "5437  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-30   \n",
              "7140  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-28   \n",
              "\n",
              "        Tỉnh/TP  Số lượng bộ sách  Số tiền giảm giá  Tổng tiền Số_điện_thoại  \n",
              "124      Hà Nội               1.0         -160000.0     799000    0123400124  \n",
              "695    Bắc Ninh               1.0          140000.0     499000    0123400695  \n",
              "1393     Hà Nội               1.0          140000.0     499000    0123401393  \n",
              "3171  Hải Dương               1.0          140000.0     499000    0123403171  \n",
              "5437    Đà Nẵng               1.0          140000.0     499000    0123405437  \n",
              "7140        NaN               1.0          359000.0     280000    0123407138  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bd2b2730-9a8b-457a-a048-b352374c2ab9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ngày_tháng</th>\n",
              "      <th>Giờ</th>\n",
              "      <th>Khách hàng</th>\n",
              "      <th>Channel</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Marketer 2</th>\n",
              "      <th>Type of Lead</th>\n",
              "      <th>Sales Admin xác nhận Type of Lead</th>\n",
              "      <th>Sales</th>\n",
              "      <th>Số lần tương tác</th>\n",
              "      <th>Ngày gọi</th>\n",
              "      <th>Trạng thái</th>\n",
              "      <th>Level</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Tỉnh/TP</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Số tiền giảm giá</th>\n",
              "      <th>Tổng tiền</th>\n",
              "      <th>Số_điện_thoại</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>124</th>\n",
              "      <td>2020-08-01</td>\n",
              "      <td>2023-08-01 15:55:45</td>\n",
              "      <td>MinhTrang</td>\n",
              "      <td>FB</td>\n",
              "      <td>Mess</td>\n",
              "      <td>DucVu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AnhHa</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2020-08-03</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-08-04</td>\n",
              "      <td>Hà Nội</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-160000.0</td>\n",
              "      <td>799000</td>\n",
              "      <td>0123400124</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>695</th>\n",
              "      <td>2020-07-11</td>\n",
              "      <td>2023-07-11 15:23:21</td>\n",
              "      <td>ChịTuyến</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>DucVu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>DatLam</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-17</td>\n",
              "      <td>Bắc Ninh</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400695</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1393</th>\n",
              "      <td>2020-08-13</td>\n",
              "      <td>2023-08-13 09:12:36</td>\n",
              "      <td>NguyễnThuGiang</td>\n",
              "      <td>Saleshunt</td>\n",
              "      <td>Saleshunt</td>\n",
              "      <td>LinhHoang</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>HuyenNguyen04</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-08-13</td>\n",
              "      <td>Hà Nội</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123401393</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3171</th>\n",
              "      <td>2020-09-19</td>\n",
              "      <td>2023-09-19 15:44:19</td>\n",
              "      <td>chịHiền</td>\n",
              "      <td>Saleshunt</td>\n",
              "      <td>Saleshunt</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>HuyenNguyen04</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-09-21</td>\n",
              "      <td>Hải Dương</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123403171</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5437</th>\n",
              "      <td>2020-07-27</td>\n",
              "      <td>2023-07-27 09:33:42</td>\n",
              "      <td>ThanhTâm</td>\n",
              "      <td>FB</td>\n",
              "      <td>Mess</td>\n",
              "      <td>DucVu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>HuyenNguyen04</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-30</td>\n",
              "      <td>Đà Nẵng</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123405437</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7140</th>\n",
              "      <td>2020-07-31</td>\n",
              "      <td>2023-07-31 15:26:54</td>\n",
              "      <td>PhanMỹLinh</td>\n",
              "      <td>Upsell</td>\n",
              "      <td>Upsell</td>\n",
              "      <td>LinhHoang</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>HoaTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-28</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>359000.0</td>\n",
              "      <td>280000</td>\n",
              "      <td>0123407138</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bd2b2730-9a8b-457a-a048-b352374c2ab9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bd2b2730-9a8b-457a-a048-b352374c2ab9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bd2b2730-9a8b-457a-a048-b352374c2ab9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9de4e603-1069-4f2c-bc96-c298e7e0b2dd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9de4e603-1069-4f2c-bc96-c298e7e0b2dd')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9de4e603-1069-4f2c-bc96-c298e7e0b2dd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_ca2e84e8-3a42-488b-b26f-90ac189c316b\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('null_row')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_ca2e84e8-3a42-488b-b26f-90ac189c316b button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('null_row');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "null_row",
              "repr_error": "0"
            }
          },
          "metadata": {},
          "execution_count": 531
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "* Các dòng NULL đều đã thanh toán toàn bộ --> Fill Dathang"
      ],
      "metadata": {
        "id": "-B54uF1Txjy_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Type of Lead'].fillna('Dathang', inplace = True)"
      ],
      "metadata": {
        "id": "P13HICW3xrAg"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "row = SaleRaw[SaleRaw[\"Type of Lead\"] == 'Con đang học lớp 7']\n",
        "print(row) # Khách hàng đã thanh toán toàn bộ --> Dathang"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w9boiXxAygbn",
        "outputId": "c01e03dc-a025-49ac-8c7c-056ae0397dcd"
      },
      "execution_count": 533,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Ngày_tháng                 Giờ Khách hàng Channel Chiến dịch Marketer 2  \\\n",
            "6032 2020-08-29 2023-08-29 01:18:15  Vũthịhuấn      FB        CVS      DucVu   \n",
            "\n",
            "            Type of Lead Sales Admin xác nhận Type of Lead     Sales  \\\n",
            "6032  Con đang học lớp 7                          DATTHANG  ThuyTran   \n",
            "\n",
            "      Số lần tương tác Ngày gọi Trạng thái  \\\n",
            "6032               1.0      NaT   Đặt hàng   \n",
            "\n",
            "                                   Level Ngày hẹn gọi lại Close Date Tỉnh/TP  \\\n",
            "6032  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-09-27     NaN   \n",
            "\n",
            "      Số lượng bộ sách  Số tiền giảm giá  Tổng tiền Số_điện_thoại  \n",
            "6032               1.0          140000.0     499000    0123406030  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Type of Lead'] = SaleRaw['Type of Lead'].replace({'Con đang học lớp 7':'Dathang'})\n",
        "SaleRaw['Type of Lead'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DVmfRYS5y7cX",
        "outputId": "738c7a47-754e-4c27-a2ed-085c521507cf"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Type of Lead\n",
              "Dathang    6240\n",
              "Tuvan      3264\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT MARKETER 2"
      ],
      "metadata": {
        "id": "lVKUw_Dp1EN8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Marketer 2'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "khMfV35f1HLQ",
        "outputId": "c9477a53-cfa6-43ec-cba6-7ffc6924936f"
      },
      "execution_count": 535,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Marketer 2\n",
              "DucVu            1851\n",
              "YenNguyen02      1748\n",
              "GiangPhan        1013\n",
              "NgocNgo           836\n",
              "TienTran          517\n",
              "TungTran          512\n",
              "AnhNguyen08       195\n",
              "ThuHoang           48\n",
              "NhiLanh            21\n",
              "AnhTrinh           11\n",
              "LinhHoang          10\n",
              "HuyDo               7\n",
              "LyLuu               3\n",
              "TrangDang           3\n",
              "TuanTran            2\n",
              "ht.content.05       1\n",
              "AnhNgo01            1\n",
              "HuyenNguyen05       1\n",
              "                    1\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 535
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "row = SaleRaw[SaleRaw[\"Marketer 2\"] == 'ht.content.05']\n",
        "print(row)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cS962od91aj7",
        "outputId": "0a5ee717-d467-44a5-a663-2c19fe2dd51d"
      },
      "execution_count": 469,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Ngày_tháng                 Giờ Khách hàng Channel Chiến dịch  \\\n",
            "2628 2020-09-17 2023-09-17 11:36:19   HangHằng      FB        CVS   \n",
            "\n",
            "         Marketer 2 Type of Lead Sales Admin xác nhận Type of Lead     Sales  \\\n",
            "2628  ht.content.05      Dathang                          DATTHANG  ThuyTran   \n",
            "\n",
            "      Số lần tương tác Ngày gọi Trạng thái  \\\n",
            "2628               1.0      NaT   Đặt hàng   \n",
            "\n",
            "                                   Level Ngày hẹn gọi lại Close Date Tỉnh/TP  \\\n",
            "2628  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-09-20     NaN   \n",
            "\n",
            "      Số lượng bộ sách  Số tiền giảm giá  Tổng tiền Số_điện_thoại  \n",
            "2628               1.0          140000.0     499000    0123402628  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = SaleRaw[\"Marketer 2\"].mode()[0]\n",
        "\n",
        "SaleRaw[\"Marketer 2\"]=SaleRaw[\"Marketer 2\"].replace({'ht.content.05':x})"
      ],
      "metadata": {
        "id": "osN3vUB12GKJ"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "null_row = SaleRaw[SaleRaw[\"Marketer 2\"].isnull()]\n",
        "null_row"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "dI8J_zf72mqE",
        "outputId": "4c2b5544-4a8f-4dbe-c5ef-2a85285162b0"
      },
      "execution_count": 537,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Ngày_tháng                 Giờ          Khách hàng Channel Chiến dịch  \\\n",
              "488  2020-09-10 2023-09-10 00:40:53    Nguyenthanhhuong      FB        CVS   \n",
              "489  2020-09-10 2023-09-10 01:03:24          NguyễnLily      FB        CVS   \n",
              "490  2020-09-10 2023-09-10 01:27:54  NguyenThiHươngDiễm      FB        CVS   \n",
              "491  2020-09-10 2023-09-10 02:17:04    ThuylienThuylien      FB        CVS   \n",
              "492  2020-09-10 2023-09-10 04:21:40    NguyễnĐặngThanhÝ      FB        CVS   \n",
              "...         ...                 ...                 ...     ...        ...   \n",
              "9499 2020-09-09 2023-09-09 09:28:02        Lêthịthuhiền  Google     PerMax   \n",
              "9500 2020-09-09 2023-09-09 15:30:20       NguyễnTiếtHài  Google     PerMax   \n",
              "9501 2020-09-09 2023-09-09 14:49:21         vươngthịhợp  Google     Search   \n",
              "9502 2020-09-09 2023-09-09 18:44:41          Caothịhạnh  Google     Search   \n",
              "9503 2020-09-09 2023-09-09 20:28:09          LôThịNhung  Google     Search   \n",
              "\n",
              "     Marketer 2 Type of Lead Sales Admin xác nhận Type of Lead     Sales  \\\n",
              "488         NaN      Dathang                          DATTHANG  ThuyTran   \n",
              "489         NaN      Dathang                          DATTHANG  ThuyTran   \n",
              "490         NaN      Dathang                          DATTHANG  ThuyTran   \n",
              "491         NaN      Dathang                          DATTHANG  ThuyTran   \n",
              "492         NaN      Dathang                          DATTHANG  ThuyTran   \n",
              "...         ...          ...                               ...       ...   \n",
              "9499        NaN      Dathang                          DATTHANG  ThuyTran   \n",
              "9500        NaN      Dathang                          DATTHANG  ThuyTran   \n",
              "9501        NaN      Dathang                          DATTHANG  ThuyTran   \n",
              "9502        NaN      Dathang                          DATTHANG  ThuyTran   \n",
              "9503        NaN        Tuvan                               NaN   NamPham   \n",
              "\n",
              "      Số lần tương tác Ngày gọi            Trạng thái  \\\n",
              "488                1.0      NaT              Đặt hàng   \n",
              "489                1.0      NaT              Đặt hàng   \n",
              "490                1.0      NaT  Hủy đơn sau khi chốt   \n",
              "491                1.0      NaT              Đặt hàng   \n",
              "492                1.0      NaT              Đặt hàng   \n",
              "...                ...      ...                   ...   \n",
              "9499               1.0      NaT              Đặt hàng   \n",
              "9500               1.0      NaT              Đặt hàng   \n",
              "9501               1.0      NaT              Đặt hàng   \n",
              "9502               1.0      NaT              Đặt hàng   \n",
              "9503               1.0      NaT                Sai số   \n",
              "\n",
              "                                   Level Ngày hẹn gọi lại Close Date Tỉnh/TP  \\\n",
              "488                       L5.2 - Từ chối              NaT        NaT     NaN   \n",
              "489                       L5.2 - Từ chối              NaT        NaT     NaN   \n",
              "490          L7.2 - Hủy đơn sau khi chốt              NaT        NaT     NaN   \n",
              "491              L7.1 - Chờ chuyển khoản              NaT        NaT     NaN   \n",
              "492   L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-10-02     NaN   \n",
              "...                                  ...              ...        ...     ...   \n",
              "9499  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-09-13     NaN   \n",
              "9500                      L5.2 - Từ chối              NaT        NaT     NaN   \n",
              "9501                      L5.2 - Từ chối              NaT        NaT     NaN   \n",
              "9502  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-10-03     NaN   \n",
              "9503                                 NaN              NaT        NaT     NaN   \n",
              "\n",
              "      Số lượng bộ sách  Số tiền giảm giá  Tổng tiền Số_điện_thoại  \n",
              "488                1.0          140000.0     499000    0123400488  \n",
              "489                1.0          140000.0     499000    0123400489  \n",
              "490                1.0          140000.0     499000    0123400490  \n",
              "491                1.0          140000.0     499000    0123400491  \n",
              "492                1.0          140000.0     499000    0123400492  \n",
              "...                ...               ...        ...           ...  \n",
              "9499               1.0          140000.0     499000    0123409497  \n",
              "9500               1.0          140000.0     499000    0123409498  \n",
              "9501               1.0          140000.0     499000    0123409499  \n",
              "9502               1.0          140000.0     499000    0123409500  \n",
              "9503               NaN               NaN          0    0123409501  \n",
              "\n",
              "[2723 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6e1b84f8-1372-4b3d-b988-f9b62d4fc1be\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ngày_tháng</th>\n",
              "      <th>Giờ</th>\n",
              "      <th>Khách hàng</th>\n",
              "      <th>Channel</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Marketer 2</th>\n",
              "      <th>Type of Lead</th>\n",
              "      <th>Sales Admin xác nhận Type of Lead</th>\n",
              "      <th>Sales</th>\n",
              "      <th>Số lần tương tác</th>\n",
              "      <th>Ngày gọi</th>\n",
              "      <th>Trạng thái</th>\n",
              "      <th>Level</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Tỉnh/TP</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Số tiền giảm giá</th>\n",
              "      <th>Tổng tiền</th>\n",
              "      <th>Số_điện_thoại</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>488</th>\n",
              "      <td>2020-09-10</td>\n",
              "      <td>2023-09-10 00:40:53</td>\n",
              "      <td>Nguyenthanhhuong</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L5.2 - Từ chối</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400488</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>489</th>\n",
              "      <td>2020-09-10</td>\n",
              "      <td>2023-09-10 01:03:24</td>\n",
              "      <td>NguyễnLily</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L5.2 - Từ chối</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400489</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>490</th>\n",
              "      <td>2020-09-10</td>\n",
              "      <td>2023-09-10 01:27:54</td>\n",
              "      <td>NguyenThiHươngDiễm</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400490</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>491</th>\n",
              "      <td>2020-09-10</td>\n",
              "      <td>2023-09-10 02:17:04</td>\n",
              "      <td>ThuylienThuylien</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L7.1 - Chờ chuyển khoản</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400491</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492</th>\n",
              "      <td>2020-09-10</td>\n",
              "      <td>2023-09-10 04:21:40</td>\n",
              "      <td>NguyễnĐặngThanhÝ</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-10-02</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400492</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9499</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 09:28:02</td>\n",
              "      <td>Lêthịthuhiền</td>\n",
              "      <td>Google</td>\n",
              "      <td>PerMax</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-09-13</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123409497</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9500</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 15:30:20</td>\n",
              "      <td>NguyễnTiếtHài</td>\n",
              "      <td>Google</td>\n",
              "      <td>PerMax</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L5.2 - Từ chối</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123409498</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9501</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 14:49:21</td>\n",
              "      <td>vươngthịhợp</td>\n",
              "      <td>Google</td>\n",
              "      <td>Search</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L5.2 - Từ chối</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123409499</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9502</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 18:44:41</td>\n",
              "      <td>Caothịhạnh</td>\n",
              "      <td>Google</td>\n",
              "      <td>Search</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>DATTHANG</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-10-03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123409500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9503</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 20:28:09</td>\n",
              "      <td>LôThịNhung</td>\n",
              "      <td>Google</td>\n",
              "      <td>Search</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NamPham</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Sai số</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409501</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2723 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e1b84f8-1372-4b3d-b988-f9b62d4fc1be')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6e1b84f8-1372-4b3d-b988-f9b62d4fc1be button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6e1b84f8-1372-4b3d-b988-f9b62d4fc1be');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-eb8c220b-63ec-4c5c-bab2-01c633a24680\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eb8c220b-63ec-4c5c-bab2-01c633a24680')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-eb8c220b-63ec-4c5c-bab2-01c633a24680 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_f4ce8df9-f871-4298-a1ff-e12b41a67813\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('null_row')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_f4ce8df9-f871-4298-a1ff-e12b41a67813 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('null_row');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "null_row",
              "repr_error": "0"
            }
          },
          "metadata": {},
          "execution_count": 537
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "** Note\n",
        "\n",
        "* Marketer không tìm ra quy để fill --> Random fill bằng chính dữ liệu not null của Marketer"
      ],
      "metadata": {
        "id": "Spp6AK1qBdHJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Marketer 2_copy'] = SaleRaw['Marketer 2'].notnull().copy()"
      ],
      "metadata": {
        "id": "ZcXznR4Y55Pk"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Marketer 2'] = SaleRaw['Marketer 2'].fillna(SaleRaw['Marketer 2_copy'])"
      ],
      "metadata": {
        "id": "jAMHaJoi4gFV"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Marketer 2'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iQWDOzLa4qj8",
        "outputId": "3dd6196c-f1fc-40b4-8fb4-1a3a9e7f99a2"
      },
      "execution_count": 540,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Marketer 2\n",
              "False            2723\n",
              "DucVu            1852\n",
              "YenNguyen02      1748\n",
              "GiangPhan        1013\n",
              "NgocNgo           836\n",
              "TienTran          517\n",
              "TungTran          512\n",
              "AnhNguyen08       195\n",
              "ThuHoang           48\n",
              "NhiLanh            21\n",
              "AnhTrinh           11\n",
              "LinhHoang          10\n",
              "HuyDo               7\n",
              "LyLuu               3\n",
              "TrangDang           3\n",
              "TuanTran            2\n",
              "AnhNgo01            1\n",
              "HuyenNguyen05       1\n",
              "                    1\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 540
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop cột thừa sau khi đã xử lý\n",
        "SaleRaw.drop(['Marketer 2_copy'], axis=1, inplace=True)"
      ],
      "metadata": {
        "id": "Vgy-cdEk7cLW"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop column 'Ngày gọi' và 'Sales Admin xác nhận Type of Lead' không mang nhiều ý nghĩa và chứa thông tin cột khác đã bao hàm\n",
        "SaleRaw.drop(['Ngày gọi'], axis=1, inplace=True)"
      ],
      "metadata": {
        "id": "HqFbrJWy7EGP"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw.drop(['Sales Admin xác nhận Type of Lead'], axis=1, inplace=True)\n",
        "SaleRaw.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 425
        },
        "id": "Qwp6bcIY8t24",
        "outputId": "03ffe6ae-ee62-4a28-d006-68d7d032f1ad"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Ngày_tháng                 Giờ     Khách hàng Channel Chiến dịch  \\\n",
              "0 2020-07-01 2023-07-01 00:13:42    Phamthuthuy      FB        CVS   \n",
              "1 2020-07-01 2023-07-01 00:17:53  HoàngThịLương      FB        CVS   \n",
              "2 2020-07-01 2023-07-01 02:16:56   PhạmThịhuong      FB        CVS   \n",
              "3 2020-07-01 2023-07-01 05:21:32            Lan      FB        CVS   \n",
              "4 2020-07-01 2023-07-01 05:21:31      LạiThịĐua      FB        CVS   \n",
              "\n",
              "    Marketer 2 Type of Lead     Sales  Số lần tương tác            Trạng thái  \\\n",
              "0  AnhNguyen08      Dathang  ThuyTran               1.0  Hủy đơn sau khi chốt   \n",
              "1      NgocNgo      Dathang  ThuyTran               1.0              Đặt hàng   \n",
              "2      NgocNgo      Dathang  ThuyTran               1.0  Hủy đơn sau khi chốt   \n",
              "3      NgocNgo      Dathang  ThuyTran               1.0  Hủy đơn sau khi chốt   \n",
              "4  YenNguyen02      Dathang  ThuyTran               1.0              Đặt hàng   \n",
              "\n",
              "                                Level Ngày hẹn gọi lại Close Date     Tỉnh/TP  \\\n",
              "0         L7.2 - Hủy đơn sau khi chốt              NaT        NaT         NaN   \n",
              "1  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-04  Quảng Ninh   \n",
              "2         L7.2 - Hủy đơn sau khi chốt              NaT        NaT         NaN   \n",
              "3         L7.2 - Hủy đơn sau khi chốt              NaT        NaT         NaN   \n",
              "4  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-05      Hà Nội   \n",
              "\n",
              "   Số lượng bộ sách  Số tiền giảm giá  Tổng tiền Số_điện_thoại  \n",
              "0               1.0          140000.0     499000    0123400000  \n",
              "1               1.0          140000.0     499000    0123400001  \n",
              "2               1.0          140000.0     499000    0123400002  \n",
              "3               1.0          140000.0     499000    0123400003  \n",
              "4               1.0          140000.0     499000    0123400004  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-329e959a-a42b-4131-99c6-8f1756daf908\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ngày_tháng</th>\n",
              "      <th>Giờ</th>\n",
              "      <th>Khách hàng</th>\n",
              "      <th>Channel</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Marketer 2</th>\n",
              "      <th>Type of Lead</th>\n",
              "      <th>Sales</th>\n",
              "      <th>Số lần tương tác</th>\n",
              "      <th>Trạng thái</th>\n",
              "      <th>Level</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Tỉnh/TP</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Số tiền giảm giá</th>\n",
              "      <th>Tổng tiền</th>\n",
              "      <th>Số_điện_thoại</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 00:13:42</td>\n",
              "      <td>Phamthuthuy</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>AnhNguyen08</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 00:17:53</td>\n",
              "      <td>HoàngThịLương</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-04</td>\n",
              "      <td>Quảng Ninh</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 02:16:56</td>\n",
              "      <td>PhạmThịhuong</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400002</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 05:21:32</td>\n",
              "      <td>Lan</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400003</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 05:21:31</td>\n",
              "      <td>LạiThịĐua</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-05</td>\n",
              "      <td>Hà Nội</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400004</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-329e959a-a42b-4131-99c6-8f1756daf908')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-329e959a-a42b-4131-99c6-8f1756daf908 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-329e959a-a42b-4131-99c6-8f1756daf908');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8e991f35-b307-4cf3-90db-7fc3a1f9122a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8e991f35-b307-4cf3-90db-7fc3a1f9122a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8e991f35-b307-4cf3-90db-7fc3a1f9122a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "SaleRaw",
              "summary": "{\n  \"name\": \"SaleRaw\",\n  \"rows\": 9504,\n  \"fields\": [\n    {\n      \"column\": \"Ng\\u00e0y_th\\u00e1ng\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-07-01 00:00:00\",\n        \"max\": \"2020-09-30 00:00:00\",\n        \"num_unique_values\": 92,\n        \"samples\": [\n          \"2020-08-21 00:00:00\",\n          \"2020-08-16 00:00:00\",\n          \"2020-08-26 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gi\\u1edd\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-01 00:13:42\",\n        \"max\": \"2023-09-30 23:59:51\",\n        \"num_unique_values\": 9380,\n        \"samples\": [\n          \"2023-09-16 12:42:32\",\n          \"2023-09-24 09:04:43\",\n          \"2023-09-24 07:51:21\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Kh\\u00e1ch h\\u00e0ng\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7907,\n        \"samples\": [\n          \"Nh\\u01b0Nguy\\u1ec5n\",\n          \"Tr\\u1ea7nTh\\u00f9yTrang\",\n          \"Th\\u1ea1chVi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Channel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"FB\",\n          \"Google\",\n          \"Tiktok\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chi\\u1ebfn d\\u1ecbch\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Lazada\",\n          \"Discovery\",\n          \"Search\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marketer 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"AnhNguyen08\",\n          \"AnhNgo01\",\n          \"ThuHoang\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type of Lead\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Tuvan\",\n          \"Dathang\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"ThuyTran\",\n          \"HuongDinh\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u1ea7n t\\u01b0\\u01a1ng t\\u00e1c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.519313103052253,\n        \"min\": 1.0,\n        \"max\": 11.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          4.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tr\\u1ea1ng th\\u00e1i\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Thu\\u00ea bao\",\n          \"\\u0110\\u1eb7t h\\u00e0ng\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"L7.2 - H\\u1ee7y \\u0111\\u01a1n sau khi ch\\u1ed1t\",\n          \"L4.2 - B\\u0103n kho\\u0103n ch\\u1ea5t l\\u01b0\\u1ee3ng SP\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ng\\u00e0y h\\u1eb9n g\\u1ecdi l\\u1ea1i\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-05 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          \"2023-09-28 00:00:00\",\n          \"2023-08-28 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-04 00:00:00\",\n        \"max\": \"2023-10-04 00:00:00\",\n        \"num_unique_values\": 93,\n        \"samples\": [\n          \"2023-08-19 00:00:00\",\n          \"2023-09-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ec9nh/TP\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 71,\n        \"samples\": [\n          \"B\\u00ecnh \\u0110\\u1ecbnh\",\n          \"Qu\\u1ea3ng Ninh\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u01b0\\u1ee3ng b\\u1ed9 s\\u00e1ch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.12828546153150322,\n        \"min\": 1.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 ti\\u1ec1n gi\\u1ea3m gi\\u00e1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44757.33669277836,\n        \"min\": -751000.0,\n        \"max\": 1470000.0,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          -214844.0,\n          190000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ed5ng ti\\u1ec1n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 231663,\n        \"min\": 0,\n        \"max\": 3003000,\n        \"num_unique_values\": 42,\n        \"samples\": [\n          1278000,\n          531749\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1_\\u0111i\\u1ec7n_tho\\u1ea1i\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9504,\n        \"samples\": [\n          \"0123402441\",\n          \"0123407479\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT SỐ LƯỢNG BỘ SÁCH"
      ],
      "metadata": {
        "id": "mU99ENKE8-e-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Số lượng bộ sách'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2-YBetxa9Oep",
        "outputId": "9ea3ab00-1848-44ba-9adb-3865da01ee99"
      },
      "execution_count": 441,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Số lượng bộ sách\n",
              "1.0    6975\n",
              "2.0      73\n",
              "3.0       2\n",
              "7.0       1\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 441
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "null_row = SaleRaw[SaleRaw[\"Số lượng bộ sách\"].isnull()]\n",
        "null_row"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 827
        },
        "id": "ifPWCy9Y9gDd",
        "outputId": "fecf4eac-71d9-41c6-b85c-5b51f59f0aa7"
      },
      "execution_count": 544,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Ngày_tháng                 Giờ       Khách hàng Channel Chiến dịch  \\\n",
              "15   2020-07-01 2023-07-01 08:23:20          Hoàngvy      FB        CVS   \n",
              "18   2020-07-01 2023-07-01 08:28:15          ThanhHà      FB        CVS   \n",
              "19   2020-07-01 2023-07-01 08:29:58         HaNguyen      FB        CVS   \n",
              "20   2020-07-01 2023-07-01 08:31:50           MyHanh      FB        CVS   \n",
              "26   2020-07-01 2023-07-01 09:47:47            Hường      FB        CVS   \n",
              "...         ...                 ...              ...     ...        ...   \n",
              "9478 2020-09-09 2023-09-09 21:28:55         LyNguyen      FB        CVS   \n",
              "9481 2020-09-09 2023-09-09 21:31:52       HuuAnhDinh      FB        CVS   \n",
              "9482 2020-09-09 2023-09-09 21:36:03  ĐiệnLạnhNamHồng      FB        CVS   \n",
              "9498 2020-09-09 2023-09-09 11:23:30        TrangThan      FB       Mess   \n",
              "9503 2020-09-09 2023-09-09 20:28:09       LôThịNhung  Google     Search   \n",
              "\n",
              "       Marketer 2 Type of Lead          Sales  Số lần tương tác  \\\n",
              "15        NgocNgo        Tuvan      HuongDinh               6.0   \n",
              "18    AnhNguyen08        Tuvan  HuyenNguyen04               2.0   \n",
              "19    AnhNguyen08        Tuvan      HuongDinh               7.0   \n",
              "20    AnhNguyen08        Tuvan         NgocDo               2.0   \n",
              "26    YenNguyen02        Tuvan  HuyenNguyen04               2.0   \n",
              "...           ...          ...            ...               ...   \n",
              "9478        False        Tuvan      SangTrinh               4.0   \n",
              "9481        False        Tuvan        NamPham               2.0   \n",
              "9482        False        Tuvan      SangTrinh               4.0   \n",
              "9498        False        Tuvan          AnhHa               3.0   \n",
              "9503        False        Tuvan        NamPham               1.0   \n",
              "\n",
              "                     Trạng thái                               Level  \\\n",
              "15    Suy nghĩ thêm/Trả lời sau  L3.1 - SQL - Đã được tư vấn đầy đủ   \n",
              "18    Suy nghĩ thêm/Trả lời sau                                 NaN   \n",
              "19               Không nghe máy      L1.1 - Không nghe máy/Thuê bao   \n",
              "20               Không nghe máy                                 NaN   \n",
              "26    Suy nghĩ thêm/Trả lời sau                                 NaN   \n",
              "...                         ...                                 ...   \n",
              "9478  Suy nghĩ thêm/Trả lời sau  L3.1 - SQL - Đã được tư vấn đầy đủ   \n",
              "9481                    Từ chối                                 NaN   \n",
              "9482       Hẹn lúc khác gọi lại   L2.1 - MQL - Hẹn lúc khác gọi lại   \n",
              "9498       Hẹn lúc khác gọi lại                                 NaN   \n",
              "9503                     Sai số                                 NaN   \n",
              "\n",
              "     Ngày hẹn gọi lại Close Date Tỉnh/TP  Số lượng bộ sách  Số tiền giảm giá  \\\n",
              "15                NaT        NaT     NaN               NaN               NaN   \n",
              "18                NaT        NaT     NaN               NaN               NaN   \n",
              "19                NaT        NaT     NaN               NaN               NaN   \n",
              "20                NaT        NaT     NaN               NaN               NaN   \n",
              "26                NaT        NaT     NaN               NaN               NaN   \n",
              "...               ...        ...     ...               ...               ...   \n",
              "9478              NaT        NaT     NaN               NaN               NaN   \n",
              "9481              NaT        NaT     NaN               NaN               NaN   \n",
              "9482              NaT        NaT     NaN               NaN               NaN   \n",
              "9498       2023-09-12        NaT     NaN               NaN               NaN   \n",
              "9503              NaT        NaT     NaN               NaN               NaN   \n",
              "\n",
              "      Tổng tiền Số_điện_thoại  \n",
              "15            0    0123400015  \n",
              "18            0    0123400018  \n",
              "19            0    0123400019  \n",
              "20            0    0123400020  \n",
              "26            0    0123400026  \n",
              "...         ...           ...  \n",
              "9478          0    0123409476  \n",
              "9481          0    0123409479  \n",
              "9482          0    0123409480  \n",
              "9498          0    0123409496  \n",
              "9503          0    0123409501  \n",
              "\n",
              "[2453 rows x 18 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a3319130-0898-46c5-8f10-a5a20bcc873a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ngày_tháng</th>\n",
              "      <th>Giờ</th>\n",
              "      <th>Khách hàng</th>\n",
              "      <th>Channel</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Marketer 2</th>\n",
              "      <th>Type of Lead</th>\n",
              "      <th>Sales</th>\n",
              "      <th>Số lần tương tác</th>\n",
              "      <th>Trạng thái</th>\n",
              "      <th>Level</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Tỉnh/TP</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Số tiền giảm giá</th>\n",
              "      <th>Tổng tiền</th>\n",
              "      <th>Số_điện_thoại</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 08:23:20</td>\n",
              "      <td>Hoàngvy</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>HuongDinh</td>\n",
              "      <td>6.0</td>\n",
              "      <td>Suy nghĩ thêm/Trả lời sau</td>\n",
              "      <td>L3.1 - SQL - Đã được tư vấn đầy đủ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 08:28:15</td>\n",
              "      <td>ThanhHà</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>AnhNguyen08</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>HuyenNguyen04</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Suy nghĩ thêm/Trả lời sau</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 08:29:58</td>\n",
              "      <td>HaNguyen</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>AnhNguyen08</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>HuongDinh</td>\n",
              "      <td>7.0</td>\n",
              "      <td>Không nghe máy</td>\n",
              "      <td>L1.1 - Không nghe máy/Thuê bao</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 08:31:50</td>\n",
              "      <td>MyHanh</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>AnhNguyen08</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>NgocDo</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Không nghe máy</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 09:47:47</td>\n",
              "      <td>Hường</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>HuyenNguyen04</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Suy nghĩ thêm/Trả lời sau</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400026</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9478</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 21:28:55</td>\n",
              "      <td>LyNguyen</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>SangTrinh</td>\n",
              "      <td>4.0</td>\n",
              "      <td>Suy nghĩ thêm/Trả lời sau</td>\n",
              "      <td>L3.1 - SQL - Đã được tư vấn đầy đủ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409476</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9481</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 21:31:52</td>\n",
              "      <td>HuuAnhDinh</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>NamPham</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Từ chối</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409479</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9482</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 21:36:03</td>\n",
              "      <td>ĐiệnLạnhNamHồng</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>SangTrinh</td>\n",
              "      <td>4.0</td>\n",
              "      <td>Hẹn lúc khác gọi lại</td>\n",
              "      <td>L2.1 - MQL - Hẹn lúc khác gọi lại</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9498</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 11:23:30</td>\n",
              "      <td>TrangThan</td>\n",
              "      <td>FB</td>\n",
              "      <td>Mess</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>AnhHa</td>\n",
              "      <td>3.0</td>\n",
              "      <td>Hẹn lúc khác gọi lại</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2023-09-12</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409496</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9503</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 20:28:09</td>\n",
              "      <td>LôThịNhung</td>\n",
              "      <td>Google</td>\n",
              "      <td>Search</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>NamPham</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Sai số</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409501</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2453 rows × 18 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a3319130-0898-46c5-8f10-a5a20bcc873a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a3319130-0898-46c5-8f10-a5a20bcc873a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a3319130-0898-46c5-8f10-a5a20bcc873a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e8c56be7-ab57-445d-bff3-b8aafe9143d6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e8c56be7-ab57-445d-bff3-b8aafe9143d6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e8c56be7-ab57-445d-bff3-b8aafe9143d6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_37c14b23-2221-4a81-bed0-8f0c0447b98d\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('null_row')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_37c14b23-2221-4a81-bed0-8f0c0447b98d button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('null_row');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "null_row",
              "summary": "{\n  \"name\": \"null_row\",\n  \"rows\": 2453,\n  \"fields\": [\n    {\n      \"column\": \"Ng\\u00e0y_th\\u00e1ng\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-07-01 00:00:00\",\n        \"max\": \"2020-09-30 00:00:00\",\n        \"num_unique_values\": 92,\n        \"samples\": [\n          \"2020-08-21 00:00:00\",\n          \"2020-08-16 00:00:00\",\n          \"2020-08-26 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gi\\u1edd\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-01 08:23:20\",\n        \"max\": \"2023-09-30 23:59:51\",\n        \"num_unique_values\": 2442,\n        \"samples\": [\n          \"2023-08-26 22:27:22\",\n          \"2023-07-25 10:34:49\",\n          \"2023-08-31 14:46:08\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Kh\\u00e1ch h\\u00e0ng\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2251,\n        \"samples\": [\n          \"AnVy\",\n          \"KimLoiDang\",\n          \"\\u00c2uD\\u01b0\\u01a1ngGia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Channel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Google\",\n          \"Saleshunt\",\n          \"FB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chi\\u1ebfn d\\u1ecbch\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"CVS\",\n          \"Discovery\",\n          \"Brand\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marketer 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"NhiLanh\",\n          \"LinhHoang\",\n          \"NgocNgo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type of Lead\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Dathang\",\n          \"Tuvan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"HuyenNguyen\",\n          \"ThuyTran\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u1ea7n t\\u01b0\\u01a1ng t\\u00e1c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.0790960442081214,\n        \"min\": 1.0,\n        \"max\": 11.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          4.0,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tr\\u1ea1ng th\\u00e1i\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"H\\u1ee7y \\u0111\\u01a1n sau khi ch\\u1ed1t\",\n          \"Kh\\u00f4ng nghe m\\u00e1y\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"L3.1 - SQL - \\u0110\\u00e3 \\u0111\\u01b0\\u1ee3c t\\u01b0 v\\u1ea5n \\u0111\\u1ea7y \\u0111\\u1ee7\",\n          \"L1.1 - Kh\\u00f4ng nghe m\\u00e1y/Thu\\u00ea bao\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ng\\u00e0y h\\u1eb9n g\\u1ecdi l\\u1ea1i\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-05 00:00:00\",\n        \"max\": \"2023-10-02 00:00:00\",\n        \"num_unique_values\": 26,\n        \"samples\": [\n          \"2023-09-19 00:00:00\",\n          \"2023-09-08 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-08-28 00:00:00\",\n        \"max\": \"2023-08-29 00:00:00\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"2023-08-29 00:00:00\",\n          \"2023-08-28 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ec9nh/TP\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"Ti\\u1ec1n Giang\",\n          \"H\\u1ea3i Ph\\u00f2ng\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u01b0\\u1ee3ng b\\u1ed9 s\\u00e1ch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 ti\\u1ec1n gi\\u1ea3m gi\\u00e1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ed5ng ti\\u1ec1n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1_\\u0111i\\u1ec7n_tho\\u1ea1i\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2453,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 544
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "null_row['Level'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K58w4hMA9oJr",
        "outputId": "b83ca34d-7887-47ee-ec82-75f13c4ffa41"
      },
      "execution_count": 479,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Level\n",
              "L3.1 - SQL - Đã được tư vấn đầy đủ      413\n",
              "L1.1 - Không nghe máy/Thuê bao          219\n",
              "L2.1 - MQL - Hẹn lúc khác gọi lại        85\n",
              "L5.2 - Từ chối                           60\n",
              "L4.1 - Băn khoăn về giá                  57\n",
              "L4.3 - Suy nghĩ thêm/Trả lời sau         49\n",
              "L3.2 - SQL - Chưa được tư vấn đầy đủ     36\n",
              "L2.2 - MQL - Không còn nhu cầu           23\n",
              "L4.2 - Băn khoăn chất lượng SP           23\n",
              "L1.3 - Không đăng ký                     13\n",
              "L3.3 - SQL - Chủ động dừng tư vấn        11\n",
              "C3.2 - Trùng                              4\n",
              "L1.4 - Trêu đùa                           3\n",
              "L5.1 - Hỏi ý kiến người thân              3\n",
              "L7.2 - Hủy đơn sau khi chốt               3\n",
              "C3.1 - Sai số                             3\n",
              "L7.1 - Chờ chuyển khoản                   3\n",
              "L8.2 - Khách đã thanh toán toàn bộ        2\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 479
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "** NOTE\n",
        "\n",
        "* Đa số giá trị NULL đều là do KH chưa đặt hàng --> Fill số lượng bằng 0\n",
        "* Có trường hợp Level = 'Khách đã thanh toán toàn bộ' --> Cần research kỹ hơn"
      ],
      "metadata": {
        "id": "2NxQalq891nC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "row = null_row[null_row[\"Level\"] == 'L8.2 - Khách đã thanh toán toàn bộ']\n",
        "print(row) #Tổng số tiền == 0 --> Nhưng trạng thái lại là thanh toán toàn bộ ??"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dOs67DME-oOO",
        "outputId": "44ebd687-c0b9-493f-a97a-9db3dc18d77b"
      },
      "execution_count": 444,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Ngày_tháng                 Giờ    Khách hàng    Channel Chiến dịch  \\\n",
            "4019 2020-08-22 2023-08-22 08:57:37  NguyễnMỹHạnh  Saleshunt  Saleshunt   \n",
            "8028 2020-09-05 2023-09-05 17:31:01    mẹĐặngThảo  Saleshunt  Saleshunt   \n",
            "\n",
            "     Marketer 2 Type of Lead Sales Admin xác nhận Type of Lead      Sales  \\\n",
            "4019      LyLuu      Dathang                               NaN  LinhHoang   \n",
            "8028  LinhHoang      Dathang                               NaN    AnhDinh   \n",
            "\n",
            "      Số lần tương tác Ngày gọi Trạng thái  \\\n",
            "4019               1.0      NaT   Đặt hàng   \n",
            "8028               1.0      NaT   Đặt hàng   \n",
            "\n",
            "                                   Level Ngày hẹn gọi lại Close Date  Tỉnh/TP  \\\n",
            "4019  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-08-28  Đắk Lắk   \n",
            "8028  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-08-29      NaN   \n",
            "\n",
            "      Số lượng bộ sách  Số tiền giảm giá  Tổng tiền Số_điện_thoại  \n",
            "4019               NaN               NaN          0    0123404019  \n",
            "8028               NaN               NaN          0    0123408026  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Fill NaN với giá trị 0\n",
        "SaleRaw['Số lượng bộ sách'].fillna(0, inplace = True)"
      ],
      "metadata": {
        "id": "Lu-EVMxS_oiy"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT TỈNH/TP\n",
        "\n",
        "** NOTE\n",
        "\n",
        "* Tuy chứa nhiều giá trị NULL nhưng thiếu căn cứ để FILL"
      ],
      "metadata": {
        "id": "pJjMyuaEAU7c"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Tỉnh/TP'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kg0tykeLAp6g",
        "outputId": "892f1974-0634-4406-e2fa-8dbe22f59d4f"
      },
      "execution_count": 400,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Tỉnh/TP\n",
              "Hà Nội         950\n",
              "Hồ Chí Minh    555\n",
              "Đồng Nai       118\n",
              "Hải Phòng      112\n",
              "Bình Dương      93\n",
              "              ... \n",
              "nghệ an          1\n",
              "khánh hòa        1\n",
              "Phú Yên          1\n",
              "hà tĩnh          1\n",
              "yên bái          1\n",
              "Name: count, Length: 71, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 400
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Tỉnh/TP'].fillna('Unknown', inplace = True)"
      ],
      "metadata": {
        "id": "RDu45QtjA5T9"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 425
        },
        "id": "hK8lkwbOEBDJ",
        "outputId": "6bfc9351-fc4a-427c-d90b-f3072b28f378"
      },
      "execution_count": 482,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Ngày_tháng                 Giờ     Khách hàng Channel Chiến dịch  \\\n",
              "0 2020-07-01 2023-07-01 00:13:42    Phamthuthuy      FB        CVS   \n",
              "1 2020-07-01 2023-07-01 00:17:53  HoàngThịLương      FB        CVS   \n",
              "2 2020-07-01 2023-07-01 02:16:56   PhạmThịhuong      FB        CVS   \n",
              "3 2020-07-01 2023-07-01 05:21:32            Lan      FB        CVS   \n",
              "4 2020-07-01 2023-07-01 05:21:31      LạiThịĐua      FB        CVS   \n",
              "\n",
              "    Marketer 2 Type of Lead     Sales  Số lần tương tác            Trạng thái  \\\n",
              "0  AnhNguyen08      Dathang  ThuyTran               1.0  Hủy đơn sau khi chốt   \n",
              "1      NgocNgo      Dathang  ThuyTran               1.0              Đặt hàng   \n",
              "2      NgocNgo      Dathang  ThuyTran               1.0  Hủy đơn sau khi chốt   \n",
              "3      NgocNgo      Dathang  ThuyTran               1.0  Hủy đơn sau khi chốt   \n",
              "4  YenNguyen02      Dathang  ThuyTran               1.0              Đặt hàng   \n",
              "\n",
              "                                Level Ngày hẹn gọi lại Close Date     Tỉnh/TP  \\\n",
              "0         L7.2 - Hủy đơn sau khi chốt              NaT        NaT     Unknown   \n",
              "1  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-04  Quảng Ninh   \n",
              "2         L7.2 - Hủy đơn sau khi chốt              NaT        NaT     Unknown   \n",
              "3         L7.2 - Hủy đơn sau khi chốt              NaT        NaT     Unknown   \n",
              "4  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-05      Hà Nội   \n",
              "\n",
              "   Số lượng bộ sách  Số tiền giảm giá  Tổng tiền Số_điện_thoại  \n",
              "0               1.0          140000.0     499000    0123400000  \n",
              "1               1.0          140000.0     499000    0123400001  \n",
              "2               1.0          140000.0     499000    0123400002  \n",
              "3               1.0          140000.0     499000    0123400003  \n",
              "4               1.0          140000.0     499000    0123400004  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0e9e4e17-427c-4f8e-863d-65888e1eed18\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ngày_tháng</th>\n",
              "      <th>Giờ</th>\n",
              "      <th>Khách hàng</th>\n",
              "      <th>Channel</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Marketer 2</th>\n",
              "      <th>Type of Lead</th>\n",
              "      <th>Sales</th>\n",
              "      <th>Số lần tương tác</th>\n",
              "      <th>Trạng thái</th>\n",
              "      <th>Level</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Tỉnh/TP</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Số tiền giảm giá</th>\n",
              "      <th>Tổng tiền</th>\n",
              "      <th>Số_điện_thoại</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 00:13:42</td>\n",
              "      <td>Phamthuthuy</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>AnhNguyen08</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 00:17:53</td>\n",
              "      <td>HoàngThịLương</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-04</td>\n",
              "      <td>Quảng Ninh</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 02:16:56</td>\n",
              "      <td>PhạmThịhuong</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400002</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 05:21:32</td>\n",
              "      <td>Lan</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400003</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 05:21:31</td>\n",
              "      <td>LạiThịĐua</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-05</td>\n",
              "      <td>Hà Nội</td>\n",
              "      <td>1.0</td>\n",
              "      <td>140000.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400004</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e9e4e17-427c-4f8e-863d-65888e1eed18')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0e9e4e17-427c-4f8e-863d-65888e1eed18 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0e9e4e17-427c-4f8e-863d-65888e1eed18');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ba78ba74-ce89-417c-af0c-70ea8528beb7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ba78ba74-ce89-417c-af0c-70ea8528beb7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ba78ba74-ce89-417c-af0c-70ea8528beb7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "SaleRaw",
              "summary": "{\n  \"name\": \"SaleRaw\",\n  \"rows\": 9504,\n  \"fields\": [\n    {\n      \"column\": \"Ng\\u00e0y_th\\u00e1ng\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-07-01 00:00:00\",\n        \"max\": \"2020-09-30 00:00:00\",\n        \"num_unique_values\": 92,\n        \"samples\": [\n          \"2020-08-21 00:00:00\",\n          \"2020-08-16 00:00:00\",\n          \"2020-08-26 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gi\\u1edd\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-01 00:13:42\",\n        \"max\": \"2023-09-30 23:59:51\",\n        \"num_unique_values\": 9380,\n        \"samples\": [\n          \"2023-09-16 12:42:32\",\n          \"2023-09-24 09:04:43\",\n          \"2023-09-24 07:51:21\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Kh\\u00e1ch h\\u00e0ng\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7906,\n        \"samples\": [\n          \"Phanth\\u1ecbthuv\\u00e2n\",\n          \"Nguy\\u1ec5nTh\\u1ecbKimLi\\u00ean\",\n          \"L\\u00e2mTh\\u1ecbKimTuy\\u1ebfn\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Channel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"FB\",\n          \"Google\",\n          \"Tiktok\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chi\\u1ebfn d\\u1ecbch\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Lazada\",\n          \"Discovery\",\n          \"Search\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marketer 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"AnhNguyen08\",\n          \"AnhNgo01\",\n          \"ThuHoang\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type of Lead\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Tuvan\",\n          \"Dathang\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"ThuyTran\",\n          \"HuongDinh\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u1ea7n t\\u01b0\\u01a1ng t\\u00e1c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.519313103052253,\n        \"min\": 1.0,\n        \"max\": 11.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          4.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tr\\u1ea1ng th\\u00e1i\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Thu\\u00ea bao\",\n          \"\\u0110\\u1eb7t h\\u00e0ng\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"L7.2 - H\\u1ee7y \\u0111\\u01a1n sau khi ch\\u1ed1t\",\n          \"L4.2 - B\\u0103n kho\\u0103n ch\\u1ea5t l\\u01b0\\u1ee3ng SP\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ng\\u00e0y h\\u1eb9n g\\u1ecdi l\\u1ea1i\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-05 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          \"2023-09-28 00:00:00\",\n          \"2023-08-28 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-04 00:00:00\",\n        \"max\": \"2023-10-04 00:00:00\",\n        \"num_unique_values\": 93,\n        \"samples\": [\n          \"2023-08-19 00:00:00\",\n          \"2023-09-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ec9nh/TP\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 72,\n        \"samples\": [\n          \"\\u0110\\u1eafk L\\u1eafk\",\n          \"Th\\u1eeba Thi\\u00ean - Hu\\u1ebf\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u01b0\\u1ee3ng b\\u1ed9 s\\u00e1ch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4563437604583545,\n        \"min\": 0.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 ti\\u1ec1n gi\\u1ea3m gi\\u00e1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44757.33669277836,\n        \"min\": -751000.0,\n        \"max\": 1470000.0,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          -214844.0,\n          190000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ed5ng ti\\u1ec1n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 231663,\n        \"min\": 0,\n        \"max\": 3003000,\n        \"num_unique_values\": 42,\n        \"samples\": [\n          1278000,\n          531749\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1_\\u0111i\\u1ec7n_tho\\u1ea1i\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9504,\n        \"samples\": [\n          \"0123402441\",\n          \"0123407479\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 482
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT SỐ TIỀN GIẢM\n",
        "\n",
        "** Note\n",
        "\n",
        "* Chứa giá trị âm và NULL"
      ],
      "metadata": {
        "id": "ThpAsmv3Erqk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Số tiền giảm giá'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aXsDte55E3_T",
        "outputId": "7729a380-7d21-4979-cbb5-bd1759e49930"
      },
      "execution_count": 483,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Số tiền giảm giá\n",
              " 140000.0     6789\n",
              " 280000.0       67\n",
              "-51000.0        50\n",
              "-140000.0       48\n",
              " 240000.0       19\n",
              "-141000.0       18\n",
              " 389000.0        8\n",
              " 139000.0        6\n",
              "-150600.0        2\n",
              " 289000.0        2\n",
              " 420000.0        2\n",
              " 95850.0         2\n",
              " 167470.0        2\n",
              " 190000.0        2\n",
              "-723130.0        1\n",
              "-164266.0        1\n",
              "-214844.0        1\n",
              " 49386.0         1\n",
              " 359000.0        1\n",
              "-259000.0        1\n",
              "-67801.0         1\n",
              " 42987.0         1\n",
              " 970.0           1\n",
              "-751000.0        1\n",
              "-302400.0        1\n",
              "-10000.0         1\n",
              "-224841.0        1\n",
              "-300200.0        1\n",
              " 10000.0         1\n",
              "-160000.0        1\n",
              "-233647.0        1\n",
              " 499000.0        1\n",
              " 1470000.0       1\n",
              " 39186.0         1\n",
              " 62924.0         1\n",
              " 107251.0        1\n",
              " 26173.0         1\n",
              " 128150.0        1\n",
              " 152475.0        1\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 483
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Xây dựng hàm Xử lý giá trị âm\n",
        "def Minus_value(x):\n",
        "    if x > 0:\n",
        "            return x\n",
        "    else:\n",
        "        return (-1)*x"
      ],
      "metadata": {
        "id": "sCm9uvOcFUxr"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Số_tiền_giảm'] = SaleRaw['Số tiền giảm giá'].apply(Minus_value)\n",
        "SaleRaw['Số_tiền_giảm'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hOgfKXbAFrRw",
        "outputId": "99b740e4-9ef9-4376-9403-c0fb99433225"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Số_tiền_giảm\n",
              "140000.0     6837\n",
              "280000.0       67\n",
              "51000.0        50\n",
              "240000.0       19\n",
              "141000.0       18\n",
              "389000.0        8\n",
              "139000.0        6\n",
              "420000.0        2\n",
              "10000.0         2\n",
              "289000.0        2\n",
              "150600.0        2\n",
              "95850.0         2\n",
              "167470.0        2\n",
              "190000.0        2\n",
              "164266.0        1\n",
              "214844.0        1\n",
              "970.0           1\n",
              "723130.0        1\n",
              "49386.0         1\n",
              "359000.0        1\n",
              "259000.0        1\n",
              "67801.0         1\n",
              "42987.0         1\n",
              "302400.0        1\n",
              "300200.0        1\n",
              "751000.0        1\n",
              "224841.0        1\n",
              "160000.0        1\n",
              "233647.0        1\n",
              "499000.0        1\n",
              "1470000.0       1\n",
              "39186.0         1\n",
              "62924.0         1\n",
              "107251.0        1\n",
              "26173.0         1\n",
              "128150.0        1\n",
              "152475.0        1\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "null_row = SaleRaw[SaleRaw[\"Số_tiền_giảm\"].isnull()]\n",
        "null_row"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "e6NzbC9-F-jv",
        "outputId": "e9fc6456-2572-4354-928d-eacf502fc81f"
      },
      "execution_count": 549,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Ngày_tháng                 Giờ       Khách hàng Channel Chiến dịch  \\\n",
              "15   2020-07-01 2023-07-01 08:23:20          Hoàngvy      FB        CVS   \n",
              "18   2020-07-01 2023-07-01 08:28:15          ThanhHà      FB        CVS   \n",
              "19   2020-07-01 2023-07-01 08:29:58         HaNguyen      FB        CVS   \n",
              "20   2020-07-01 2023-07-01 08:31:50           MyHanh      FB        CVS   \n",
              "26   2020-07-01 2023-07-01 09:47:47            Hường      FB        CVS   \n",
              "...         ...                 ...              ...     ...        ...   \n",
              "9478 2020-09-09 2023-09-09 21:28:55         LyNguyen      FB        CVS   \n",
              "9481 2020-09-09 2023-09-09 21:31:52       HuuAnhDinh      FB        CVS   \n",
              "9482 2020-09-09 2023-09-09 21:36:03  ĐiệnLạnhNamHồng      FB        CVS   \n",
              "9498 2020-09-09 2023-09-09 11:23:30        TrangThan      FB       Mess   \n",
              "9503 2020-09-09 2023-09-09 20:28:09       LôThịNhung  Google     Search   \n",
              "\n",
              "       Marketer 2 Type of Lead          Sales  Số lần tương tác  \\\n",
              "15        NgocNgo        Tuvan      HuongDinh               6.0   \n",
              "18    AnhNguyen08        Tuvan  HuyenNguyen04               2.0   \n",
              "19    AnhNguyen08        Tuvan      HuongDinh               7.0   \n",
              "20    AnhNguyen08        Tuvan         NgocDo               2.0   \n",
              "26    YenNguyen02        Tuvan  HuyenNguyen04               2.0   \n",
              "...           ...          ...            ...               ...   \n",
              "9478        False        Tuvan      SangTrinh               4.0   \n",
              "9481        False        Tuvan        NamPham               2.0   \n",
              "9482        False        Tuvan      SangTrinh               4.0   \n",
              "9498        False        Tuvan          AnhHa               3.0   \n",
              "9503        False        Tuvan        NamPham               1.0   \n",
              "\n",
              "                     Trạng thái                               Level  \\\n",
              "15    Suy nghĩ thêm/Trả lời sau  L3.1 - SQL - Đã được tư vấn đầy đủ   \n",
              "18    Suy nghĩ thêm/Trả lời sau                                 NaN   \n",
              "19               Không nghe máy      L1.1 - Không nghe máy/Thuê bao   \n",
              "20               Không nghe máy                                 NaN   \n",
              "26    Suy nghĩ thêm/Trả lời sau                                 NaN   \n",
              "...                         ...                                 ...   \n",
              "9478  Suy nghĩ thêm/Trả lời sau  L3.1 - SQL - Đã được tư vấn đầy đủ   \n",
              "9481                    Từ chối                                 NaN   \n",
              "9482       Hẹn lúc khác gọi lại   L2.1 - MQL - Hẹn lúc khác gọi lại   \n",
              "9498       Hẹn lúc khác gọi lại                                 NaN   \n",
              "9503                     Sai số                                 NaN   \n",
              "\n",
              "     Ngày hẹn gọi lại Close Date  Tỉnh/TP  Số lượng bộ sách  Số tiền giảm giá  \\\n",
              "15                NaT        NaT  Unknown               0.0               NaN   \n",
              "18                NaT        NaT  Unknown               0.0               NaN   \n",
              "19                NaT        NaT  Unknown               0.0               NaN   \n",
              "20                NaT        NaT  Unknown               0.0               NaN   \n",
              "26                NaT        NaT  Unknown               0.0               NaN   \n",
              "...               ...        ...      ...               ...               ...   \n",
              "9478              NaT        NaT  Unknown               0.0               NaN   \n",
              "9481              NaT        NaT  Unknown               0.0               NaN   \n",
              "9482              NaT        NaT  Unknown               0.0               NaN   \n",
              "9498       2023-09-12        NaT  Unknown               0.0               NaN   \n",
              "9503              NaT        NaT  Unknown               0.0               NaN   \n",
              "\n",
              "      Tổng tiền Số_điện_thoại  Số_tiền_giảm  \n",
              "15            0    0123400015           NaN  \n",
              "18            0    0123400018           NaN  \n",
              "19            0    0123400019           NaN  \n",
              "20            0    0123400020           NaN  \n",
              "26            0    0123400026           NaN  \n",
              "...         ...           ...           ...  \n",
              "9478          0    0123409476           NaN  \n",
              "9481          0    0123409479           NaN  \n",
              "9482          0    0123409480           NaN  \n",
              "9498          0    0123409496           NaN  \n",
              "9503          0    0123409501           NaN  \n",
              "\n",
              "[2462 rows x 19 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d91411fa-61dc-4850-b4de-7f01b298977d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ngày_tháng</th>\n",
              "      <th>Giờ</th>\n",
              "      <th>Khách hàng</th>\n",
              "      <th>Channel</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Marketer 2</th>\n",
              "      <th>Type of Lead</th>\n",
              "      <th>Sales</th>\n",
              "      <th>Số lần tương tác</th>\n",
              "      <th>Trạng thái</th>\n",
              "      <th>Level</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Tỉnh/TP</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Số tiền giảm giá</th>\n",
              "      <th>Tổng tiền</th>\n",
              "      <th>Số_điện_thoại</th>\n",
              "      <th>Số_tiền_giảm</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 08:23:20</td>\n",
              "      <td>Hoàngvy</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>HuongDinh</td>\n",
              "      <td>6.0</td>\n",
              "      <td>Suy nghĩ thêm/Trả lời sau</td>\n",
              "      <td>L3.1 - SQL - Đã được tư vấn đầy đủ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400015</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 08:28:15</td>\n",
              "      <td>ThanhHà</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>AnhNguyen08</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>HuyenNguyen04</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Suy nghĩ thêm/Trả lời sau</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400018</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 08:29:58</td>\n",
              "      <td>HaNguyen</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>AnhNguyen08</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>HuongDinh</td>\n",
              "      <td>7.0</td>\n",
              "      <td>Không nghe máy</td>\n",
              "      <td>L1.1 - Không nghe máy/Thuê bao</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400019</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 08:31:50</td>\n",
              "      <td>MyHanh</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>AnhNguyen08</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>NgocDo</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Không nghe máy</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400020</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 09:47:47</td>\n",
              "      <td>Hường</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>HuyenNguyen04</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Suy nghĩ thêm/Trả lời sau</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400026</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9478</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 21:28:55</td>\n",
              "      <td>LyNguyen</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>SangTrinh</td>\n",
              "      <td>4.0</td>\n",
              "      <td>Suy nghĩ thêm/Trả lời sau</td>\n",
              "      <td>L3.1 - SQL - Đã được tư vấn đầy đủ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409476</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9481</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 21:31:52</td>\n",
              "      <td>HuuAnhDinh</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>NamPham</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Từ chối</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409479</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9482</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 21:36:03</td>\n",
              "      <td>ĐiệnLạnhNamHồng</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>SangTrinh</td>\n",
              "      <td>4.0</td>\n",
              "      <td>Hẹn lúc khác gọi lại</td>\n",
              "      <td>L2.1 - MQL - Hẹn lúc khác gọi lại</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409480</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9498</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 11:23:30</td>\n",
              "      <td>TrangThan</td>\n",
              "      <td>FB</td>\n",
              "      <td>Mess</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>AnhHa</td>\n",
              "      <td>3.0</td>\n",
              "      <td>Hẹn lúc khác gọi lại</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2023-09-12</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409496</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9503</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 20:28:09</td>\n",
              "      <td>LôThịNhung</td>\n",
              "      <td>Google</td>\n",
              "      <td>Search</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>NamPham</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Sai số</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409501</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2462 rows × 19 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d91411fa-61dc-4850-b4de-7f01b298977d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d91411fa-61dc-4850-b4de-7f01b298977d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d91411fa-61dc-4850-b4de-7f01b298977d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-28ccdc02-4c82-4202-bcec-20da94838dc3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-28ccdc02-4c82-4202-bcec-20da94838dc3')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-28ccdc02-4c82-4202-bcec-20da94838dc3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_28548603-54b3-4b44-a2d4-43c385feddad\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('null_row')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_28548603-54b3-4b44-a2d4-43c385feddad button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('null_row');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "null_row",
              "summary": "{\n  \"name\": \"null_row\",\n  \"rows\": 2462,\n  \"fields\": [\n    {\n      \"column\": \"Ng\\u00e0y_th\\u00e1ng\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-07-01 00:00:00\",\n        \"max\": \"2020-09-30 00:00:00\",\n        \"num_unique_values\": 92,\n        \"samples\": [\n          \"2020-08-21 00:00:00\",\n          \"2020-08-16 00:00:00\",\n          \"2020-08-26 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gi\\u1edd\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-01 08:23:20\",\n        \"max\": \"2023-09-30 23:59:51\",\n        \"num_unique_values\": 2451,\n        \"samples\": [\n          \"2023-09-02 09:59:59\",\n          \"2023-09-02 06:30:19\",\n          \"2023-08-25 09:53:52\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Kh\\u00e1ch h\\u00e0ng\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2260,\n        \"samples\": [\n          \"Lu\\u00e2nNguy\\u00ean\",\n          \"\\u0110\\u1eb7ngTh\\u1ecbThanhHuy\\u1ec1n\",\n          \"CaoThanhNhan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Channel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"FB\",\n          \"Google\",\n          \"Tiki\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chi\\u1ebfn d\\u1ecbch\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Saleshunt\",\n          \"Discovery\",\n          \"Lazada\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marketer 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"NhiLanh\",\n          \"LinhHoang\",\n          \"NgocNgo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type of Lead\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Dathang\",\n          \"Tuvan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"HuyenNguyen\",\n          \"ThuyTran\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u1ea7n t\\u01b0\\u01a1ng t\\u00e1c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.078713616404504,\n        \"min\": 1.0,\n        \"max\": 11.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          4.0,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tr\\u1ea1ng th\\u00e1i\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"H\\u1ee7y \\u0111\\u01a1n sau khi ch\\u1ed1t\",\n          \"Kh\\u00f4ng nghe m\\u00e1y\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"L3.1 - SQL - \\u0110\\u00e3 \\u0111\\u01b0\\u1ee3c t\\u01b0 v\\u1ea5n \\u0111\\u1ea7y \\u0111\\u1ee7\",\n          \"L1.1 - Kh\\u00f4ng nghe m\\u00e1y/Thu\\u00ea bao\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ng\\u00e0y h\\u1eb9n g\\u1ecdi l\\u1ea1i\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-05 00:00:00\",\n        \"max\": \"2023-10-02 00:00:00\",\n        \"num_unique_values\": 26,\n        \"samples\": [\n          \"2023-09-19 00:00:00\",\n          \"2023-09-08 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-08-25 00:00:00\",\n        \"max\": \"2023-08-29 00:00:00\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"2023-08-25 00:00:00\",\n          \"2023-08-28 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ec9nh/TP\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Unknown\",\n          \"H\\u00e0 N\\u1ed9i\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u01b0\\u1ee3ng b\\u1ed9 s\\u00e1ch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08538345033255741,\n        \"min\": 0.0,\n        \"max\": 2.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 ti\\u1ec1n gi\\u1ea3m gi\\u00e1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ed5ng ti\\u1ec1n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 53966,\n        \"min\": 0,\n        \"max\": 1278000,\n        \"num_unique_values\": 4,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1_\\u0111i\\u1ec7n_tho\\u1ea1i\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2462,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1_ti\\u1ec1n_gi\\u1ea3m\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 549
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "null_row['Level'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WahheEziGK66",
        "outputId": "5ae72082-1da7-4863-8f58-7329dcfc2312"
      },
      "execution_count": 450,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Level\n",
              "L3.1 - SQL - Đã được tư vấn đầy đủ      414\n",
              "L1.1 - Không nghe máy/Thuê bao          219\n",
              "L2.1 - MQL - Hẹn lúc khác gọi lại        85\n",
              "L5.2 - Từ chối                           60\n",
              "L4.1 - Băn khoăn về giá                  57\n",
              "L4.3 - Suy nghĩ thêm/Trả lời sau         49\n",
              "L3.2 - SQL - Chưa được tư vấn đầy đủ     36\n",
              "L2.2 - MQL - Không còn nhu cầu           23\n",
              "L4.2 - Băn khoăn chất lượng SP           23\n",
              "L1.3 - Không đăng ký                     13\n",
              "L3.3 - SQL - Chủ động dừng tư vấn        11\n",
              "L7.1 - Chờ chuyển khoản                   9\n",
              "L7.2 - Hủy đơn sau khi chốt               4\n",
              "C3.2 - Trùng                              4\n",
              "L1.4 - Trêu đùa                           3\n",
              "L5.1 - Hỏi ý kiến người thân              3\n",
              "C3.1 - Sai số                             3\n",
              "L8.2 - Khách đã thanh toán toàn bộ        3\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 450
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Số_tiền_giảm'].fillna(0, inplace = True)"
      ],
      "metadata": {
        "id": "vWD613viGW-j"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Số_tiền_giảm'].astype(int)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TP2w5PM9yqt2",
        "outputId": "f1ce13f9-a3c7-426b-e580-1d3ecca19e02"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       140000\n",
              "1       140000\n",
              "2       140000\n",
              "3       140000\n",
              "4       140000\n",
              "         ...  \n",
              "9468         0\n",
              "9476         0\n",
              "9481         0\n",
              "9498         0\n",
              "9503         0\n",
              "Name: Số_tiền_giảm, Length: 9504, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw.drop(['Số tiền giảm giá'], axis=1, inplace=True)\n",
        "SaleRaw.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 459
        },
        "id": "oMuUbU8HGhoQ",
        "outputId": "8289c348-4cfa-4354-a75c-4ee899aaa7ce"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Ngày_tháng                 Giờ     Khách hàng Channel Chiến dịch  \\\n",
              "0 2020-07-01 2023-07-01 00:13:42    Phamthuthuy      FB        CVS   \n",
              "1 2020-07-01 2023-07-01 00:17:53  HoàngThịLương      FB        CVS   \n",
              "2 2020-07-01 2023-07-01 02:16:56   PhạmThịhuong      FB        CVS   \n",
              "3 2020-07-01 2023-07-01 05:21:32            Lan      FB        CVS   \n",
              "4 2020-07-01 2023-07-01 05:21:31      LạiThịĐua      FB        CVS   \n",
              "\n",
              "    Marketer 2 Type of Lead     Sales  Số lần tương tác            Trạng thái  \\\n",
              "0  AnhNguyen08      Dathang  ThuyTran               1.0  Hủy đơn sau khi chốt   \n",
              "1      NgocNgo      Dathang  ThuyTran               1.0              Đặt hàng   \n",
              "2      NgocNgo      Dathang  ThuyTran               1.0  Hủy đơn sau khi chốt   \n",
              "3      NgocNgo      Dathang  ThuyTran               1.0  Hủy đơn sau khi chốt   \n",
              "4  YenNguyen02      Dathang  ThuyTran               1.0              Đặt hàng   \n",
              "\n",
              "                                Level Ngày hẹn gọi lại Close Date     Tỉnh/TP  \\\n",
              "0         L7.2 - Hủy đơn sau khi chốt              NaT        NaT     Unknown   \n",
              "1  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-04  Quảng Ninh   \n",
              "2         L7.2 - Hủy đơn sau khi chốt              NaT        NaT     Unknown   \n",
              "3         L7.2 - Hủy đơn sau khi chốt              NaT        NaT     Unknown   \n",
              "4  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-05      Hà Nội   \n",
              "\n",
              "   Số lượng bộ sách  Tổng tiền Số_điện_thoại  Số_tiền_giảm  \n",
              "0               1.0     499000    0123400000      140000.0  \n",
              "1               1.0     499000    0123400001      140000.0  \n",
              "2               1.0     499000    0123400002      140000.0  \n",
              "3               1.0     499000    0123400003      140000.0  \n",
              "4               1.0     499000    0123400004      140000.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5a7f4577-0e5d-4eb5-b7dc-c56291447a87\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ngày_tháng</th>\n",
              "      <th>Giờ</th>\n",
              "      <th>Khách hàng</th>\n",
              "      <th>Channel</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Marketer 2</th>\n",
              "      <th>Type of Lead</th>\n",
              "      <th>Sales</th>\n",
              "      <th>Số lần tương tác</th>\n",
              "      <th>Trạng thái</th>\n",
              "      <th>Level</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Tỉnh/TP</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Tổng tiền</th>\n",
              "      <th>Số_điện_thoại</th>\n",
              "      <th>Số_tiền_giảm</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 00:13:42</td>\n",
              "      <td>Phamthuthuy</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>AnhNguyen08</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>1.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400000</td>\n",
              "      <td>140000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 00:17:53</td>\n",
              "      <td>HoàngThịLương</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-04</td>\n",
              "      <td>Quảng Ninh</td>\n",
              "      <td>1.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400001</td>\n",
              "      <td>140000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 02:16:56</td>\n",
              "      <td>PhạmThịhuong</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>1.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400002</td>\n",
              "      <td>140000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 05:21:32</td>\n",
              "      <td>Lan</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Hủy đơn sau khi chốt</td>\n",
              "      <td>L7.2 - Hủy đơn sau khi chốt</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>1.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400003</td>\n",
              "      <td>140000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 05:21:31</td>\n",
              "      <td>LạiThịĐua</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-05</td>\n",
              "      <td>Hà Nội</td>\n",
              "      <td>1.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400004</td>\n",
              "      <td>140000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a7f4577-0e5d-4eb5-b7dc-c56291447a87')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5a7f4577-0e5d-4eb5-b7dc-c56291447a87 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5a7f4577-0e5d-4eb5-b7dc-c56291447a87');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cd515b38-95ae-43f9-a7fa-3ea5d0baeccf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cd515b38-95ae-43f9-a7fa-3ea5d0baeccf')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cd515b38-95ae-43f9-a7fa-3ea5d0baeccf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "SaleRaw",
              "summary": "{\n  \"name\": \"SaleRaw\",\n  \"rows\": 9504,\n  \"fields\": [\n    {\n      \"column\": \"Ng\\u00e0y_th\\u00e1ng\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-07-01 00:00:00\",\n        \"max\": \"2020-09-30 00:00:00\",\n        \"num_unique_values\": 92,\n        \"samples\": [\n          \"2020-08-21 00:00:00\",\n          \"2020-08-16 00:00:00\",\n          \"2020-08-26 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gi\\u1edd\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-01 00:13:42\",\n        \"max\": \"2023-09-30 23:59:51\",\n        \"num_unique_values\": 9380,\n        \"samples\": [\n          \"2023-09-16 12:42:32\",\n          \"2023-09-24 09:04:43\",\n          \"2023-09-24 07:51:21\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Kh\\u00e1ch h\\u00e0ng\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7907,\n        \"samples\": [\n          \"Nh\\u01b0Nguy\\u1ec5n\",\n          \"Tr\\u1ea7nTh\\u00f9yTrang\",\n          \"Th\\u1ea1chVi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Channel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"FB\",\n          \"Google\",\n          \"Tiktok\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chi\\u1ebfn d\\u1ecbch\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Lazada\",\n          \"Discovery\",\n          \"Search\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marketer 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"AnhNguyen08\",\n          \"AnhNgo01\",\n          \"ThuHoang\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type of Lead\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Tuvan\",\n          \"Dathang\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"ThuyTran\",\n          \"HuongDinh\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u1ea7n t\\u01b0\\u01a1ng t\\u00e1c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.519313103052253,\n        \"min\": 1.0,\n        \"max\": 11.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          4.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tr\\u1ea1ng th\\u00e1i\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Thu\\u00ea bao\",\n          \"\\u0110\\u1eb7t h\\u00e0ng\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"L7.2 - H\\u1ee7y \\u0111\\u01a1n sau khi ch\\u1ed1t\",\n          \"L4.2 - B\\u0103n kho\\u0103n ch\\u1ea5t l\\u01b0\\u1ee3ng SP\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ng\\u00e0y h\\u1eb9n g\\u1ecdi l\\u1ea1i\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-05 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          \"2023-09-28 00:00:00\",\n          \"2023-08-28 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-04 00:00:00\",\n        \"max\": \"2023-10-04 00:00:00\",\n        \"num_unique_values\": 93,\n        \"samples\": [\n          \"2023-08-19 00:00:00\",\n          \"2023-09-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ec9nh/TP\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 72,\n        \"samples\": [\n          \"\\u0110\\u1eafk L\\u1eafk\",\n          \"Th\\u1eeba Thi\\u00ean - Hu\\u1ebf\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u01b0\\u1ee3ng b\\u1ed9 s\\u00e1ch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4563437604583545,\n        \"min\": 0.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ed5ng ti\\u1ec1n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 231663,\n        \"min\": 0,\n        \"max\": 3003000,\n        \"num_unique_values\": 42,\n        \"samples\": [\n          1278000,\n          531749\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1_\\u0111i\\u1ec7n_tho\\u1ea1i\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9504,\n        \"samples\": [\n          \"0123402441\",\n          \"0123407479\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1_ti\\u1ec1n_gi\\u1ea3m\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 66572.26419994138,\n        \"min\": 0.0,\n        \"max\": 1470000.0,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          164266.0,\n          42987.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT TRẠNG THÁI"
      ],
      "metadata": {
        "id": "pWy_tGa8HBVa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Trạng thái'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PcCH_wZ1HEdc",
        "outputId": "9a3fa898-3e01-4b16-d6f2-636831009628"
      },
      "execution_count": 552,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Trạng thái\n",
              "Đặt hàng                     6343\n",
              "Suy nghĩ thêm/Trả lời sau    1117\n",
              "Hủy đơn sau khi chốt          533\n",
              "Từ chối                       430\n",
              "Không nghe máy                417\n",
              "Hẹn lúc khác gọi lại          292\n",
              "Thuê bao                       81\n",
              "Sai số                         49\n",
              "Trùng                          44\n",
              "Trêu đùa                       12\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 552
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Trạng thái'] = SaleRaw['Trạng thái'].replace({'Trùng':'Khác','Sai số':'Khác','Trêu đùa':'Khác','Thuê bao':'Không nghe máy'})\n",
        "SaleRaw['Trạng thái'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "j44_IIGrbawq",
        "outputId": "45a96e92-5e3a-4016-e876-61fbd515d4bf"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Trạng thái\n",
              "Đặt hàng                     6343\n",
              "Suy nghĩ thêm/Trả lời sau    1117\n",
              "Hủy đơn sau khi chốt          533\n",
              "Không nghe máy                498\n",
              "Từ chối                       430\n",
              "Hẹn lúc khác gọi lại          292\n",
              "Khác                          105\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wmT3ZWE5fIVY",
        "outputId": "b082935a-249a-467a-ed01-6c0e77264c30"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 9504 entries, 0 to 9503\n",
            "Data columns (total 18 columns):\n",
            " #   Column            Non-Null Count  Dtype         \n",
            "---  ------            --------------  -----         \n",
            " 0   Ngày_tháng        9504 non-null   datetime64[ns]\n",
            " 1   Giờ               9504 non-null   datetime64[ns]\n",
            " 2   Khách hàng        9504 non-null   object        \n",
            " 3   Channel           9504 non-null   object        \n",
            " 4   Chiến dịch        9504 non-null   object        \n",
            " 5   Marketer 2        9504 non-null   object        \n",
            " 6   Type of Lead      9504 non-null   object        \n",
            " 7   Sales             9504 non-null   object        \n",
            " 8   Số lần tương tác  9496 non-null   float64       \n",
            " 9   Trạng thái        9318 non-null   object        \n",
            " 10  Level             7984 non-null   object        \n",
            " 11  Ngày hẹn gọi lại  48 non-null     datetime64[ns]\n",
            " 12  Close Date        6161 non-null   datetime64[ns]\n",
            " 13  Tỉnh/TP           9504 non-null   object        \n",
            " 14  Số lượng bộ sách  9504 non-null   float64       \n",
            " 15  Tổng tiền         9504 non-null   int64         \n",
            " 16  Số_điện_thoại     9504 non-null   object        \n",
            " 17  Số_tiền_giảm      9504 non-null   float64       \n",
            "dtypes: datetime64[ns](4), float64(3), int64(1), object(10)\n",
            "memory usage: 1.4+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "null_row = SaleRaw[SaleRaw[\"Trạng thái\"].isnull()]\n",
        "null_row"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "HpBiy5mQN6eq",
        "outputId": "b28af58c-128e-484b-cc73-490693199629"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Ngày_tháng                 Giờ        Khách hàng Channel Chiến dịch  \\\n",
              "204  2020-09-01 2023-09-01 14:49:18         ThanhPham      FB        CVS   \n",
              "282  2020-07-10 2023-07-10 04:29:06            HaiVan      FB      Brand   \n",
              "332  2020-07-10 2023-07-10 10:25:33     NguyễnThịThúy      FB        CVS   \n",
              "333  2020-07-10 2023-07-10 10:27:06   NguyễnThịAnhĐào      FB        CVS   \n",
              "334  2020-07-10 2023-07-10 10:33:14   NguyễnHồngNhung      FB        CVS   \n",
              "...         ...                 ...               ...     ...        ...   \n",
              "9195 2020-07-09 2023-07-09 16:35:15        Phạmthịmai      FB        CVS   \n",
              "9196 2020-07-09 2023-07-09 16:40:04       PhạmNgọcMai      FB        CVS   \n",
              "9197 2020-07-09 2023-07-09 16:57:03            NgọcĐể      FB        CVS   \n",
              "9198 2020-07-09 2023-07-09 16:58:39  NguyễnThịThuHiền      FB        CVS   \n",
              "9213 2020-07-09 2023-07-09 20:54:23         ĐỗThịluân      FB        CVS   \n",
              "\n",
              "       Marketer 2 Type of Lead          Sales  Số lần tương tác Trạng thái  \\\n",
              "204         DucVu        Tuvan       ThaoKieu               NaN        NaN   \n",
              "282       NhiLanh      Dathang         NgocDo               1.0        NaN   \n",
              "332   YenNguyen02      Dathang       ThuyTran               1.0        NaN   \n",
              "333   YenNguyen02      Dathang       ThuyTran               1.0        NaN   \n",
              "334   YenNguyen02        Tuvan  HuyenNguyen04               2.0        NaN   \n",
              "...           ...          ...            ...               ...        ...   \n",
              "9195  YenNguyen02      Dathang       ThuyTran               1.0        NaN   \n",
              "9196  YenNguyen02      Dathang       ThuyTran               1.0        NaN   \n",
              "9197    GiangPhan      Dathang       ThuyTran               1.0        NaN   \n",
              "9198  YenNguyen02      Dathang       ThuyTran               1.0        NaN   \n",
              "9213    GiangPhan      Dathang       ThuyTran               1.0        NaN   \n",
              "\n",
              "                                   Level Ngày hẹn gọi lại Close Date  \\\n",
              "204                                  NaN              NaT        NaT   \n",
              "282   L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-12   \n",
              "332   L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-13   \n",
              "333   L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-12   \n",
              "334                                  NaN              NaT        NaT   \n",
              "...                                  ...              ...        ...   \n",
              "9195  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-13   \n",
              "9196  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-12   \n",
              "9197  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-13   \n",
              "9198  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-12   \n",
              "9213  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-07-12   \n",
              "\n",
              "         Tỉnh/TP  Số lượng bộ sách  Tổng tiền Số_điện_thoại  Số_tiền_giảm  \n",
              "204      Unknown               0.0          0    0123400204           0.0  \n",
              "282       Hà Nội               1.0     499000    0123400282      140000.0  \n",
              "332       Hà Nội               1.0     499000    0123400332      140000.0  \n",
              "333    Hải Dương               1.0     499000    0123400333      140000.0  \n",
              "334      Unknown               0.0          0    0123400334           0.0  \n",
              "...          ...               ...        ...           ...           ...  \n",
              "9195   Khánh Hòa               1.0     499000    0123409193      140000.0  \n",
              "9196  Quảng Ninh               1.0     499000    0123409194      140000.0  \n",
              "9197  Bình Dương               1.0     499000    0123409195      140000.0  \n",
              "9198    Bắc Ninh               1.0     499000    0123409196      140000.0  \n",
              "9213      Hà Nội               1.0     499000    0123409211      140000.0  \n",
              "\n",
              "[186 rows x 18 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d4897a12-d06e-4f5e-8ff0-9e0ac81166b2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ngày_tháng</th>\n",
              "      <th>Giờ</th>\n",
              "      <th>Khách hàng</th>\n",
              "      <th>Channel</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Marketer 2</th>\n",
              "      <th>Type of Lead</th>\n",
              "      <th>Sales</th>\n",
              "      <th>Số lần tương tác</th>\n",
              "      <th>Trạng thái</th>\n",
              "      <th>Level</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Tỉnh/TP</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Tổng tiền</th>\n",
              "      <th>Số_điện_thoại</th>\n",
              "      <th>Số_tiền_giảm</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>204</th>\n",
              "      <td>2020-09-01</td>\n",
              "      <td>2023-09-01 14:49:18</td>\n",
              "      <td>ThanhPham</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>DucVu</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>ThaoKieu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400204</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>282</th>\n",
              "      <td>2020-07-10</td>\n",
              "      <td>2023-07-10 04:29:06</td>\n",
              "      <td>HaiVan</td>\n",
              "      <td>FB</td>\n",
              "      <td>Brand</td>\n",
              "      <td>NhiLanh</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>NgocDo</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-12</td>\n",
              "      <td>Hà Nội</td>\n",
              "      <td>1.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400282</td>\n",
              "      <td>140000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>332</th>\n",
              "      <td>2020-07-10</td>\n",
              "      <td>2023-07-10 10:25:33</td>\n",
              "      <td>NguyễnThịThúy</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-13</td>\n",
              "      <td>Hà Nội</td>\n",
              "      <td>1.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400332</td>\n",
              "      <td>140000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>333</th>\n",
              "      <td>2020-07-10</td>\n",
              "      <td>2023-07-10 10:27:06</td>\n",
              "      <td>NguyễnThịAnhĐào</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-12</td>\n",
              "      <td>Hải Dương</td>\n",
              "      <td>1.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123400333</td>\n",
              "      <td>140000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>334</th>\n",
              "      <td>2020-07-10</td>\n",
              "      <td>2023-07-10 10:33:14</td>\n",
              "      <td>NguyễnHồngNhung</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>HuyenNguyen04</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400334</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9195</th>\n",
              "      <td>2020-07-09</td>\n",
              "      <td>2023-07-09 16:35:15</td>\n",
              "      <td>Phạmthịmai</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-13</td>\n",
              "      <td>Khánh Hòa</td>\n",
              "      <td>1.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123409193</td>\n",
              "      <td>140000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9196</th>\n",
              "      <td>2020-07-09</td>\n",
              "      <td>2023-07-09 16:40:04</td>\n",
              "      <td>PhạmNgọcMai</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-12</td>\n",
              "      <td>Quảng Ninh</td>\n",
              "      <td>1.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123409194</td>\n",
              "      <td>140000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9197</th>\n",
              "      <td>2020-07-09</td>\n",
              "      <td>2023-07-09 16:57:03</td>\n",
              "      <td>NgọcĐể</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>GiangPhan</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-13</td>\n",
              "      <td>Bình Dương</td>\n",
              "      <td>1.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123409195</td>\n",
              "      <td>140000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9198</th>\n",
              "      <td>2020-07-09</td>\n",
              "      <td>2023-07-09 16:58:39</td>\n",
              "      <td>NguyễnThịThuHiền</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-12</td>\n",
              "      <td>Bắc Ninh</td>\n",
              "      <td>1.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123409196</td>\n",
              "      <td>140000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9213</th>\n",
              "      <td>2020-07-09</td>\n",
              "      <td>2023-07-09 20:54:23</td>\n",
              "      <td>ĐỗThịluân</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>GiangPhan</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>ThuyTran</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-07-12</td>\n",
              "      <td>Hà Nội</td>\n",
              "      <td>1.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123409211</td>\n",
              "      <td>140000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>186 rows × 18 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d4897a12-d06e-4f5e-8ff0-9e0ac81166b2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d4897a12-d06e-4f5e-8ff0-9e0ac81166b2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d4897a12-d06e-4f5e-8ff0-9e0ac81166b2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-23fdb661-6307-4a07-80bd-68bd649989c5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-23fdb661-6307-4a07-80bd-68bd649989c5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-23fdb661-6307-4a07-80bd-68bd649989c5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_706ff41f-68a8-405e-bfb3-949b328a8bec\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('null_row')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_706ff41f-68a8-405e-bfb3-949b328a8bec button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('null_row');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "null_row",
              "repr_error": "0"
            }
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "null_row['Level'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "19S5I7GMav75",
        "outputId": "fb730658-ae2a-4168-a88c-407a81946ea3"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Level\n",
              "L8.2 - Khách đã thanh toán toàn bộ    136\n",
              "L7.2 - Hủy đơn sau khi chốt             7\n",
              "L1.1 - Không nghe máy/Thuê bao          4\n",
              "L4.1 - Băn khoăn về giá                 1\n",
              "C3.2 - Trùng                            1\n",
              "L3.1 - SQL - Đã được tư vấn đầy đủ      1\n",
              "L2.2 - MQL - Không còn nhu cầu          1\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "null_row['Level'].isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FyFk_V4BbGi6",
        "outputId": "aee31e01-e980-4433-c0a9-0e06c2b892f8"
      },
      "execution_count": 494,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "35"
            ]
          },
          "metadata": {},
          "execution_count": 494
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "** Note\n",
        "\n",
        "* Dựa vào thông tin của cột Level để Fill cột Trạng Thái\n",
        "* Trong trường hợp Level cũng null --> Fill 'Khác'\n",
        "* Tách riêng cột trạng thái thành 2 phần dữ liệu NULL và không NULL để xử lý riêng biệt --> Sau đó merge lại"
      ],
      "metadata": {
        "id": "2sEGvc0BCQFy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Xây dựng hàm để fill Trạng Thái\n",
        "def null_filler(title):\n",
        "    if 'khách đã thanh toán toàn bộ' in title.lower():\n",
        "            return 'Đặt hàng'\n",
        "    elif 'hủy đơn sau khi chốt' in title.lower() or 'không còn nhu cầu'in title.lower():\n",
        "        return 'Hủy đơn sau khi chốt'\n",
        "    elif 'không nghe máy/thuê bao' in title.lower():\n",
        "        return 'Không nghe máy'\n",
        "    elif 'băn khoăn về giá' in title.lower() or 'đã được tư vấn đầy đủ'in title.lower():\n",
        "        return 'Suy nghĩ thêm/Trả lời sau'\n",
        "    else:\n",
        "        return 'Khác'"
      ],
      "metadata": {
        "id": "-v137VZecmBk"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "null_row['Level'] = null_row['Level'].astype(str)\n",
        "null_row['Trạng thái'] = null_row['Level'].apply(null_filler)\n",
        "null_row['Trạng thái'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8OWDeovoeWys",
        "outputId": "b0d577d3-400b-4a92-a707-3c6b3dd39a3a"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-38-469cfc664cf0>:1: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  null_row['Level'] = null_row['Level'].astype(str)\n",
            "<ipython-input-38-469cfc664cf0>:2: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  null_row['Trạng thái'] = null_row['Level'].apply(null_filler)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Trạng thái\n",
              "Đặt hàng                     136\n",
              "Khác                          36\n",
              "Hủy đơn sau khi chốt           8\n",
              "Không nghe máy                 4\n",
              "Suy nghĩ thêm/Trả lời sau      2\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "frames = [SaleRaw, null_row]\n",
        "\n",
        "SaleRaw = pd.concat(frames)"
      ],
      "metadata": {
        "id": "MtQOIDCwfbdf"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw.dropna(subset=['Trạng thái'], inplace = True)"
      ],
      "metadata": {
        "id": "00I0d8pzk_ur"
      },
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZVmzJ_0IlCVi",
        "outputId": "08f5518f-50ed-4a40-eedd-3d80f78a0784"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 9504 entries, 0 to 9213\n",
            "Data columns (total 18 columns):\n",
            " #   Column            Non-Null Count  Dtype         \n",
            "---  ------            --------------  -----         \n",
            " 0   Ngày_tháng        9504 non-null   datetime64[ns]\n",
            " 1   Giờ               9504 non-null   datetime64[ns]\n",
            " 2   Khách hàng        9504 non-null   object        \n",
            " 3   Channel           9504 non-null   object        \n",
            " 4   Chiến dịch        9504 non-null   object        \n",
            " 5   Marketer 2        9504 non-null   object        \n",
            " 6   Type of Lead      9504 non-null   object        \n",
            " 7   Sales             9504 non-null   object        \n",
            " 8   Số lần tương tác  9496 non-null   float64       \n",
            " 9   Trạng thái        9504 non-null   object        \n",
            " 10  Level             8019 non-null   object        \n",
            " 11  Ngày hẹn gọi lại  48 non-null     datetime64[ns]\n",
            " 12  Close Date        6161 non-null   datetime64[ns]\n",
            " 13  Tỉnh/TP           9504 non-null   object        \n",
            " 14  Số lượng bộ sách  9504 non-null   float64       \n",
            " 15  Tổng tiền         9504 non-null   int64         \n",
            " 16  Số_điện_thoại     9504 non-null   object        \n",
            " 17  Số_tiền_giảm      9504 non-null   float64       \n",
            "dtypes: datetime64[ns](4), float64(3), int64(1), object(10)\n",
            "memory usage: 1.4+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT SỐ LẦN TƯƠNG TÁC"
      ],
      "metadata": {
        "id": "yrlZcN5WnWVB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Số lần tương tác'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KlXiIoG1nZSn",
        "outputId": "918e02db-aae2-4914-b280-efca779dd719"
      },
      "execution_count": 505,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Số lần tương tác\n",
              "1.0     7089\n",
              "2.0      767\n",
              "3.0      600\n",
              "4.0      346\n",
              "5.0      227\n",
              "6.0      220\n",
              "7.0      137\n",
              "8.0       73\n",
              "9.0       24\n",
              "10.0       9\n",
              "11.0       4\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 505
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tt_null_row = SaleRaw[SaleRaw[\"Số lần tương tác\"].isnull()]\n",
        "tt_null_row"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 654
        },
        "id": "slJfVSN_nn9g",
        "outputId": "4ec4992c-6960-45d6-c0ef-ad04abf2c89e"
      },
      "execution_count": 506,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Ngày_tháng                 Giờ     Khách hàng Channel Chiến dịch  \\\n",
              "2671 2020-09-17 2023-09-17 17:16:32  LưuThịMỹHuyền      FB        CVS   \n",
              "5994 2020-09-28 2023-09-28 21:30:09  NguyễnMạnhHải  Upsell     Upsell   \n",
              "204  2020-09-01 2023-09-01 14:49:18      ThanhPham      FB        CVS   \n",
              "522  2020-09-10 2023-09-10 08:38:34      TranNhung      FB        CVS   \n",
              "1865 2020-08-15 2023-08-15 15:40:03     LịchNguyễn      FB        CVS   \n",
              "3369 2020-09-02 2023-09-02 13:46:58         MaiAnh      FB        CVS   \n",
              "6908 2020-08-30 2023-08-30 14:30:12     YumiNguyen      FB        CVS   \n",
              "7068 2020-09-30 2023-09-30 15:50:27        HoanHao      FB        CVS   \n",
              "\n",
              "     Marketer 2 Type of Lead          Sales  Số lần tương tác Trạng thái  \\\n",
              "2671      False        Tuvan         NgocDo               NaN       Khác   \n",
              "5994      False      Dathang     NganNguyen               NaN   Đặt hàng   \n",
              "204       DucVu        Tuvan       ThaoKieu               NaN       Khác   \n",
              "522       False        Tuvan    AnhNguyen13               NaN       Khác   \n",
              "1865    NgocNgo        Tuvan    AnhNguyen13               NaN       Khác   \n",
              "3369   TungTran        Tuvan    AnhNguyen13               NaN       Khác   \n",
              "6908    NgocNgo        Tuvan    HuyenNguyen               NaN       Khác   \n",
              "7068      False        Tuvan  HuyenNguyen04               NaN       Khác   \n",
              "\n",
              "                                   Level Ngày hẹn gọi lại Close Date  Tỉnh/TP  \\\n",
              "2671                                 NaN              NaT        NaT  Unknown   \n",
              "5994  L8.2 - Khách đã thanh toán toàn bộ              NaT 2023-09-30  Unknown   \n",
              "204                                  nan              NaT        NaT  Unknown   \n",
              "522                                  nan              NaT        NaT  Unknown   \n",
              "1865                                 nan              NaT        NaT  Unknown   \n",
              "3369                                 nan              NaT        NaT  Unknown   \n",
              "6908                                 nan              NaT        NaT  Unknown   \n",
              "7068                                 nan              NaT        NaT  Unknown   \n",
              "\n",
              "      Số lượng bộ sách  Tổng tiền Số_điện_thoại  Số_tiền_giảm  \n",
              "2671               0.0          0    0123402671           0.0  \n",
              "5994               1.0     499000    0123405992      140000.0  \n",
              "204                0.0          0    0123400204           0.0  \n",
              "522                0.0          0    0123400522           0.0  \n",
              "1865               0.0          0    0123401865           0.0  \n",
              "3369               0.0          0    0123403369           0.0  \n",
              "6908               0.0          0    0123406906           0.0  \n",
              "7068               0.0          0    0123407066           0.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-718fa43a-643f-4ce6-8470-c5ae62192622\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ngày_tháng</th>\n",
              "      <th>Giờ</th>\n",
              "      <th>Khách hàng</th>\n",
              "      <th>Channel</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Marketer 2</th>\n",
              "      <th>Type of Lead</th>\n",
              "      <th>Sales</th>\n",
              "      <th>Số lần tương tác</th>\n",
              "      <th>Trạng thái</th>\n",
              "      <th>Level</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Tỉnh/TP</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Tổng tiền</th>\n",
              "      <th>Số_điện_thoại</th>\n",
              "      <th>Số_tiền_giảm</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2671</th>\n",
              "      <td>2020-09-17</td>\n",
              "      <td>2023-09-17 17:16:32</td>\n",
              "      <td>LưuThịMỹHuyền</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>NgocDo</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Khác</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123402671</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5994</th>\n",
              "      <td>2020-09-28</td>\n",
              "      <td>2023-09-28 21:30:09</td>\n",
              "      <td>NguyễnMạnhHải</td>\n",
              "      <td>Upsell</td>\n",
              "      <td>Upsell</td>\n",
              "      <td>False</td>\n",
              "      <td>Dathang</td>\n",
              "      <td>NganNguyen</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Đặt hàng</td>\n",
              "      <td>L8.2 - Khách đã thanh toán toàn bộ</td>\n",
              "      <td>NaT</td>\n",
              "      <td>2023-09-30</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>1.0</td>\n",
              "      <td>499000</td>\n",
              "      <td>0123405992</td>\n",
              "      <td>140000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>204</th>\n",
              "      <td>2020-09-01</td>\n",
              "      <td>2023-09-01 14:49:18</td>\n",
              "      <td>ThanhPham</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>DucVu</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>ThaoKieu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Khác</td>\n",
              "      <td>nan</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400204</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>522</th>\n",
              "      <td>2020-09-10</td>\n",
              "      <td>2023-09-10 08:38:34</td>\n",
              "      <td>TranNhung</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>AnhNguyen13</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Khác</td>\n",
              "      <td>nan</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400522</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1865</th>\n",
              "      <td>2020-08-15</td>\n",
              "      <td>2023-08-15 15:40:03</td>\n",
              "      <td>LịchNguyễn</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>AnhNguyen13</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Khác</td>\n",
              "      <td>nan</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123401865</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3369</th>\n",
              "      <td>2020-09-02</td>\n",
              "      <td>2023-09-02 13:46:58</td>\n",
              "      <td>MaiAnh</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>TungTran</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>AnhNguyen13</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Khác</td>\n",
              "      <td>nan</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123403369</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6908</th>\n",
              "      <td>2020-08-30</td>\n",
              "      <td>2023-08-30 14:30:12</td>\n",
              "      <td>YumiNguyen</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>HuyenNguyen</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Khác</td>\n",
              "      <td>nan</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123406906</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7068</th>\n",
              "      <td>2020-09-30</td>\n",
              "      <td>2023-09-30 15:50:27</td>\n",
              "      <td>HoanHao</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>HuyenNguyen04</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Khác</td>\n",
              "      <td>nan</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123407066</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-718fa43a-643f-4ce6-8470-c5ae62192622')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-718fa43a-643f-4ce6-8470-c5ae62192622 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-718fa43a-643f-4ce6-8470-c5ae62192622');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-15386258-9d83-43d2-9c3a-02bab15b1c5f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-15386258-9d83-43d2-9c3a-02bab15b1c5f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-15386258-9d83-43d2-9c3a-02bab15b1c5f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_c15e697b-451f-4b91-87f8-6dcbf69fbb2c\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('tt_null_row')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_c15e697b-451f-4b91-87f8-6dcbf69fbb2c button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('tt_null_row');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "tt_null_row",
              "summary": "{\n  \"name\": \"tt_null_row\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Ng\\u00e0y_th\\u00e1ng\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-08-15 00:00:00\",\n        \"max\": \"2020-09-30 00:00:00\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"2020-09-28 00:00:00\",\n          \"2020-09-02 00:00:00\",\n          \"2020-09-17 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gi\\u1edd\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-08-15 15:40:03\",\n        \"max\": \"2023-09-30 15:50:27\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"2023-09-28 21:30:09\",\n          \"2023-09-02 13:46:58\",\n          \"2023-09-17 17:16:32\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Kh\\u00e1ch h\\u00e0ng\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Nguy\\u1ec5nM\\u1ea1nhH\\u1ea3i\",\n          \"MaiAnh\",\n          \"L\\u01b0uTh\\u1ecbM\\u1ef9Huy\\u1ec1n\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Channel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Upsell\",\n          \"FB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chi\\u1ebfn d\\u1ecbch\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Upsell\",\n          \"CVS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marketer 2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"DucVu\",\n          \"TungTran\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type of Lead\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Dathang\",\n          \"Tuvan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"NgocDo\",\n          \"NganNguyen\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u1ea7n t\\u01b0\\u01a1ng t\\u00e1c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tr\\u1ea1ng th\\u00e1i\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ng\\u00e0y h\\u1eb9n g\\u1ecdi l\\u1ea1i\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"NaT\",\n        \"max\": \"NaT\",\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-09-30 00:00:00\",\n        \"max\": \"2023-09-30 00:00:00\",\n        \"num_unique_values\": 1,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ec9nh/TP\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1 l\\u01b0\\u1ee3ng b\\u1ed9 s\\u00e1ch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3535533905932738,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"T\\u1ed5ng ti\\u1ec1n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 176423,\n        \"min\": 0,\n        \"max\": 499000,\n        \"num_unique_values\": 2,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1_\\u0111i\\u1ec7n_tho\\u1ea1i\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"S\\u1ed1_ti\\u1ec1n_gi\\u1ea3m\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49497.474683058324,\n        \"min\": 0.0,\n        \"max\": 140000.0,\n        \"num_unique_values\": 2,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 506
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "** Note\n",
        "\n",
        "* Các dòng chứa giá trị số lần tương tác bị NULL đều ở trạng thái chưa tiếp cận được hoặc không có thông tin ngày gọi --> Fill số lần tương tác bằng 0"
      ],
      "metadata": {
        "id": "yAi7aq7toMQL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Số lần tương tác'].fillna(0, inplace = True)"
      ],
      "metadata": {
        "id": "jTAranOUox9l"
      },
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CỘT LEVEL"
      ],
      "metadata": {
        "id": "aD_Gcy7SpGV6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Level'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vefgpR56pPoB",
        "outputId": "27f10bca-0370-4160-ffac-365d999ac671"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Level\n",
              "L8.2 - Khách đã thanh toán toàn bộ      6098\n",
              "L7.2 - Hủy đơn sau khi chốt              669\n",
              "L3.1 - SQL - Đã được tư vấn đầy đủ       416\n",
              "L1.1 - Không nghe máy/Thuê bao           221\n",
              "L7.1 - Chờ chuyển khoản                  171\n",
              "L2.1 - MQL - Hẹn lúc khác gọi lại         88\n",
              "L5.2 - Từ chối                            84\n",
              "L4.1 - Băn khoăn về giá                   57\n",
              "L4.3 - Suy nghĩ thêm/Trả lời sau          50\n",
              "L3.2 - SQL - Chưa được tư vấn đầy đủ      36\n",
              "nan                                       35\n",
              "L4.2 - Băn khoăn chất lượng SP            23\n",
              "L2.2 - MQL - Không còn nhu cầu            23\n",
              "L1.3 - Không đăng ký                      13\n",
              "L3.3 - SQL - Chủ động dừng tư vấn         11\n",
              "C3.2 - Trùng                               9\n",
              "L8.1 - Khách đã thanh toán một phần        6\n",
              "L1.4 - Trêu đùa                            3\n",
              "L5.1 - Hỏi ý kiến người thân               3\n",
              "C3.1 - Sai số                              3\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw['Level'] = SaleRaw['Level'].replace({'nan':'Khác'})\n",
        "SaleRaw['Level'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LPapTT_BqSwp",
        "outputId": "90bd7de0-a5ce-4493-d3ed-87299a1ad912"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Level\n",
              "L8.2 - Khách đã thanh toán toàn bộ      6098\n",
              "L7.2 - Hủy đơn sau khi chốt              669\n",
              "L3.1 - SQL - Đã được tư vấn đầy đủ       416\n",
              "L1.1 - Không nghe máy/Thuê bao           221\n",
              "L7.1 - Chờ chuyển khoản                  171\n",
              "L2.1 - MQL - Hẹn lúc khác gọi lại         88\n",
              "L5.2 - Từ chối                            84\n",
              "L4.1 - Băn khoăn về giá                   57\n",
              "L4.3 - Suy nghĩ thêm/Trả lời sau          50\n",
              "L3.2 - SQL - Chưa được tư vấn đầy đủ      36\n",
              "Khác                                      35\n",
              "L4.2 - Băn khoăn chất lượng SP            23\n",
              "L2.2 - MQL - Không còn nhu cầu            23\n",
              "L1.3 - Không đăng ký                      13\n",
              "L3.3 - SQL - Chủ động dừng tư vấn         11\n",
              "C3.2 - Trùng                               9\n",
              "L8.1 - Khách đã thanh toán một phần        6\n",
              "L1.4 - Trêu đùa                            3\n",
              "L5.1 - Hỏi ý kiến người thân               3\n",
              "C3.1 - Sai số                              3\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "level_null_row = SaleRaw[SaleRaw[\"Level\"].isnull()]\n",
        "level_null_row"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 810
        },
        "id": "5ah15-mcqmcQ",
        "outputId": "370e30c7-6079-4101-820a-0e740e8ace71"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Ngày_tháng                 Giờ     Khách hàng Channel Chiến dịch  \\\n",
              "18   2020-07-01 2023-07-01 08:28:15        ThanhHà      FB        CVS   \n",
              "20   2020-07-01 2023-07-01 08:31:50         MyHanh      FB        CVS   \n",
              "26   2020-07-01 2023-07-01 09:47:47          Hường      FB        CVS   \n",
              "27   2020-07-01 2023-07-01 09:49:23         XnHang      FB        CVS   \n",
              "29   2020-07-01 2023-07-01 10:40:35  HuệTrầnSelena      FB        CVS   \n",
              "...         ...                 ...            ...     ...        ...   \n",
              "9468 2020-09-09 2023-09-09 19:58:12      PhuongMai      FB        CVS   \n",
              "9476 2020-09-09 2023-09-09 21:07:27       ĐiệpPhạm      FB        CVS   \n",
              "9481 2020-09-09 2023-09-09 21:31:52     HuuAnhDinh      FB        CVS   \n",
              "9498 2020-09-09 2023-09-09 11:23:30      TrangThan      FB       Mess   \n",
              "9503 2020-09-09 2023-09-09 20:28:09     LôThịNhung  Google     Search   \n",
              "\n",
              "       Marketer 2 Type of Lead          Sales  Số lần tương tác  \\\n",
              "18    AnhNguyen08        Tuvan  HuyenNguyen04               2.0   \n",
              "20    AnhNguyen08        Tuvan         NgocDo               2.0   \n",
              "26    YenNguyen02        Tuvan  HuyenNguyen04               2.0   \n",
              "27    YenNguyen02        Tuvan      HuongDinh               3.0   \n",
              "29    AnhNguyen08        Tuvan        NamPham               2.0   \n",
              "...           ...          ...            ...               ...   \n",
              "9468        False        Tuvan        NamPham               1.0   \n",
              "9476        False        Tuvan        NamPham               1.0   \n",
              "9481        False        Tuvan        NamPham               2.0   \n",
              "9498        False        Tuvan          AnhHa               3.0   \n",
              "9503        False        Tuvan        NamPham               1.0   \n",
              "\n",
              "                     Trạng thái Level Ngày hẹn gọi lại Close Date  Tỉnh/TP  \\\n",
              "18    Suy nghĩ thêm/Trả lời sau   NaN              NaT        NaT  Unknown   \n",
              "20               Không nghe máy   NaN              NaT        NaT  Unknown   \n",
              "26    Suy nghĩ thêm/Trả lời sau   NaN              NaT        NaT  Unknown   \n",
              "27                      Từ chối   NaN              NaT        NaT  Unknown   \n",
              "29                      Từ chối   NaN              NaT        NaT  Unknown   \n",
              "...                         ...   ...              ...        ...      ...   \n",
              "9468                    Từ chối   NaN              NaT        NaT  Unknown   \n",
              "9476  Suy nghĩ thêm/Trả lời sau   NaN              NaT        NaT  Unknown   \n",
              "9481                    Từ chối   NaN              NaT        NaT  Unknown   \n",
              "9498       Hẹn lúc khác gọi lại   NaN       2023-09-12        NaT  Unknown   \n",
              "9503                       Khác   NaN              NaT        NaT  Unknown   \n",
              "\n",
              "      Số lượng bộ sách  Tổng tiền Số_điện_thoại  Số_tiền_giảm  \n",
              "18                 0.0          0    0123400018           0.0  \n",
              "20                 0.0          0    0123400020           0.0  \n",
              "26                 0.0          0    0123400026           0.0  \n",
              "27                 0.0          0    0123400027           0.0  \n",
              "29                 0.0          0    0123400029           0.0  \n",
              "...                ...        ...           ...           ...  \n",
              "9468               0.0          0    0123409466           0.0  \n",
              "9476               0.0          0    0123409474           0.0  \n",
              "9481               0.0          0    0123409479           0.0  \n",
              "9498               0.0          0    0123409496           0.0  \n",
              "9503               0.0          0    0123409501           0.0  \n",
              "\n",
              "[1485 rows x 18 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-af799e04-22e1-47ce-885b-48088141fafa\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ngày_tháng</th>\n",
              "      <th>Giờ</th>\n",
              "      <th>Khách hàng</th>\n",
              "      <th>Channel</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Marketer 2</th>\n",
              "      <th>Type of Lead</th>\n",
              "      <th>Sales</th>\n",
              "      <th>Số lần tương tác</th>\n",
              "      <th>Trạng thái</th>\n",
              "      <th>Level</th>\n",
              "      <th>Ngày hẹn gọi lại</th>\n",
              "      <th>Close Date</th>\n",
              "      <th>Tỉnh/TP</th>\n",
              "      <th>Số lượng bộ sách</th>\n",
              "      <th>Tổng tiền</th>\n",
              "      <th>Số_điện_thoại</th>\n",
              "      <th>Số_tiền_giảm</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 08:28:15</td>\n",
              "      <td>ThanhHà</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>AnhNguyen08</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>HuyenNguyen04</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Suy nghĩ thêm/Trả lời sau</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400018</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 08:31:50</td>\n",
              "      <td>MyHanh</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>AnhNguyen08</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>NgocDo</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Không nghe máy</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400020</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 09:47:47</td>\n",
              "      <td>Hường</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>HuyenNguyen04</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Suy nghĩ thêm/Trả lời sau</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400026</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 09:49:23</td>\n",
              "      <td>XnHang</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>YenNguyen02</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>HuongDinh</td>\n",
              "      <td>3.0</td>\n",
              "      <td>Từ chối</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400027</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>2023-07-01 10:40:35</td>\n",
              "      <td>HuệTrầnSelena</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>AnhNguyen08</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>NamPham</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Từ chối</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123400029</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9468</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 19:58:12</td>\n",
              "      <td>PhuongMai</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>NamPham</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Từ chối</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409466</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9476</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 21:07:27</td>\n",
              "      <td>ĐiệpPhạm</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>NamPham</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Suy nghĩ thêm/Trả lời sau</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409474</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9481</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 21:31:52</td>\n",
              "      <td>HuuAnhDinh</td>\n",
              "      <td>FB</td>\n",
              "      <td>CVS</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>NamPham</td>\n",
              "      <td>2.0</td>\n",
              "      <td>Từ chối</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409479</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9498</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 11:23:30</td>\n",
              "      <td>TrangThan</td>\n",
              "      <td>FB</td>\n",
              "      <td>Mess</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>AnhHa</td>\n",
              "      <td>3.0</td>\n",
              "      <td>Hẹn lúc khác gọi lại</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2023-09-12</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409496</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9503</th>\n",
              "      <td>2020-09-09</td>\n",
              "      <td>2023-09-09 20:28:09</td>\n",
              "      <td>LôThịNhung</td>\n",
              "      <td>Google</td>\n",
              "      <td>Search</td>\n",
              "      <td>False</td>\n",
              "      <td>Tuvan</td>\n",
              "      <td>NamPham</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Khác</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0123409501</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1485 rows × 18 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af799e04-22e1-47ce-885b-48088141fafa')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-af799e04-22e1-47ce-885b-48088141fafa button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-af799e04-22e1-47ce-885b-48088141fafa');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a662341c-a094-4b30-9e85-c55b1936bc06\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a662341c-a094-4b30-9e85-c55b1936bc06')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a662341c-a094-4b30-9e85-c55b1936bc06 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_0bb52c97-bbd7-4765-9326-7e7629f6a20c\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('level_null_row')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_0bb52c97-bbd7-4765-9326-7e7629f6a20c button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('level_null_row');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "level_null_row",
              "repr_error": "0"
            }
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "level_null_row['Trạng thái'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wYtnecbvvUbX",
        "outputId": "8e2fc110-930d-4304-890e-15667dc0c499"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Trạng thái\n",
              "Suy nghĩ thêm/Trả lời sau    647\n",
              "Không nghe máy               320\n",
              "Từ chối                      203\n",
              "Hẹn lúc khác gọi lại         173\n",
              "Khác                          80\n",
              "Đặt hàng                      59\n",
              "Hủy đơn sau khi chốt           3\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "* Dựa vào giá tị ở cột trạng thái để Fill giá trị NULL ở cột Level\n",
        "* Tách riêng phần NULL và không sau đó gộp lại"
      ],
      "metadata": {
        "id": "RauaYFsJB_lU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Xây dựng hàm để fill Trạng Thái\n",
        "def level_filler(title):\n",
        "    if 'suy nghĩ thêm/trả lời sau' in title.lower():\n",
        "            return 'L4.3 - Suy nghĩ thêm/Trả lời sau'\n",
        "    elif 'không nghe máy' in title.lower():\n",
        "        return 'L1.1 - Không nghe máy/Thuê bao'\n",
        "    elif 'từ chối' in title.lower():\n",
        "        return 'Từ chối'\n",
        "    elif 'Hẹn lúc khác gọi lại' in title.lower():\n",
        "        return 'L2.1 - MQL - Hẹn lúc khác gọi lại'\n",
        "    elif 'Hủy đơn sau khi chốt' in title.lower():\n",
        "        return 'L7.2 - Hủy đơn sau khi chốt'\n",
        "    elif 'đặt hàng' in title.lower():\n",
        "        return 'L8.2 - Khách đã thanh toán toàn bộ'\n",
        "    else:\n",
        "        return 'Khác'"
      ],
      "metadata": {
        "id": "wo0nGGpsv64N"
      },
      "execution_count": 52,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "level_null_row['Level']= level_null_row['Trạng thái'].apply(level_filler)\n",
        "level_null_row['Level'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HMtntwAIxayn",
        "outputId": "66e89335-a191-4dbd-9dcf-c1e21c650ea8"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-53-a9cd65e32635>:1: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  level_null_row['Level']= level_null_row['Trạng thái'].apply(level_filler)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Level\n",
              "L4.3 - Suy nghĩ thêm/Trả lời sau      647\n",
              "L1.1 - Không nghe máy/Thuê bao        320\n",
              "Khác                                  256\n",
              "Từ chối                               203\n",
              "L8.2 - Khách đã thanh toán toàn bộ     59\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "frame1 = [SaleRaw, level_null_row]\n",
        "\n",
        "SaleRaw = pd.concat(frame1)"
      ],
      "metadata": {
        "id": "3zJdkvMjx9nA"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw.dropna(subset=['Level'], inplace = True)"
      ],
      "metadata": {
        "id": "zz44DoW6yMmC"
      },
      "execution_count": 55,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleRaw.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RSXWdE8AySoJ",
        "outputId": "0add6ef6-27d2-4cbc-ad82-d325c1c89bd0"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 9504 entries, 0 to 9503\n",
            "Data columns (total 18 columns):\n",
            " #   Column            Non-Null Count  Dtype         \n",
            "---  ------            --------------  -----         \n",
            " 0   Ngày_tháng        9504 non-null   datetime64[ns]\n",
            " 1   Giờ               9504 non-null   datetime64[ns]\n",
            " 2   Khách hàng        9504 non-null   object        \n",
            " 3   Channel           9504 non-null   object        \n",
            " 4   Chiến dịch        9504 non-null   object        \n",
            " 5   Marketer 2        9504 non-null   object        \n",
            " 6   Type of Lead      9504 non-null   object        \n",
            " 7   Sales             9504 non-null   object        \n",
            " 8   Số lần tương tác  9504 non-null   float64       \n",
            " 9   Trạng thái        9504 non-null   object        \n",
            " 10  Level             9504 non-null   object        \n",
            " 11  Ngày hẹn gọi lại  48 non-null     datetime64[ns]\n",
            " 12  Close Date        6161 non-null   datetime64[ns]\n",
            " 13  Tỉnh/TP           9504 non-null   object        \n",
            " 14  Số lượng bộ sách  9504 non-null   float64       \n",
            " 15  Tổng tiền         9504 non-null   int64         \n",
            " 16  Số_điện_thoại     9504 non-null   object        \n",
            " 17  Số_tiền_giảm      9504 non-null   float64       \n",
            "dtypes: datetime64[ns](4), float64(3), int64(1), object(10)\n",
            "memory usage: 1.4+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "SaleClean = SaleRaw.copy()"
      ],
      "metadata": {
        "id": "6aoA5IDjzYmX"
      },
      "execution_count": 59,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "SaleClean.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "F_5nrWU-zeBQ",
        "outputId": "5ccea4dc-eccc-4ba9-fe25-c69e48b834b6"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 9504 entries, 0 to 9503\n",
            "Data columns (total 18 columns):\n",
            " #   Column            Non-Null Count  Dtype         \n",
            "---  ------            --------------  -----         \n",
            " 0   Ngày_tháng        9504 non-null   datetime64[ns]\n",
            " 1   Giờ               9504 non-null   datetime64[ns]\n",
            " 2   Khách hàng        9504 non-null   object        \n",
            " 3   Channel           9504 non-null   object        \n",
            " 4   Chiến dịch        9504 non-null   object        \n",
            " 5   Marketer 2        9504 non-null   object        \n",
            " 6   Type of Lead      9504 non-null   object        \n",
            " 7   Sales             9504 non-null   object        \n",
            " 8   Số lần tương tác  9504 non-null   float64       \n",
            " 9   Trạng thái        9504 non-null   object        \n",
            " 10  Level             9504 non-null   object        \n",
            " 11  Ngày hẹn gọi lại  48 non-null     datetime64[ns]\n",
            " 12  Close Date        6161 non-null   datetime64[ns]\n",
            " 13  Tỉnh/TP           9504 non-null   object        \n",
            " 14  Số lượng bộ sách  9504 non-null   float64       \n",
            " 15  Tổng tiền         9504 non-null   int64         \n",
            " 16  Số_điện_thoại     9504 non-null   object        \n",
            " 17  Số_tiền_giảm      9504 non-null   float64       \n",
            "dtypes: datetime64[ns](4), float64(3), int64(1), object(10)\n",
            "memory usage: 1.4+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Export File CSV\n",
        "SaleClean.to_csv('/content/drive/My Drive/SaleClean.csv', index=False)"
      ],
      "metadata": {
        "id": "vteThjsozXdv"
      },
      "execution_count": 61,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# TABLE MKT"
      ],
      "metadata": {
        "id": "XKXmb72fzmfx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Import Data\n",
        "MKTRaw = pd.read_excel('/content/drive/MyDrive/MKT.xlsx')\n",
        "MKTRaw.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 389
        },
        "id": "_v52ZhVLzphs",
        "outputId": "cc022381-6d2a-46e7-8773-f0335705e331"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Date Channel    MKTer Chiến dịch  Chi phí Marketing  Impression  \\\n",
              "0 2020-07-01      FB    DucVu        CVS                  0           0   \n",
              "1 2020-07-01      FB    DucVu       Mess                  0           0   \n",
              "2 2020-07-01      FB    DucVu      Brand             259352       61673   \n",
              "3 2020-07-01      FB  NgocNgo        CVS            4541746       95958   \n",
              "4 2020-07-01      FB  NgocNgo      Brand                  0           0   \n",
              "\n",
              "     Reach  Click  Share  Cmt  ... Lead MKT  Đơn hàng     Doanh thu  \\\n",
              "0      0.0      0      0    0  ...        1   1.00000  4.990000e+05   \n",
              "1      0.0      0      0    0  ...        3   1.00000  4.990000e+05   \n",
              "2  59968.0    271      0    0  ...        0   0.00000  0.000000e+00   \n",
              "3  76992.0    386      4   26  ...       40  31.73913  1.583783e+07   \n",
              "4      0.0      0      0    0  ...        0   0.00000  0.000000e+00   \n",
              "\n",
              "   Paid Revenue 1   Giá Lead  Đơn/Lead           CPM           CPC  \\\n",
              "0          499000       0.00  1.000000      0.000000      0.000000   \n",
              "1          499000       0.00  0.333333      0.000000      0.000000   \n",
              "2               0       0.00  0.000000   4205.276215    957.018450   \n",
              "3        12974000  113543.65  0.793478  47330.561287  11766.181347   \n",
              "4               0       0.00  0.000000      0.000000      0.000000   \n",
              "\n",
              "   Giá Mess\\n(Cmt + Inbox)  ME1 (ME đã bao gồm thuế + phí)  \n",
              "0                 0.000000                            0.00  \n",
              "1                 0.000000                            0.00  \n",
              "2                 0.000000                       280100.16  \n",
              "3            174682.538462                      4905085.68  \n",
              "4                 0.000000                            0.00  \n",
              "\n",
              "[5 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-062c3d3e-4f6e-4679-bcf7-fa1fac64b4cb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Channel</th>\n",
              "      <th>MKTer</th>\n",
              "      <th>Chiến dịch</th>\n",
              "      <th>Chi phí Marketing</th>\n",
              "      <th>Impression</th>\n",
              "      <th>Reach</th>\n",
              "      <th>Click</th>\n",
              "      <th>Share</th>\n",
              "      <th>Cmt</th>\n",
              "      <th>...</th>\n",
              "      <th>Lead MKT</th>\n",
              "      <th>Đơn hàng</th>\n",
              "      <th>Doanh thu</th>\n",
              "      <th>Paid Revenue 1</th>\n",
              "      <th>Giá Lead</th>\n",
              "      <th>Đơn/Lead</th>\n",
              "      <th>CPM</th>\n",
              "      <th>CPC</th>\n",
              "      <th>Giá Mess\\n(Cmt + Inbox)</th>\n",
              "      <th>ME1 (ME đã bao gồm thuế + phí)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>FB</td>\n",
              "      <td>DucVu</td>\n",
              "      <td>CVS</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>499000</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>FB</td>\n",
              "      <td>DucVu</td>\n",
              "      <td>Mess</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>4.990000e+05</td>\n",
              "      <td>499000</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>FB</td>\n",
              "      <td>DucVu</td>\n",
              "      <td>Brand</td>\n",
              "      <td>259352</td>\n",
              "      <td>61673</td>\n",
              "      <td>59968.0</td>\n",
              "      <td>271</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>4205.276215</td>\n",
              "      <td>957.018450</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>280100.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>FB</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>CVS</td>\n",
              "      <td>4541746</td>\n",
              "      <td>95958</td>\n",
              "      <td>76992.0</td>\n",
              "      <td>386</td>\n",
              "      <td>4</td>\n",
              "      <td>26</td>\n",
              "      <td>...</td>\n",
              "      <td>40</td>\n",
              "      <td>31.73913</td>\n",
              "      <td>1.583783e+07</td>\n",
              "      <td>12974000</td>\n",
              "      <td>113543.65</td>\n",
              "      <td>0.793478</td>\n",
              "      <td>47330.561287</td>\n",
              "      <td>11766.181347</td>\n",
              "      <td>174682.538462</td>\n",
              "      <td>4905085.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2020-07-01</td>\n",
              "      <td>FB</td>\n",
              "      <td>NgocNgo</td>\n",
              "      <td>Brand</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-062c3d3e-4f6e-4679-bcf7-fa1fac64b4cb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-062c3d3e-4f6e-4679-bcf7-fa1fac64b4cb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-062c3d3e-4f6e-4679-bcf7-fa1fac64b4cb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5aa3bd02-23e0-46a1-8dd6-d75640961e93\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5aa3bd02-23e0-46a1-8dd6-d75640961e93')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5aa3bd02-23e0-46a1-8dd6-d75640961e93 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "MKTRaw"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "MKTRaw.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FVWK4v9ez3HG",
        "outputId": "84c84cfb-1674-441f-d358-d947f35eccb7"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1511 entries, 0 to 1510\n",
            "Data columns (total 21 columns):\n",
            " #   Column                          Non-Null Count  Dtype         \n",
            "---  ------                          --------------  -----         \n",
            " 0   Date                            1511 non-null   datetime64[ns]\n",
            " 1   Channel                         1511 non-null   object        \n",
            " 2   MKTer                           1511 non-null   object        \n",
            " 3   Chiến dịch                      1511 non-null   object        \n",
            " 4   Chi phí Marketing               1511 non-null   int64         \n",
            " 5   Impression                      1511 non-null   int64         \n",
            " 6   Reach                           1511 non-null   float64       \n",
            " 7   Click                           1511 non-null   int64         \n",
            " 8   Share                           1511 non-null   int64         \n",
            " 9   Cmt                             1511 non-null   int64         \n",
            " 10  Inbox                           1511 non-null   object        \n",
            " 11  Lead MKT                        1511 non-null   int64         \n",
            " 12  Đơn hàng                        1511 non-null   float64       \n",
            " 13  Doanh thu                       1511 non-null   float64       \n",
            " 14  Paid Revenue 1                  1511 non-null   int64         \n",
            " 15  Giá Lead                        1511 non-null   float64       \n",
            " 16  Đơn/Lead                        1511 non-null   float64       \n",
            " 17  CPM                             1511 non-null   float64       \n",
            " 18  CPC                             1511 non-null   float64       \n",
            " 19  Giá Mess\n",
            "(Cmt + Inbox)          1511 non-null   float64       \n",
            " 20  ME1 (ME đã bao gồm thuế + phí)  1497 non-null   float64       \n",
            "dtypes: datetime64[ns](1), float64(9), int64(7), object(4)\n",
            "memory usage: 248.0+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "MKTRaw['Chiến dịch'] = MKTRaw['Chiến dịch'].replace({'Guu-PerMax':'PerMax', 'Guu-Discovery':'Discovery', 'Guu-Search':'Search'})\n",
        "MKTRaw['Chiến dịch'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iiW4Ac5n4usZ",
        "outputId": "936efd83-02a2-432e-ef8d-08c798813b7d"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Chiến dịch\n",
              "CVS          597\n",
              "Brand        269\n",
              "Search       184\n",
              "Discovery    184\n",
              "PerMax       184\n",
              "Mess          93\n",
              "Name: count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "MKTRaw.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 470
        },
        "id": "ViNtenOc5BNr",
        "outputId": "d9b34bca-e16e-4fdc-f62c-8df327cf19f1"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                Date  Chi phí Marketing     Impression  \\\n",
              "count                           1511       1.511000e+03    1511.000000   \n",
              "mean   2020-08-13 07:17:25.929847552       9.576605e+05   15595.201191   \n",
              "min              2020-07-01 00:00:00       0.000000e+00       0.000000   \n",
              "25%              2020-07-21 00:00:00       0.000000e+00       0.000000   \n",
              "50%              2020-08-12 00:00:00       1.657470e+05    5201.000000   \n",
              "75%              2020-09-05 00:00:00       4.750565e+05   13846.000000   \n",
              "max              2020-09-30 00:00:00       1.143159e+08  345375.000000   \n",
              "std                              NaN       3.911161e+06   34776.338043   \n",
              "\n",
              "               Reach        Click        Share          Cmt     Lead MKT  \\\n",
              "count    1511.000000  1511.000000  1511.000000  1511.000000  1511.000000   \n",
              "mean    10133.019394   132.825943     1.665784     2.903375     6.129054   \n",
              "min         0.000000     0.000000     0.000000     0.000000     0.000000   \n",
              "25%         0.000000     0.000000     0.000000     0.000000     0.000000   \n",
              "50%         0.000000    50.000000     0.000000     0.000000     1.000000   \n",
              "75%      3087.500000   134.000000     0.000000     0.000000     3.000000   \n",
              "max    320881.000000  2160.000000   194.000000   170.000000   246.000000   \n",
              "std     28934.097052   234.532957     9.022937    10.420938    18.201773   \n",
              "\n",
              "          Đơn hàng     Doanh thu  Paid Revenue 1      Giá Lead     Đơn/Lead  \\\n",
              "count  1511.000000  1.511000e+03    1.511000e+03  1.511000e+03  1511.000000   \n",
              "mean      4.483498  2.277133e+06    1.696979e+06  1.209406e+05     0.417266   \n",
              "min       0.000000  0.000000e+00    0.000000e+00  0.000000e+00     0.000000   \n",
              "25%       0.000000  0.000000e+00    0.000000e+00  0.000000e+00     0.000000   \n",
              "50%       0.956522  4.773043e+05    0.000000e+00  0.000000e+00     0.333333   \n",
              "75%       2.456522  1.475304e+06    9.980000e+05  1.466558e+05     0.913576   \n",
              "max     173.434783  9.010065e+07    5.735700e+07  1.893947e+07     1.000000   \n",
              "std      13.403149  6.802424e+06    4.965602e+06  6.952882e+05     0.436159   \n",
              "\n",
              "                 CPM            CPC  Giá Mess\\n(Cmt + Inbox)  \\\n",
              "count    1511.000000    1511.000000             1.511000e+03   \n",
              "mean    36071.155702    7580.714633             6.447231e+04   \n",
              "min         0.000000       0.000000             0.000000e+00   \n",
              "25%         0.000000       0.000000             0.000000e+00   \n",
              "50%     19913.317384    1638.044118             0.000000e+00   \n",
              "75%     64209.107443    4012.439623             0.000000e+00   \n",
              "max    400666.851626  441035.714286             1.827395e+06   \n",
              "std     44912.709341   19062.692225             1.720288e+05   \n",
              "\n",
              "       ME1 (ME đã bao gồm thuế + phí)  \n",
              "count                    1.497000e+03  \n",
              "mean                     1.036856e+06  \n",
              "min                      0.000000e+00  \n",
              "25%                      0.000000e+00  \n",
              "50%                      1.730770e+05  \n",
              "75%                      4.912610e+05  \n",
              "max                      1.234611e+08  \n",
              "std                      4.243779e+06  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6508b6be-0915-439d-acc2-b134df129a45\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Chi phí Marketing</th>\n",
              "      <th>Impression</th>\n",
              "      <th>Reach</th>\n",
              "      <th>Click</th>\n",
              "      <th>Share</th>\n",
              "      <th>Cmt</th>\n",
              "      <th>Lead MKT</th>\n",
              "      <th>Đơn hàng</th>\n",
              "      <th>Doanh thu</th>\n",
              "      <th>Paid Revenue 1</th>\n",
              "      <th>Giá Lead</th>\n",
              "      <th>Đơn/Lead</th>\n",
              "      <th>CPM</th>\n",
              "      <th>CPC</th>\n",
              "      <th>Giá Mess\\n(Cmt + Inbox)</th>\n",
              "      <th>ME1 (ME đã bao gồm thuế + phí)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1511</td>\n",
              "      <td>1.511000e+03</td>\n",
              "      <td>1511.000000</td>\n",
              "      <td>1511.000000</td>\n",
              "      <td>1511.000000</td>\n",
              "      <td>1511.000000</td>\n",
              "      <td>1511.000000</td>\n",
              "      <td>1511.000000</td>\n",
              "      <td>1511.000000</td>\n",
              "      <td>1.511000e+03</td>\n",
              "      <td>1.511000e+03</td>\n",
              "      <td>1.511000e+03</td>\n",
              "      <td>1511.000000</td>\n",
              "      <td>1511.000000</td>\n",
              "      <td>1511.000000</td>\n",
              "      <td>1.511000e+03</td>\n",
              "      <td>1.497000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>2020-08-13 07:17:25.929847552</td>\n",
              "      <td>9.576605e+05</td>\n",
              "      <td>15595.201191</td>\n",
              "      <td>10133.019394</td>\n",
              "      <td>132.825943</td>\n",
              "      <td>1.665784</td>\n",
              "      <td>2.903375</td>\n",
              "      <td>6.129054</td>\n",
              "      <td>4.483498</td>\n",
              "      <td>2.277133e+06</td>\n",
              "      <td>1.696979e+06</td>\n",
              "      <td>1.209406e+05</td>\n",
              "      <td>0.417266</td>\n",
              "      <td>36071.155702</td>\n",
              "      <td>7580.714633</td>\n",
              "      <td>6.447231e+04</td>\n",
              "      <td>1.036856e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>2020-07-01 00:00:00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2020-07-21 00:00:00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>2020-08-12 00:00:00</td>\n",
              "      <td>1.657470e+05</td>\n",
              "      <td>5201.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>50.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.956522</td>\n",
              "      <td>4.773043e+05</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>19913.317384</td>\n",
              "      <td>1638.044118</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.730770e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2020-09-05 00:00:00</td>\n",
              "      <td>4.750565e+05</td>\n",
              "      <td>13846.000000</td>\n",
              "      <td>3087.500000</td>\n",
              "      <td>134.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>2.456522</td>\n",
              "      <td>1.475304e+06</td>\n",
              "      <td>9.980000e+05</td>\n",
              "      <td>1.466558e+05</td>\n",
              "      <td>0.913576</td>\n",
              "      <td>64209.107443</td>\n",
              "      <td>4012.439623</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>4.912610e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2020-09-30 00:00:00</td>\n",
              "      <td>1.143159e+08</td>\n",
              "      <td>345375.000000</td>\n",
              "      <td>320881.000000</td>\n",
              "      <td>2160.000000</td>\n",
              "      <td>194.000000</td>\n",
              "      <td>170.000000</td>\n",
              "      <td>246.000000</td>\n",
              "      <td>173.434783</td>\n",
              "      <td>9.010065e+07</td>\n",
              "      <td>5.735700e+07</td>\n",
              "      <td>1.893947e+07</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>400666.851626</td>\n",
              "      <td>441035.714286</td>\n",
              "      <td>1.827395e+06</td>\n",
              "      <td>1.234611e+08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>NaN</td>\n",
              "      <td>3.911161e+06</td>\n",
              "      <td>34776.338043</td>\n",
              "      <td>28934.097052</td>\n",
              "      <td>234.532957</td>\n",
              "      <td>9.022937</td>\n",
              "      <td>10.420938</td>\n",
              "      <td>18.201773</td>\n",
              "      <td>13.403149</td>\n",
              "      <td>6.802424e+06</td>\n",
              "      <td>4.965602e+06</td>\n",
              "      <td>6.952882e+05</td>\n",
              "      <td>0.436159</td>\n",
              "      <td>44912.709341</td>\n",
              "      <td>19062.692225</td>\n",
              "      <td>1.720288e+05</td>\n",
              "      <td>4.243779e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6508b6be-0915-439d-acc2-b134df129a45')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6508b6be-0915-439d-acc2-b134df129a45 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6508b6be-0915-439d-acc2-b134df129a45');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ad9178ad-0ca1-44a3-ad4a-216797b6585f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ad9178ad-0ca1-44a3-ad4a-216797b6585f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ad9178ad-0ca1-44a3-ad4a-216797b6585f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"MKTRaw\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000001511\",\n        \"max\": \"2020-09-30 00:00:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"1511\",\n          \"2020-08-13 07:17:25.929847552\",\n          \"2020-09-05 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chi ph\\u00ed Marketing\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40159984.471310064,\n        \"min\": 0.0,\n        \"max\": 114315864.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1511.0,\n          957660.4996690933,\n          114315864.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impression\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 119100.11165732384,\n        \"min\": 0.0,\n        \"max\": 345375.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1511.0,\n          15595.201191264063,\n          345375.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reach\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 111678.43668780496,\n        \"min\": 0.0,\n        \"max\": 320881.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1511.0,\n          10133.019393778954,\n          28934.097052499354\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Click\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 829.2239145917393,\n        \"min\": 0.0,\n        \"max\": 2160.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1511.0,\n          132.8259430840503,\n          2160.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 528.1899975681512,\n        \"min\": 0.0,\n        \"max\": 1511.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.6657842488418266,\n          9.022936962041255,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cmt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 528.2445545117757,\n        \"min\": 0.0,\n        \"max\": 1511.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2.903375248180013,\n          10.420938320879381,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lead MKT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 527.2015201506018,\n        \"min\": 0.0,\n        \"max\": 1511.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1511.0,\n          6.129053606882859,\n          246.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0110\\u01a1n h\\u00e0ng\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 527.7602347956612,\n        \"min\": 0.0,\n        \"max\": 1511.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1511.0,\n          4.483497827525681,\n          173.43478260869566\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Doanh thu\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31381229.861430794,\n        \"min\": 0.0,\n        \"max\": 90100652.17391305,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1511.0,\n          2277132.767674733,\n          90100652.17391305\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Paid Revenue 1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19963978.671120383,\n        \"min\": 0.0,\n        \"max\": 57357000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1511.0,\n          1696978.5076108538,\n          4965602.21108113\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gi\\u00e1 Lead\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6651558.740850158,\n        \"min\": 0.0,\n        \"max\": 18939471.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1511.0,\n          120940.60734068925,\n          695288.2281413883\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0110\\u01a1n/Lead\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 534.0627079407079,\n        \"min\": 0.0,\n        \"max\": 1511.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1511.0,\n          0.41726593001539136,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 135302.53211943543,\n        \"min\": 0.0,\n        \"max\": 400666.8516257907,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1511.0,\n          36071.15570184237,\n          400666.8516257907\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 154351.2787304915,\n        \"min\": 0.0,\n        \"max\": 441035.71428571426,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1511.0,\n          7580.714632710196,\n          441035.71428571426\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gi\\u00e1 Mess\\n(Cmt + Inbox)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 636944.383343919,\n        \"min\": 0.0,\n        \"max\": 1827395.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          64472.312489482545,\n          172028.83714205067,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ME1 (ME \\u0111\\u00e3 bao g\\u1ed3m thu\\u1ebf + ph\\u00ed)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 43373323.70335612,\n        \"min\": 0.0,\n        \"max\": 123461133.12,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1497.0,\n          1036855.6368937878,\n          123461133.12\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "MKTRaw.isin([np.inf, -np.inf]).any()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9OzoIV-583ka",
        "outputId": "7b35f7d8-2750-4f6e-8e57-c10e1166e571"
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date                              False\n",
              "Channel                           False\n",
              "MKTer                             False\n",
              "Chiến dịch                        False\n",
              "Chi phí Marketing                 False\n",
              "Impression                        False\n",
              "Reach                             False\n",
              "Click                             False\n",
              "Share                             False\n",
              "Cmt                               False\n",
              "Inbox                             False\n",
              "Lead MKT                          False\n",
              "Đơn hàng                          False\n",
              "Doanh thu                         False\n",
              "Paid Revenue 1                    False\n",
              "Giá Lead                          False\n",
              "Đơn/Lead                          False\n",
              "CPM                               False\n",
              "CPC                               False\n",
              "Giá Mess\\n(Cmt + Inbox)           False\n",
              "ME1 (ME đã bao gồm thuế + phí)    False\n",
              "dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "** Note\n",
        "\n",
        "* Bảng dữ liệu có 1511 dòng, 21 cột dữ liệu\n",
        "* Các cột dữ liệu đều đang để đúng định dạng dữ liệu\n",
        "* Không chứa giá trị inf\n",
        "* Research thêm có thể transform thành các feature có ích hơn được không"
      ],
      "metadata": {
        "id": "zm4BpgGh65ad"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "MKTClean = MKTRaw.copy()"
      ],
      "metadata": {
        "id": "T9xkW83LrgBU"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Export File CSV\n",
        "MKTClean.to_csv('/content/drive/My Drive/MKTClean.csv', index=False)"
      ],
      "metadata": {
        "id": "s0gZH4_rrVSG"
      },
      "execution_count": 9,
      "outputs": []
    }
  ]
}